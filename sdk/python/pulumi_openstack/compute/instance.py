# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class Instance(pulumi.CustomResource):
    """
    Manages a V2 VM instance resource within OpenStack.
    """
    def __init__(__self__, __name__, __opts__=None, access_ip_v4=None, access_ip_v6=None, admin_pass=None, availability_zone=None, block_devices=None, config_drive=None, flavor_id=None, flavor_name=None, force_delete=None, image_id=None, image_name=None, key_pair=None, metadata=None, name=None, networks=None, personalities=None, power_state=None, region=None, scheduler_hints=None, security_groups=None, stop_before_destroy=None, user_data=None, vendor_options=None):
        """Create a Instance resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['access_ip_v4'] = access_ip_v4

        __props__['access_ip_v6'] = access_ip_v6

        __props__['admin_pass'] = admin_pass

        __props__['availability_zone'] = availability_zone

        __props__['block_devices'] = block_devices

        __props__['config_drive'] = config_drive

        __props__['flavor_id'] = flavor_id

        __props__['flavor_name'] = flavor_name

        __props__['force_delete'] = force_delete

        __props__['image_id'] = image_id

        __props__['image_name'] = image_name

        __props__['key_pair'] = key_pair

        __props__['metadata'] = metadata

        __props__['name'] = name

        __props__['networks'] = networks

        __props__['personalities'] = personalities

        __props__['power_state'] = power_state

        __props__['region'] = region

        __props__['scheduler_hints'] = scheduler_hints

        __props__['security_groups'] = security_groups

        __props__['stop_before_destroy'] = stop_before_destroy

        __props__['user_data'] = user_data

        __props__['vendor_options'] = vendor_options

        __props__['all_metadata'] = None

        super(Instance, __self__).__init__(
            'openstack:compute/instance:Instance',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

