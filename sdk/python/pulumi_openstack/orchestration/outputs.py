# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'StackV1StackOutput',
]

@pulumi.output_type
class StackV1StackOutput(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "outputKey":
            suggest = "output_key"
        elif key == "outputValue":
            suggest = "output_value"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in StackV1StackOutput. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        StackV1StackOutput.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        StackV1StackOutput.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 output_key: str,
                 output_value: str,
                 description: Optional[str] = None):
        """
        :param str description: The description of the stack resource.
        """
        StackV1StackOutput._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            output_key=output_key,
            output_value=output_value,
            description=description,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             output_key: Optional[str] = None,
             output_value: Optional[str] = None,
             description: Optional[str] = None,
             opts: Optional[pulumi.ResourceOptions] = None,
             **kwargs):
        if output_key is None and 'outputKey' in kwargs:
            output_key = kwargs['outputKey']
        if output_key is None:
            raise TypeError("Missing 'output_key' argument")
        if output_value is None and 'outputValue' in kwargs:
            output_value = kwargs['outputValue']
        if output_value is None:
            raise TypeError("Missing 'output_value' argument")

        _setter("output_key", output_key)
        _setter("output_value", output_value)
        if description is not None:
            _setter("description", description)

    @property
    @pulumi.getter(name="outputKey")
    def output_key(self) -> str:
        return pulumi.get(self, "output_key")

    @property
    @pulumi.getter(name="outputValue")
    def output_value(self) -> str:
        return pulumi.get(self, "output_value")

    @property
    @pulumi.getter
    def description(self) -> Optional[str]:
        """
        The description of the stack resource.
        """
        return pulumi.get(self, "description")


