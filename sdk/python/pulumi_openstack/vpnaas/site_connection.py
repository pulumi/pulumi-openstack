# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class SiteConnection(pulumi.CustomResource):
    """
    Manages a V2 Neutron IPSec site connection resource within OpenStack.
    """
    def __init__(__self__, __name__, __opts__=None, admin_state_up=None, description=None, dpds=None, ikepolicy_id=None, initiator=None, ipsecpolicy_id=None, local_ep_group_id=None, local_id=None, mtu=None, name=None, peer_address=None, peer_cidrs=None, peer_ep_group_id=None, peer_id=None, psk=None, region=None, tenant_id=None, value_specs=None, vpnservice_id=None):
        """Create a SiteConnection resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['admin_state_up'] = admin_state_up

        __props__['description'] = description

        __props__['dpds'] = dpds

        if not ikepolicy_id:
            raise TypeError('Missing required property ikepolicy_id')
        __props__['ikepolicy_id'] = ikepolicy_id

        __props__['initiator'] = initiator

        if not ipsecpolicy_id:
            raise TypeError('Missing required property ipsecpolicy_id')
        __props__['ipsecpolicy_id'] = ipsecpolicy_id

        __props__['local_ep_group_id'] = local_ep_group_id

        __props__['local_id'] = local_id

        __props__['mtu'] = mtu

        __props__['name'] = name

        if not peer_address:
            raise TypeError('Missing required property peer_address')
        __props__['peer_address'] = peer_address

        __props__['peer_cidrs'] = peer_cidrs

        __props__['peer_ep_group_id'] = peer_ep_group_id

        if not peer_id:
            raise TypeError('Missing required property peer_id')
        __props__['peer_id'] = peer_id

        if not psk:
            raise TypeError('Missing required property psk')
        __props__['psk'] = psk

        __props__['region'] = region

        __props__['tenant_id'] = tenant_id

        __props__['value_specs'] = value_specs

        if not vpnservice_id:
            raise TypeError('Missing required property vpnservice_id')
        __props__['vpnservice_id'] = vpnservice_id

        super(SiteConnection, __self__).__init__(
            'openstack:vpnaas/siteConnection:SiteConnection',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

