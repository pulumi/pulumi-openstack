# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class FloatingIp(pulumi.CustomResource):
    """
    Manages a V2 floating IP resource within OpenStack Neutron (networking)
    that can be used for load balancers.
    These are similar to Nova (compute) floating IP resources,
    but only compute floating IPs can be used with compute instances.
    """
    def __init__(__self__, __name__, __opts__=None, address=None, fixed_ip=None, pool=None, port_id=None, region=None, subnet_id=None, tenant_id=None, value_specs=None):
        """Create a FloatingIp resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['address'] = address

        __props__['fixedIp'] = fixed_ip

        if not pool:
            raise TypeError('Missing required property pool')
        __props__['pool'] = pool

        __props__['portId'] = port_id

        __props__['region'] = region

        __props__['subnetId'] = subnet_id

        __props__['tenantId'] = tenant_id

        __props__['valueSpecs'] = value_specs

        super(FloatingIp, __self__).__init__(
            'openstack:networking/floatingIp:FloatingIp',
            __name__,
            __props__,
            __opts__)

