// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package loadbalancer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type PoolPersistence struct {
	// The name of the cookie if persistence mode is set
	// appropriately. Required if `type = APP_COOKIE`.
	CookieName *string `pulumi:"cookieName"`
	// The type of persistence mode. The current specification
	// supports SOURCE_IP, HTTP_COOKIE, and APP_COOKIE.
	Type string `pulumi:"type"`
}

type PoolPersistenceInput interface {
	pulumi.Input

	ToPoolPersistenceOutput() PoolPersistenceOutput
	ToPoolPersistenceOutputWithContext(context.Context) PoolPersistenceOutput
}

type PoolPersistenceArgs struct {
	// The name of the cookie if persistence mode is set
	// appropriately. Required if `type = APP_COOKIE`.
	CookieName pulumi.StringPtrInput `pulumi:"cookieName"`
	// The type of persistence mode. The current specification
	// supports SOURCE_IP, HTTP_COOKIE, and APP_COOKIE.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PoolPersistenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolPersistence)(nil)).Elem()
}

func (i PoolPersistenceArgs) ToPoolPersistenceOutput() PoolPersistenceOutput {
	return i.ToPoolPersistenceOutputWithContext(context.Background())
}

func (i PoolPersistenceArgs) ToPoolPersistenceOutputWithContext(ctx context.Context) PoolPersistenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolPersistenceOutput)
}

func (i PoolPersistenceArgs) ToPoolPersistencePtrOutput() PoolPersistencePtrOutput {
	return i.ToPoolPersistencePtrOutputWithContext(context.Background())
}

func (i PoolPersistenceArgs) ToPoolPersistencePtrOutputWithContext(ctx context.Context) PoolPersistencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolPersistenceOutput).ToPoolPersistencePtrOutputWithContext(ctx)
}

type PoolPersistencePtrInput interface {
	pulumi.Input

	ToPoolPersistencePtrOutput() PoolPersistencePtrOutput
	ToPoolPersistencePtrOutputWithContext(context.Context) PoolPersistencePtrOutput
}

type poolPersistencePtrType PoolPersistenceArgs

func PoolPersistencePtr(v *PoolPersistenceArgs) PoolPersistencePtrInput {	return (*poolPersistencePtrType)(v)
}

func (*poolPersistencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolPersistence)(nil)).Elem()
}

func (i *poolPersistencePtrType) ToPoolPersistencePtrOutput() PoolPersistencePtrOutput {
	return i.ToPoolPersistencePtrOutputWithContext(context.Background())
}

func (i *poolPersistencePtrType) ToPoolPersistencePtrOutputWithContext(ctx context.Context) PoolPersistencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolPersistencePtrOutput)
}

type PoolPersistenceOutput struct { *pulumi.OutputState }

func (PoolPersistenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolPersistence)(nil)).Elem()
}

func (o PoolPersistenceOutput) ToPoolPersistenceOutput() PoolPersistenceOutput {
	return o
}

func (o PoolPersistenceOutput) ToPoolPersistenceOutputWithContext(ctx context.Context) PoolPersistenceOutput {
	return o
}

func (o PoolPersistenceOutput) ToPoolPersistencePtrOutput() PoolPersistencePtrOutput {
	return o.ToPoolPersistencePtrOutputWithContext(context.Background())
}

func (o PoolPersistenceOutput) ToPoolPersistencePtrOutputWithContext(ctx context.Context) PoolPersistencePtrOutput {
	return o.ApplyT(func(v PoolPersistence) *PoolPersistence {
		return &v
	}).(PoolPersistencePtrOutput)
}
// The name of the cookie if persistence mode is set
// appropriately. Required if `type = APP_COOKIE`.
func (o PoolPersistenceOutput) CookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v PoolPersistence) *string { return v.CookieName }).(pulumi.StringPtrOutput)
}

// The type of persistence mode. The current specification
// supports SOURCE_IP, HTTP_COOKIE, and APP_COOKIE.
func (o PoolPersistenceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v PoolPersistence) string { return v.Type }).(pulumi.StringOutput)
}

type PoolPersistencePtrOutput struct { *pulumi.OutputState}

func (PoolPersistencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolPersistence)(nil)).Elem()
}

func (o PoolPersistencePtrOutput) ToPoolPersistencePtrOutput() PoolPersistencePtrOutput {
	return o
}

func (o PoolPersistencePtrOutput) ToPoolPersistencePtrOutputWithContext(ctx context.Context) PoolPersistencePtrOutput {
	return o
}

func (o PoolPersistencePtrOutput) Elem() PoolPersistenceOutput {
	return o.ApplyT(func (v *PoolPersistence) PoolPersistence { return *v }).(PoolPersistenceOutput)
}

// The name of the cookie if persistence mode is set
// appropriately. Required if `type = APP_COOKIE`.
func (o PoolPersistencePtrOutput) CookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v PoolPersistence) *string { return v.CookieName }).(pulumi.StringPtrOutput)
}

// The type of persistence mode. The current specification
// supports SOURCE_IP, HTTP_COOKIE, and APP_COOKIE.
func (o PoolPersistencePtrOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v PoolPersistence) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(PoolPersistenceOutput{})
	pulumi.RegisterOutputType(PoolPersistencePtrOutput{})
}
