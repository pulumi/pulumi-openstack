// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package loadbalancer

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages a Load Balancer L7 Policy resource within OpenStack.
type L7PolicyV2 struct {
	pulumi.CustomResourceState

	// The L7 Policy action - can either be REDIRECT\_TO\_POOL,
	// REDIRECT\_TO\_URL or REJECT.
	Action pulumi.StringOutput `pulumi:"action"`
	// The administrative state of the L7 Policy.
	// A valid value is true (UP) or false (DOWN).
	AdminStateUp pulumi.BoolPtrOutput `pulumi:"adminStateUp"`
	// Human-readable description for the L7 Policy.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The Listener on which the L7 Policy will be associated with.
	// Changing this creates a new L7 Policy.
	ListenerId pulumi.StringOutput `pulumi:"listenerId"`
	// Human-readable name for the L7 Policy. Does not have
	// to be unique.
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of this policy on the listener. Positions start at 1.
	Position pulumi.IntOutput `pulumi:"position"`
	// Requests matching this policy will be redirected to the
	// pool with this ID. Only valid if action is REDIRECT\_TO\_POOL.
	RedirectPoolId pulumi.StringPtrOutput `pulumi:"redirectPoolId"`
	// Requests matching this policy will be redirected to this URL.
	// Only valid if action is REDIRECT\_TO\_URL.
	RedirectUrl pulumi.StringPtrOutput `pulumi:"redirectUrl"`
	// The region in which to obtain the V2 Networking client.
	// A Networking client is needed to create an . If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// L7 Policy.
	Region pulumi.StringOutput `pulumi:"region"`
	// Required for admins. The UUID of the tenant who owns
	// the L7 Policy.  Only administrative users can specify a tenant UUID
	// other than their own. Changing this creates a new L7 Policy.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewL7PolicyV2 registers a new resource with the given unique name, arguments, and options.
func NewL7PolicyV2(ctx *pulumi.Context,
	name string, args *L7PolicyV2Args, opts ...pulumi.ResourceOption) (*L7PolicyV2, error) {
	if args == nil || args.Action == nil {
		return nil, errors.New("missing required argument 'Action'")
	}
	if args == nil || args.ListenerId == nil {
		return nil, errors.New("missing required argument 'ListenerId'")
	}
	if args == nil {
		args = &L7PolicyV2Args{}
	}
	var resource L7PolicyV2
	err := ctx.RegisterResource("openstack:loadbalancer/l7PolicyV2:L7PolicyV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetL7PolicyV2 gets an existing L7PolicyV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetL7PolicyV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *L7PolicyV2State, opts ...pulumi.ResourceOption) (*L7PolicyV2, error) {
	var resource L7PolicyV2
	err := ctx.ReadResource("openstack:loadbalancer/l7PolicyV2:L7PolicyV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering L7PolicyV2 resources.
type l7policyV2State struct {
	// The L7 Policy action - can either be REDIRECT\_TO\_POOL,
	// REDIRECT\_TO\_URL or REJECT.
	Action *string `pulumi:"action"`
	// The administrative state of the L7 Policy.
	// A valid value is true (UP) or false (DOWN).
	AdminStateUp *bool `pulumi:"adminStateUp"`
	// Human-readable description for the L7 Policy.
	Description *string `pulumi:"description"`
	// The Listener on which the L7 Policy will be associated with.
	// Changing this creates a new L7 Policy.
	ListenerId *string `pulumi:"listenerId"`
	// Human-readable name for the L7 Policy. Does not have
	// to be unique.
	Name *string `pulumi:"name"`
	// The position of this policy on the listener. Positions start at 1.
	Position *int `pulumi:"position"`
	// Requests matching this policy will be redirected to the
	// pool with this ID. Only valid if action is REDIRECT\_TO\_POOL.
	RedirectPoolId *string `pulumi:"redirectPoolId"`
	// Requests matching this policy will be redirected to this URL.
	// Only valid if action is REDIRECT\_TO\_URL.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The region in which to obtain the V2 Networking client.
	// A Networking client is needed to create an . If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// L7 Policy.
	Region *string `pulumi:"region"`
	// Required for admins. The UUID of the tenant who owns
	// the L7 Policy.  Only administrative users can specify a tenant UUID
	// other than their own. Changing this creates a new L7 Policy.
	TenantId *string `pulumi:"tenantId"`
}

type L7PolicyV2State struct {
	// The L7 Policy action - can either be REDIRECT\_TO\_POOL,
	// REDIRECT\_TO\_URL or REJECT.
	Action pulumi.StringPtrInput
	// The administrative state of the L7 Policy.
	// A valid value is true (UP) or false (DOWN).
	AdminStateUp pulumi.BoolPtrInput
	// Human-readable description for the L7 Policy.
	Description pulumi.StringPtrInput
	// The Listener on which the L7 Policy will be associated with.
	// Changing this creates a new L7 Policy.
	ListenerId pulumi.StringPtrInput
	// Human-readable name for the L7 Policy. Does not have
	// to be unique.
	Name pulumi.StringPtrInput
	// The position of this policy on the listener. Positions start at 1.
	Position pulumi.IntPtrInput
	// Requests matching this policy will be redirected to the
	// pool with this ID. Only valid if action is REDIRECT\_TO\_POOL.
	RedirectPoolId pulumi.StringPtrInput
	// Requests matching this policy will be redirected to this URL.
	// Only valid if action is REDIRECT\_TO\_URL.
	RedirectUrl pulumi.StringPtrInput
	// The region in which to obtain the V2 Networking client.
	// A Networking client is needed to create an . If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// L7 Policy.
	Region pulumi.StringPtrInput
	// Required for admins. The UUID of the tenant who owns
	// the L7 Policy.  Only administrative users can specify a tenant UUID
	// other than their own. Changing this creates a new L7 Policy.
	TenantId pulumi.StringPtrInput
}

func (L7PolicyV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*l7policyV2State)(nil)).Elem()
}

type l7policyV2Args struct {
	// The L7 Policy action - can either be REDIRECT\_TO\_POOL,
	// REDIRECT\_TO\_URL or REJECT.
	Action string `pulumi:"action"`
	// The administrative state of the L7 Policy.
	// A valid value is true (UP) or false (DOWN).
	AdminStateUp *bool `pulumi:"adminStateUp"`
	// Human-readable description for the L7 Policy.
	Description *string `pulumi:"description"`
	// The Listener on which the L7 Policy will be associated with.
	// Changing this creates a new L7 Policy.
	ListenerId string `pulumi:"listenerId"`
	// Human-readable name for the L7 Policy. Does not have
	// to be unique.
	Name *string `pulumi:"name"`
	// The position of this policy on the listener. Positions start at 1.
	Position *int `pulumi:"position"`
	// Requests matching this policy will be redirected to the
	// pool with this ID. Only valid if action is REDIRECT\_TO\_POOL.
	RedirectPoolId *string `pulumi:"redirectPoolId"`
	// Requests matching this policy will be redirected to this URL.
	// Only valid if action is REDIRECT\_TO\_URL.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The region in which to obtain the V2 Networking client.
	// A Networking client is needed to create an . If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// L7 Policy.
	Region *string `pulumi:"region"`
	// Required for admins. The UUID of the tenant who owns
	// the L7 Policy.  Only administrative users can specify a tenant UUID
	// other than their own. Changing this creates a new L7 Policy.
	TenantId *string `pulumi:"tenantId"`
}

// The set of arguments for constructing a L7PolicyV2 resource.
type L7PolicyV2Args struct {
	// The L7 Policy action - can either be REDIRECT\_TO\_POOL,
	// REDIRECT\_TO\_URL or REJECT.
	Action pulumi.StringInput
	// The administrative state of the L7 Policy.
	// A valid value is true (UP) or false (DOWN).
	AdminStateUp pulumi.BoolPtrInput
	// Human-readable description for the L7 Policy.
	Description pulumi.StringPtrInput
	// The Listener on which the L7 Policy will be associated with.
	// Changing this creates a new L7 Policy.
	ListenerId pulumi.StringInput
	// Human-readable name for the L7 Policy. Does not have
	// to be unique.
	Name pulumi.StringPtrInput
	// The position of this policy on the listener. Positions start at 1.
	Position pulumi.IntPtrInput
	// Requests matching this policy will be redirected to the
	// pool with this ID. Only valid if action is REDIRECT\_TO\_POOL.
	RedirectPoolId pulumi.StringPtrInput
	// Requests matching this policy will be redirected to this URL.
	// Only valid if action is REDIRECT\_TO\_URL.
	RedirectUrl pulumi.StringPtrInput
	// The region in which to obtain the V2 Networking client.
	// A Networking client is needed to create an . If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// L7 Policy.
	Region pulumi.StringPtrInput
	// Required for admins. The UUID of the tenant who owns
	// the L7 Policy.  Only administrative users can specify a tenant UUID
	// other than their own. Changing this creates a new L7 Policy.
	TenantId pulumi.StringPtrInput
}

func (L7PolicyV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*l7policyV2Args)(nil)).Elem()
}
