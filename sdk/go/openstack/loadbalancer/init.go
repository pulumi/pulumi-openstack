// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loadbalancer

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-openstack/sdk/v5/go/openstack/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "openstack:loadbalancer/l7PolicyV2:L7PolicyV2":
		r = &L7PolicyV2{}
	case "openstack:loadbalancer/l7RuleV2:L7RuleV2":
		r = &L7RuleV2{}
	case "openstack:loadbalancer/listener:Listener":
		r = &Listener{}
	case "openstack:loadbalancer/member:Member":
		r = &Member{}
	case "openstack:loadbalancer/members:Members":
		r = &Members{}
	case "openstack:loadbalancer/monitor:Monitor":
		r = &Monitor{}
	case "openstack:loadbalancer/pool:Pool":
		r = &Pool{}
	case "openstack:loadbalancer/quota:Quota":
		r = &Quota{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"openstack",
		"loadbalancer/l7PolicyV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"loadbalancer/l7RuleV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"loadbalancer/listener",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"loadbalancer/member",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"loadbalancer/members",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"loadbalancer/monitor",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"loadbalancer/pool",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"loadbalancer/quota",
		&module{version},
	)
}
