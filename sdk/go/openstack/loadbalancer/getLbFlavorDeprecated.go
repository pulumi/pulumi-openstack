// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loadbalancer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-openstack/sdk/v5/go/openstack/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the ID of an OpenStack Load Balancer flavor.
//
// > **Note:** This data source is deprecated, please use `loadbalancer.FlavorV2` instead.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-openstack/sdk/v5/go/openstack/loadbalancer"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := loadbalancer.GetLbFlavorDeprecated(ctx, &loadbalancer.GetLbFlavorDeprecatedArgs{
//				Name: pulumi.StringRef("flavor_1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLbFlavorDeprecated(ctx *pulumi.Context, args *GetLbFlavorDeprecatedArgs, opts ...pulumi.InvokeOption) (*GetLbFlavorDeprecatedResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLbFlavorDeprecatedResult
	err := ctx.Invoke("openstack:loadbalancer/getLbFlavorDeprecated:getLbFlavorDeprecated", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLbFlavorDeprecated.
type GetLbFlavorDeprecatedArgs struct {
	// The ID of the flavor. Exactly one of `name`, `flavorId` is required to be set.
	FlavorId *string `pulumi:"flavorId"`
	// The name of the flavor. Exactly one of `name`, `flavorId` is required to be set.
	Name *string `pulumi:"name"`
	// The region in which to obtain the V2 Load Balancer client.
	// If omitted, the `region` argument of the provider is used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getLbFlavorDeprecated.
type GetLbFlavorDeprecatedResult struct {
	// The description of the flavor.
	Description string `pulumi:"description"`
	// Is the flavor enabled.
	Enabled bool `pulumi:"enabled"`
	// The ID of the flavor.
	FlavorId string `pulumi:"flavorId"`
	// The ID of the flavor profile.
	FlavorProfileId string `pulumi:"flavorProfileId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the flavor.
	Name   string `pulumi:"name"`
	Region string `pulumi:"region"`
}

func GetLbFlavorDeprecatedOutput(ctx *pulumi.Context, args GetLbFlavorDeprecatedOutputArgs, opts ...pulumi.InvokeOption) GetLbFlavorDeprecatedResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetLbFlavorDeprecatedResultOutput, error) {
			args := v.(GetLbFlavorDeprecatedArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("openstack:loadbalancer/getLbFlavorDeprecated:getLbFlavorDeprecated", args, GetLbFlavorDeprecatedResultOutput{}, options).(GetLbFlavorDeprecatedResultOutput), nil
		}).(GetLbFlavorDeprecatedResultOutput)
}

// A collection of arguments for invoking getLbFlavorDeprecated.
type GetLbFlavorDeprecatedOutputArgs struct {
	// The ID of the flavor. Exactly one of `name`, `flavorId` is required to be set.
	FlavorId pulumi.StringPtrInput `pulumi:"flavorId"`
	// The name of the flavor. Exactly one of `name`, `flavorId` is required to be set.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The region in which to obtain the V2 Load Balancer client.
	// If omitted, the `region` argument of the provider is used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetLbFlavorDeprecatedOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbFlavorDeprecatedArgs)(nil)).Elem()
}

// A collection of values returned by getLbFlavorDeprecated.
type GetLbFlavorDeprecatedResultOutput struct{ *pulumi.OutputState }

func (GetLbFlavorDeprecatedResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbFlavorDeprecatedResult)(nil)).Elem()
}

func (o GetLbFlavorDeprecatedResultOutput) ToGetLbFlavorDeprecatedResultOutput() GetLbFlavorDeprecatedResultOutput {
	return o
}

func (o GetLbFlavorDeprecatedResultOutput) ToGetLbFlavorDeprecatedResultOutputWithContext(ctx context.Context) GetLbFlavorDeprecatedResultOutput {
	return o
}

// The description of the flavor.
func (o GetLbFlavorDeprecatedResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFlavorDeprecatedResult) string { return v.Description }).(pulumi.StringOutput)
}

// Is the flavor enabled.
func (o GetLbFlavorDeprecatedResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLbFlavorDeprecatedResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The ID of the flavor.
func (o GetLbFlavorDeprecatedResultOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFlavorDeprecatedResult) string { return v.FlavorId }).(pulumi.StringOutput)
}

// The ID of the flavor profile.
func (o GetLbFlavorDeprecatedResultOutput) FlavorProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFlavorDeprecatedResult) string { return v.FlavorProfileId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLbFlavorDeprecatedResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFlavorDeprecatedResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the flavor.
func (o GetLbFlavorDeprecatedResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFlavorDeprecatedResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLbFlavorDeprecatedResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFlavorDeprecatedResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLbFlavorDeprecatedResultOutput{})
}
