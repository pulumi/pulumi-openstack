// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package openstack

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-openstack/sdk/v5/go/openstack/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a V2 BGP VPN network association resource within OpenStack.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-openstack/sdk/v5/go/openstack"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := openstack.NewBgpvpnNetworkAssociateV2(ctx, "association_1", &openstack.BgpvpnNetworkAssociateV2Args{
//				BgpvpnId:  pulumi.String("e7189337-5684-46ee-bcb1-44f1a57066c9"),
//				NetworkId: pulumi.String("de83d56c-4d2f-44f7-ac24-af393252204f"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # BGP VPN network associations can be imported using the BGP VPN ID and BGP VPN
//
// network association ID separated by a slash, e.g.:
//
// hcl
//
// ```sh
// $ pulumi import openstack:index/bgpvpnNetworkAssociateV2:BgpvpnNetworkAssociateV2 association_1 2145aaa9-edaa-44fb-9815-e47a96677a72/67bb952a-f9d1-4fc8-ae84-082253a879d4
// ```
type BgpvpnNetworkAssociateV2 struct {
	pulumi.CustomResourceState

	// The ID of the BGP VPN to which the network will be
	// associated. Changing this creates a new BGP VPN network association
	BgpvpnId pulumi.StringOutput `pulumi:"bgpvpnId"`
	// The ID of the network to be associated with the BGP
	// VPN. Changing this creates a new BGP VPN network association.
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// The ID of the project that owns the BGP VPN network
	// association. Only administrative and users with `advsvc` role can specify a
	// project ID other than their own. Changing this creates a new BGP VPN network
	// association.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The region in which to obtain the V2 Networking client.
	// A Networking client is needed to create a BGP VPN network association. If
	// omitted, the `region` argument of the provider is used. Changing this creates
	// a new BGP VPN network association.
	Region pulumi.StringOutput `pulumi:"region"`
}

// NewBgpvpnNetworkAssociateV2 registers a new resource with the given unique name, arguments, and options.
func NewBgpvpnNetworkAssociateV2(ctx *pulumi.Context,
	name string, args *BgpvpnNetworkAssociateV2Args, opts ...pulumi.ResourceOption) (*BgpvpnNetworkAssociateV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BgpvpnId == nil {
		return nil, errors.New("invalid value for required argument 'BgpvpnId'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BgpvpnNetworkAssociateV2
	err := ctx.RegisterResource("openstack:index/bgpvpnNetworkAssociateV2:BgpvpnNetworkAssociateV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBgpvpnNetworkAssociateV2 gets an existing BgpvpnNetworkAssociateV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBgpvpnNetworkAssociateV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BgpvpnNetworkAssociateV2State, opts ...pulumi.ResourceOption) (*BgpvpnNetworkAssociateV2, error) {
	var resource BgpvpnNetworkAssociateV2
	err := ctx.ReadResource("openstack:index/bgpvpnNetworkAssociateV2:BgpvpnNetworkAssociateV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BgpvpnNetworkAssociateV2 resources.
type bgpvpnNetworkAssociateV2State struct {
	// The ID of the BGP VPN to which the network will be
	// associated. Changing this creates a new BGP VPN network association
	BgpvpnId *string `pulumi:"bgpvpnId"`
	// The ID of the network to be associated with the BGP
	// VPN. Changing this creates a new BGP VPN network association.
	NetworkId *string `pulumi:"networkId"`
	// The ID of the project that owns the BGP VPN network
	// association. Only administrative and users with `advsvc` role can specify a
	// project ID other than their own. Changing this creates a new BGP VPN network
	// association.
	ProjectId *string `pulumi:"projectId"`
	// The region in which to obtain the V2 Networking client.
	// A Networking client is needed to create a BGP VPN network association. If
	// omitted, the `region` argument of the provider is used. Changing this creates
	// a new BGP VPN network association.
	Region *string `pulumi:"region"`
}

type BgpvpnNetworkAssociateV2State struct {
	// The ID of the BGP VPN to which the network will be
	// associated. Changing this creates a new BGP VPN network association
	BgpvpnId pulumi.StringPtrInput
	// The ID of the network to be associated with the BGP
	// VPN. Changing this creates a new BGP VPN network association.
	NetworkId pulumi.StringPtrInput
	// The ID of the project that owns the BGP VPN network
	// association. Only administrative and users with `advsvc` role can specify a
	// project ID other than their own. Changing this creates a new BGP VPN network
	// association.
	ProjectId pulumi.StringPtrInput
	// The region in which to obtain the V2 Networking client.
	// A Networking client is needed to create a BGP VPN network association. If
	// omitted, the `region` argument of the provider is used. Changing this creates
	// a new BGP VPN network association.
	Region pulumi.StringPtrInput
}

func (BgpvpnNetworkAssociateV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpvpnNetworkAssociateV2State)(nil)).Elem()
}

type bgpvpnNetworkAssociateV2Args struct {
	// The ID of the BGP VPN to which the network will be
	// associated. Changing this creates a new BGP VPN network association
	BgpvpnId string `pulumi:"bgpvpnId"`
	// The ID of the network to be associated with the BGP
	// VPN. Changing this creates a new BGP VPN network association.
	NetworkId string `pulumi:"networkId"`
	// The ID of the project that owns the BGP VPN network
	// association. Only administrative and users with `advsvc` role can specify a
	// project ID other than their own. Changing this creates a new BGP VPN network
	// association.
	ProjectId *string `pulumi:"projectId"`
	// The region in which to obtain the V2 Networking client.
	// A Networking client is needed to create a BGP VPN network association. If
	// omitted, the `region` argument of the provider is used. Changing this creates
	// a new BGP VPN network association.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a BgpvpnNetworkAssociateV2 resource.
type BgpvpnNetworkAssociateV2Args struct {
	// The ID of the BGP VPN to which the network will be
	// associated. Changing this creates a new BGP VPN network association
	BgpvpnId pulumi.StringInput
	// The ID of the network to be associated with the BGP
	// VPN. Changing this creates a new BGP VPN network association.
	NetworkId pulumi.StringInput
	// The ID of the project that owns the BGP VPN network
	// association. Only administrative and users with `advsvc` role can specify a
	// project ID other than their own. Changing this creates a new BGP VPN network
	// association.
	ProjectId pulumi.StringPtrInput
	// The region in which to obtain the V2 Networking client.
	// A Networking client is needed to create a BGP VPN network association. If
	// omitted, the `region` argument of the provider is used. Changing this creates
	// a new BGP VPN network association.
	Region pulumi.StringPtrInput
}

func (BgpvpnNetworkAssociateV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpvpnNetworkAssociateV2Args)(nil)).Elem()
}

type BgpvpnNetworkAssociateV2Input interface {
	pulumi.Input

	ToBgpvpnNetworkAssociateV2Output() BgpvpnNetworkAssociateV2Output
	ToBgpvpnNetworkAssociateV2OutputWithContext(ctx context.Context) BgpvpnNetworkAssociateV2Output
}

func (*BgpvpnNetworkAssociateV2) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpvpnNetworkAssociateV2)(nil)).Elem()
}

func (i *BgpvpnNetworkAssociateV2) ToBgpvpnNetworkAssociateV2Output() BgpvpnNetworkAssociateV2Output {
	return i.ToBgpvpnNetworkAssociateV2OutputWithContext(context.Background())
}

func (i *BgpvpnNetworkAssociateV2) ToBgpvpnNetworkAssociateV2OutputWithContext(ctx context.Context) BgpvpnNetworkAssociateV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(BgpvpnNetworkAssociateV2Output)
}

// BgpvpnNetworkAssociateV2ArrayInput is an input type that accepts BgpvpnNetworkAssociateV2Array and BgpvpnNetworkAssociateV2ArrayOutput values.
// You can construct a concrete instance of `BgpvpnNetworkAssociateV2ArrayInput` via:
//
//	BgpvpnNetworkAssociateV2Array{ BgpvpnNetworkAssociateV2Args{...} }
type BgpvpnNetworkAssociateV2ArrayInput interface {
	pulumi.Input

	ToBgpvpnNetworkAssociateV2ArrayOutput() BgpvpnNetworkAssociateV2ArrayOutput
	ToBgpvpnNetworkAssociateV2ArrayOutputWithContext(context.Context) BgpvpnNetworkAssociateV2ArrayOutput
}

type BgpvpnNetworkAssociateV2Array []BgpvpnNetworkAssociateV2Input

func (BgpvpnNetworkAssociateV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpvpnNetworkAssociateV2)(nil)).Elem()
}

func (i BgpvpnNetworkAssociateV2Array) ToBgpvpnNetworkAssociateV2ArrayOutput() BgpvpnNetworkAssociateV2ArrayOutput {
	return i.ToBgpvpnNetworkAssociateV2ArrayOutputWithContext(context.Background())
}

func (i BgpvpnNetworkAssociateV2Array) ToBgpvpnNetworkAssociateV2ArrayOutputWithContext(ctx context.Context) BgpvpnNetworkAssociateV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpvpnNetworkAssociateV2ArrayOutput)
}

// BgpvpnNetworkAssociateV2MapInput is an input type that accepts BgpvpnNetworkAssociateV2Map and BgpvpnNetworkAssociateV2MapOutput values.
// You can construct a concrete instance of `BgpvpnNetworkAssociateV2MapInput` via:
//
//	BgpvpnNetworkAssociateV2Map{ "key": BgpvpnNetworkAssociateV2Args{...} }
type BgpvpnNetworkAssociateV2MapInput interface {
	pulumi.Input

	ToBgpvpnNetworkAssociateV2MapOutput() BgpvpnNetworkAssociateV2MapOutput
	ToBgpvpnNetworkAssociateV2MapOutputWithContext(context.Context) BgpvpnNetworkAssociateV2MapOutput
}

type BgpvpnNetworkAssociateV2Map map[string]BgpvpnNetworkAssociateV2Input

func (BgpvpnNetworkAssociateV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpvpnNetworkAssociateV2)(nil)).Elem()
}

func (i BgpvpnNetworkAssociateV2Map) ToBgpvpnNetworkAssociateV2MapOutput() BgpvpnNetworkAssociateV2MapOutput {
	return i.ToBgpvpnNetworkAssociateV2MapOutputWithContext(context.Background())
}

func (i BgpvpnNetworkAssociateV2Map) ToBgpvpnNetworkAssociateV2MapOutputWithContext(ctx context.Context) BgpvpnNetworkAssociateV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpvpnNetworkAssociateV2MapOutput)
}

type BgpvpnNetworkAssociateV2Output struct{ *pulumi.OutputState }

func (BgpvpnNetworkAssociateV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpvpnNetworkAssociateV2)(nil)).Elem()
}

func (o BgpvpnNetworkAssociateV2Output) ToBgpvpnNetworkAssociateV2Output() BgpvpnNetworkAssociateV2Output {
	return o
}

func (o BgpvpnNetworkAssociateV2Output) ToBgpvpnNetworkAssociateV2OutputWithContext(ctx context.Context) BgpvpnNetworkAssociateV2Output {
	return o
}

// The ID of the BGP VPN to which the network will be
// associated. Changing this creates a new BGP VPN network association
func (o BgpvpnNetworkAssociateV2Output) BgpvpnId() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpvpnNetworkAssociateV2) pulumi.StringOutput { return v.BgpvpnId }).(pulumi.StringOutput)
}

// The ID of the network to be associated with the BGP
// VPN. Changing this creates a new BGP VPN network association.
func (o BgpvpnNetworkAssociateV2Output) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpvpnNetworkAssociateV2) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

// The ID of the project that owns the BGP VPN network
// association. Only administrative and users with `advsvc` role can specify a
// project ID other than their own. Changing this creates a new BGP VPN network
// association.
func (o BgpvpnNetworkAssociateV2Output) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpvpnNetworkAssociateV2) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The region in which to obtain the V2 Networking client.
// A Networking client is needed to create a BGP VPN network association. If
// omitted, the `region` argument of the provider is used. Changing this creates
// a new BGP VPN network association.
func (o BgpvpnNetworkAssociateV2Output) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpvpnNetworkAssociateV2) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type BgpvpnNetworkAssociateV2ArrayOutput struct{ *pulumi.OutputState }

func (BgpvpnNetworkAssociateV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpvpnNetworkAssociateV2)(nil)).Elem()
}

func (o BgpvpnNetworkAssociateV2ArrayOutput) ToBgpvpnNetworkAssociateV2ArrayOutput() BgpvpnNetworkAssociateV2ArrayOutput {
	return o
}

func (o BgpvpnNetworkAssociateV2ArrayOutput) ToBgpvpnNetworkAssociateV2ArrayOutputWithContext(ctx context.Context) BgpvpnNetworkAssociateV2ArrayOutput {
	return o
}

func (o BgpvpnNetworkAssociateV2ArrayOutput) Index(i pulumi.IntInput) BgpvpnNetworkAssociateV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BgpvpnNetworkAssociateV2 {
		return vs[0].([]*BgpvpnNetworkAssociateV2)[vs[1].(int)]
	}).(BgpvpnNetworkAssociateV2Output)
}

type BgpvpnNetworkAssociateV2MapOutput struct{ *pulumi.OutputState }

func (BgpvpnNetworkAssociateV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpvpnNetworkAssociateV2)(nil)).Elem()
}

func (o BgpvpnNetworkAssociateV2MapOutput) ToBgpvpnNetworkAssociateV2MapOutput() BgpvpnNetworkAssociateV2MapOutput {
	return o
}

func (o BgpvpnNetworkAssociateV2MapOutput) ToBgpvpnNetworkAssociateV2MapOutputWithContext(ctx context.Context) BgpvpnNetworkAssociateV2MapOutput {
	return o
}

func (o BgpvpnNetworkAssociateV2MapOutput) MapIndex(k pulumi.StringInput) BgpvpnNetworkAssociateV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BgpvpnNetworkAssociateV2 {
		return vs[0].(map[string]*BgpvpnNetworkAssociateV2)[vs[1].(string)]
	}).(BgpvpnNetworkAssociateV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BgpvpnNetworkAssociateV2Input)(nil)).Elem(), &BgpvpnNetworkAssociateV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpvpnNetworkAssociateV2ArrayInput)(nil)).Elem(), BgpvpnNetworkAssociateV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpvpnNetworkAssociateV2MapInput)(nil)).Elem(), BgpvpnNetworkAssociateV2Map{})
	pulumi.RegisterOutputType(BgpvpnNetworkAssociateV2Output{})
	pulumi.RegisterOutputType(BgpvpnNetworkAssociateV2ArrayOutput{})
	pulumi.RegisterOutputType(BgpvpnNetworkAssociateV2MapOutput{})
}
