// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type InstanceBlockDevice struct {
	BootIndex *int `pulumi:"bootIndex"`
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	DestinationType *string `pulumi:"destinationType"`
	DeviceType *string `pulumi:"deviceType"`
	DiskBus *string `pulumi:"diskBus"`
	GuestFormat *string `pulumi:"guestFormat"`
	SourceType string `pulumi:"sourceType"`
	Uuid *string `pulumi:"uuid"`
	VolumeSize *int `pulumi:"volumeSize"`
}

type InstanceBlockDeviceInput interface {
	pulumi.Input

	ToInstanceBlockDeviceOutput() InstanceBlockDeviceOutput
	ToInstanceBlockDeviceOutputWithContext(context.Context) InstanceBlockDeviceOutput
}

type InstanceBlockDeviceArgs struct {
	BootIndex pulumi.IntPtrInput `pulumi:"bootIndex"`
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	DestinationType pulumi.StringPtrInput `pulumi:"destinationType"`
	DeviceType pulumi.StringPtrInput `pulumi:"deviceType"`
	DiskBus pulumi.StringPtrInput `pulumi:"diskBus"`
	GuestFormat pulumi.StringPtrInput `pulumi:"guestFormat"`
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
}

func (InstanceBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBlockDevice)(nil)).Elem()
}

func (i InstanceBlockDeviceArgs) ToInstanceBlockDeviceOutput() InstanceBlockDeviceOutput {
	return i.ToInstanceBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceBlockDeviceArgs) ToInstanceBlockDeviceOutputWithContext(ctx context.Context) InstanceBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBlockDeviceOutput)
}

type InstanceBlockDeviceArrayInput interface {
	pulumi.Input

	ToInstanceBlockDeviceArrayOutput() InstanceBlockDeviceArrayOutput
	ToInstanceBlockDeviceArrayOutputWithContext(context.Context) InstanceBlockDeviceArrayOutput
}

type InstanceBlockDeviceArray []InstanceBlockDeviceInput

func (InstanceBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceBlockDevice)(nil)).Elem()
}

func (i InstanceBlockDeviceArray) ToInstanceBlockDeviceArrayOutput() InstanceBlockDeviceArrayOutput {
	return i.ToInstanceBlockDeviceArrayOutputWithContext(context.Background())
}

func (i InstanceBlockDeviceArray) ToInstanceBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBlockDeviceArrayOutput)
}

type InstanceBlockDeviceOutput struct { *pulumi.OutputState }

func (InstanceBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBlockDevice)(nil)).Elem()
}

func (o InstanceBlockDeviceOutput) ToInstanceBlockDeviceOutput() InstanceBlockDeviceOutput {
	return o
}

func (o InstanceBlockDeviceOutput) ToInstanceBlockDeviceOutputWithContext(ctx context.Context) InstanceBlockDeviceOutput {
	return o
}

func (o InstanceBlockDeviceOutput) BootIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func (v InstanceBlockDevice) *int { return v.BootIndex }).(pulumi.IntPtrOutput)
}

func (o InstanceBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v InstanceBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o InstanceBlockDeviceOutput) DestinationType() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceBlockDevice) *string { return v.DestinationType }).(pulumi.StringPtrOutput)
}

func (o InstanceBlockDeviceOutput) DeviceType() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceBlockDevice) *string { return v.DeviceType }).(pulumi.StringPtrOutput)
}

func (o InstanceBlockDeviceOutput) DiskBus() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceBlockDevice) *string { return v.DiskBus }).(pulumi.StringPtrOutput)
}

func (o InstanceBlockDeviceOutput) GuestFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceBlockDevice) *string { return v.GuestFormat }).(pulumi.StringPtrOutput)
}

func (o InstanceBlockDeviceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func (v InstanceBlockDevice) string { return v.SourceType }).(pulumi.StringOutput)
}

func (o InstanceBlockDeviceOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceBlockDevice) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

func (o InstanceBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func (v InstanceBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

type InstanceBlockDeviceArrayOutput struct { *pulumi.OutputState}

func (InstanceBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceBlockDevice)(nil)).Elem()
}

func (o InstanceBlockDeviceArrayOutput) ToInstanceBlockDeviceArrayOutput() InstanceBlockDeviceArrayOutput {
	return o
}

func (o InstanceBlockDeviceArrayOutput) ToInstanceBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceBlockDeviceArrayOutput {
	return o
}

func (o InstanceBlockDeviceArrayOutput) Index(i pulumi.IntInput) InstanceBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) InstanceBlockDevice {
		return vs[0].([]InstanceBlockDevice)[vs[1].(int)]
	}).(InstanceBlockDeviceOutput)
}

type InstanceNetwork struct {
	AccessNetwork *bool `pulumi:"accessNetwork"`
	FixedIpV4 *string `pulumi:"fixedIpV4"`
	FixedIpV6 *string `pulumi:"fixedIpV6"`
	Mac *string `pulumi:"mac"`
	// A unique name for the resource.
	Name *string `pulumi:"name"`
	Port *string `pulumi:"port"`
	Uuid *string `pulumi:"uuid"`
}

type InstanceNetworkInput interface {
	pulumi.Input

	ToInstanceNetworkOutput() InstanceNetworkOutput
	ToInstanceNetworkOutputWithContext(context.Context) InstanceNetworkOutput
}

type InstanceNetworkArgs struct {
	AccessNetwork pulumi.BoolPtrInput `pulumi:"accessNetwork"`
	FixedIpV4 pulumi.StringPtrInput `pulumi:"fixedIpV4"`
	FixedIpV6 pulumi.StringPtrInput `pulumi:"fixedIpV6"`
	Mac pulumi.StringPtrInput `pulumi:"mac"`
	// A unique name for the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	Port pulumi.StringPtrInput `pulumi:"port"`
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (InstanceNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNetwork)(nil)).Elem()
}

func (i InstanceNetworkArgs) ToInstanceNetworkOutput() InstanceNetworkOutput {
	return i.ToInstanceNetworkOutputWithContext(context.Background())
}

func (i InstanceNetworkArgs) ToInstanceNetworkOutputWithContext(ctx context.Context) InstanceNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNetworkOutput)
}

type InstanceNetworkArrayInput interface {
	pulumi.Input

	ToInstanceNetworkArrayOutput() InstanceNetworkArrayOutput
	ToInstanceNetworkArrayOutputWithContext(context.Context) InstanceNetworkArrayOutput
}

type InstanceNetworkArray []InstanceNetworkInput

func (InstanceNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNetwork)(nil)).Elem()
}

func (i InstanceNetworkArray) ToInstanceNetworkArrayOutput() InstanceNetworkArrayOutput {
	return i.ToInstanceNetworkArrayOutputWithContext(context.Background())
}

func (i InstanceNetworkArray) ToInstanceNetworkArrayOutputWithContext(ctx context.Context) InstanceNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNetworkArrayOutput)
}

type InstanceNetworkOutput struct { *pulumi.OutputState }

func (InstanceNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNetwork)(nil)).Elem()
}

func (o InstanceNetworkOutput) ToInstanceNetworkOutput() InstanceNetworkOutput {
	return o
}

func (o InstanceNetworkOutput) ToInstanceNetworkOutputWithContext(ctx context.Context) InstanceNetworkOutput {
	return o
}

func (o InstanceNetworkOutput) AccessNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v InstanceNetwork) *bool { return v.AccessNetwork }).(pulumi.BoolPtrOutput)
}

func (o InstanceNetworkOutput) FixedIpV4() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceNetwork) *string { return v.FixedIpV4 }).(pulumi.StringPtrOutput)
}

func (o InstanceNetworkOutput) FixedIpV6() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceNetwork) *string { return v.FixedIpV6 }).(pulumi.StringPtrOutput)
}

func (o InstanceNetworkOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceNetwork) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

// A unique name for the resource.
func (o InstanceNetworkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceNetwork) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o InstanceNetworkOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceNetwork) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o InstanceNetworkOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceNetwork) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type InstanceNetworkArrayOutput struct { *pulumi.OutputState}

func (InstanceNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNetwork)(nil)).Elem()
}

func (o InstanceNetworkArrayOutput) ToInstanceNetworkArrayOutput() InstanceNetworkArrayOutput {
	return o
}

func (o InstanceNetworkArrayOutput) ToInstanceNetworkArrayOutputWithContext(ctx context.Context) InstanceNetworkArrayOutput {
	return o
}

func (o InstanceNetworkArrayOutput) Index(i pulumi.IntInput) InstanceNetworkOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) InstanceNetwork {
		return vs[0].([]InstanceNetwork)[vs[1].(int)]
	}).(InstanceNetworkOutput)
}

type InstancePersonality struct {
	Content string `pulumi:"content"`
	File string `pulumi:"file"`
}

type InstancePersonalityInput interface {
	pulumi.Input

	ToInstancePersonalityOutput() InstancePersonalityOutput
	ToInstancePersonalityOutputWithContext(context.Context) InstancePersonalityOutput
}

type InstancePersonalityArgs struct {
	Content pulumi.StringInput `pulumi:"content"`
	File pulumi.StringInput `pulumi:"file"`
}

func (InstancePersonalityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePersonality)(nil)).Elem()
}

func (i InstancePersonalityArgs) ToInstancePersonalityOutput() InstancePersonalityOutput {
	return i.ToInstancePersonalityOutputWithContext(context.Background())
}

func (i InstancePersonalityArgs) ToInstancePersonalityOutputWithContext(ctx context.Context) InstancePersonalityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePersonalityOutput)
}

type InstancePersonalityArrayInput interface {
	pulumi.Input

	ToInstancePersonalityArrayOutput() InstancePersonalityArrayOutput
	ToInstancePersonalityArrayOutputWithContext(context.Context) InstancePersonalityArrayOutput
}

type InstancePersonalityArray []InstancePersonalityInput

func (InstancePersonalityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancePersonality)(nil)).Elem()
}

func (i InstancePersonalityArray) ToInstancePersonalityArrayOutput() InstancePersonalityArrayOutput {
	return i.ToInstancePersonalityArrayOutputWithContext(context.Background())
}

func (i InstancePersonalityArray) ToInstancePersonalityArrayOutputWithContext(ctx context.Context) InstancePersonalityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePersonalityArrayOutput)
}

type InstancePersonalityOutput struct { *pulumi.OutputState }

func (InstancePersonalityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePersonality)(nil)).Elem()
}

func (o InstancePersonalityOutput) ToInstancePersonalityOutput() InstancePersonalityOutput {
	return o
}

func (o InstancePersonalityOutput) ToInstancePersonalityOutputWithContext(ctx context.Context) InstancePersonalityOutput {
	return o
}

func (o InstancePersonalityOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func (v InstancePersonality) string { return v.Content }).(pulumi.StringOutput)
}

func (o InstancePersonalityOutput) File() pulumi.StringOutput {
	return o.ApplyT(func (v InstancePersonality) string { return v.File }).(pulumi.StringOutput)
}

type InstancePersonalityArrayOutput struct { *pulumi.OutputState}

func (InstancePersonalityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancePersonality)(nil)).Elem()
}

func (o InstancePersonalityArrayOutput) ToInstancePersonalityArrayOutput() InstancePersonalityArrayOutput {
	return o
}

func (o InstancePersonalityArrayOutput) ToInstancePersonalityArrayOutputWithContext(ctx context.Context) InstancePersonalityArrayOutput {
	return o
}

func (o InstancePersonalityArrayOutput) Index(i pulumi.IntInput) InstancePersonalityOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) InstancePersonality {
		return vs[0].([]InstancePersonality)[vs[1].(int)]
	}).(InstancePersonalityOutput)
}

type InstanceSchedulerHint struct {
	AdditionalProperties map[string]interface{} `pulumi:"additionalProperties"`
	BuildNearHostIp *string `pulumi:"buildNearHostIp"`
	DifferentHosts []string `pulumi:"differentHosts"`
	Group *string `pulumi:"group"`
	Queries []string `pulumi:"queries"`
	SameHosts []string `pulumi:"sameHosts"`
	TargetCell *string `pulumi:"targetCell"`
}

type InstanceSchedulerHintInput interface {
	pulumi.Input

	ToInstanceSchedulerHintOutput() InstanceSchedulerHintOutput
	ToInstanceSchedulerHintOutputWithContext(context.Context) InstanceSchedulerHintOutput
}

type InstanceSchedulerHintArgs struct {
	AdditionalProperties pulumi.MapInput `pulumi:"additionalProperties"`
	BuildNearHostIp pulumi.StringPtrInput `pulumi:"buildNearHostIp"`
	DifferentHosts pulumi.StringArrayInput `pulumi:"differentHosts"`
	Group pulumi.StringPtrInput `pulumi:"group"`
	Queries pulumi.StringArrayInput `pulumi:"queries"`
	SameHosts pulumi.StringArrayInput `pulumi:"sameHosts"`
	TargetCell pulumi.StringPtrInput `pulumi:"targetCell"`
}

func (InstanceSchedulerHintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSchedulerHint)(nil)).Elem()
}

func (i InstanceSchedulerHintArgs) ToInstanceSchedulerHintOutput() InstanceSchedulerHintOutput {
	return i.ToInstanceSchedulerHintOutputWithContext(context.Background())
}

func (i InstanceSchedulerHintArgs) ToInstanceSchedulerHintOutputWithContext(ctx context.Context) InstanceSchedulerHintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSchedulerHintOutput)
}

type InstanceSchedulerHintArrayInput interface {
	pulumi.Input

	ToInstanceSchedulerHintArrayOutput() InstanceSchedulerHintArrayOutput
	ToInstanceSchedulerHintArrayOutputWithContext(context.Context) InstanceSchedulerHintArrayOutput
}

type InstanceSchedulerHintArray []InstanceSchedulerHintInput

func (InstanceSchedulerHintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSchedulerHint)(nil)).Elem()
}

func (i InstanceSchedulerHintArray) ToInstanceSchedulerHintArrayOutput() InstanceSchedulerHintArrayOutput {
	return i.ToInstanceSchedulerHintArrayOutputWithContext(context.Background())
}

func (i InstanceSchedulerHintArray) ToInstanceSchedulerHintArrayOutputWithContext(ctx context.Context) InstanceSchedulerHintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSchedulerHintArrayOutput)
}

type InstanceSchedulerHintOutput struct { *pulumi.OutputState }

func (InstanceSchedulerHintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSchedulerHint)(nil)).Elem()
}

func (o InstanceSchedulerHintOutput) ToInstanceSchedulerHintOutput() InstanceSchedulerHintOutput {
	return o
}

func (o InstanceSchedulerHintOutput) ToInstanceSchedulerHintOutputWithContext(ctx context.Context) InstanceSchedulerHintOutput {
	return o
}

func (o InstanceSchedulerHintOutput) AdditionalProperties() pulumi.MapOutput {
	return o.ApplyT(func (v InstanceSchedulerHint) map[string]interface{} { return v.AdditionalProperties }).(pulumi.MapOutput)
}

func (o InstanceSchedulerHintOutput) BuildNearHostIp() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceSchedulerHint) *string { return v.BuildNearHostIp }).(pulumi.StringPtrOutput)
}

func (o InstanceSchedulerHintOutput) DifferentHosts() pulumi.StringArrayOutput {
	return o.ApplyT(func (v InstanceSchedulerHint) []string { return v.DifferentHosts }).(pulumi.StringArrayOutput)
}

func (o InstanceSchedulerHintOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceSchedulerHint) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o InstanceSchedulerHintOutput) Queries() pulumi.StringArrayOutput {
	return o.ApplyT(func (v InstanceSchedulerHint) []string { return v.Queries }).(pulumi.StringArrayOutput)
}

func (o InstanceSchedulerHintOutput) SameHosts() pulumi.StringArrayOutput {
	return o.ApplyT(func (v InstanceSchedulerHint) []string { return v.SameHosts }).(pulumi.StringArrayOutput)
}

func (o InstanceSchedulerHintOutput) TargetCell() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceSchedulerHint) *string { return v.TargetCell }).(pulumi.StringPtrOutput)
}

type InstanceSchedulerHintArrayOutput struct { *pulumi.OutputState}

func (InstanceSchedulerHintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSchedulerHint)(nil)).Elem()
}

func (o InstanceSchedulerHintArrayOutput) ToInstanceSchedulerHintArrayOutput() InstanceSchedulerHintArrayOutput {
	return o
}

func (o InstanceSchedulerHintArrayOutput) ToInstanceSchedulerHintArrayOutputWithContext(ctx context.Context) InstanceSchedulerHintArrayOutput {
	return o
}

func (o InstanceSchedulerHintArrayOutput) Index(i pulumi.IntInput) InstanceSchedulerHintOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) InstanceSchedulerHint {
		return vs[0].([]InstanceSchedulerHint)[vs[1].(int)]
	}).(InstanceSchedulerHintOutput)
}

type InstanceVendorOptions struct {
	IgnoreResizeConfirmation *bool `pulumi:"ignoreResizeConfirmation"`
}

type InstanceVendorOptionsInput interface {
	pulumi.Input

	ToInstanceVendorOptionsOutput() InstanceVendorOptionsOutput
	ToInstanceVendorOptionsOutputWithContext(context.Context) InstanceVendorOptionsOutput
}

type InstanceVendorOptionsArgs struct {
	IgnoreResizeConfirmation pulumi.BoolPtrInput `pulumi:"ignoreResizeConfirmation"`
}

func (InstanceVendorOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceVendorOptions)(nil)).Elem()
}

func (i InstanceVendorOptionsArgs) ToInstanceVendorOptionsOutput() InstanceVendorOptionsOutput {
	return i.ToInstanceVendorOptionsOutputWithContext(context.Background())
}

func (i InstanceVendorOptionsArgs) ToInstanceVendorOptionsOutputWithContext(ctx context.Context) InstanceVendorOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceVendorOptionsOutput)
}

func (i InstanceVendorOptionsArgs) ToInstanceVendorOptionsPtrOutput() InstanceVendorOptionsPtrOutput {
	return i.ToInstanceVendorOptionsPtrOutputWithContext(context.Background())
}

func (i InstanceVendorOptionsArgs) ToInstanceVendorOptionsPtrOutputWithContext(ctx context.Context) InstanceVendorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceVendorOptionsOutput).ToInstanceVendorOptionsPtrOutputWithContext(ctx)
}

type InstanceVendorOptionsPtrInput interface {
	pulumi.Input

	ToInstanceVendorOptionsPtrOutput() InstanceVendorOptionsPtrOutput
	ToInstanceVendorOptionsPtrOutputWithContext(context.Context) InstanceVendorOptionsPtrOutput
}

type instanceVendorOptionsPtrType InstanceVendorOptionsArgs

func InstanceVendorOptionsPtr(v *InstanceVendorOptionsArgs) InstanceVendorOptionsPtrInput {	return (*instanceVendorOptionsPtrType)(v)
}

func (*instanceVendorOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceVendorOptions)(nil)).Elem()
}

func (i *instanceVendorOptionsPtrType) ToInstanceVendorOptionsPtrOutput() InstanceVendorOptionsPtrOutput {
	return i.ToInstanceVendorOptionsPtrOutputWithContext(context.Background())
}

func (i *instanceVendorOptionsPtrType) ToInstanceVendorOptionsPtrOutputWithContext(ctx context.Context) InstanceVendorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceVendorOptionsPtrOutput)
}

type InstanceVendorOptionsOutput struct { *pulumi.OutputState }

func (InstanceVendorOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceVendorOptions)(nil)).Elem()
}

func (o InstanceVendorOptionsOutput) ToInstanceVendorOptionsOutput() InstanceVendorOptionsOutput {
	return o
}

func (o InstanceVendorOptionsOutput) ToInstanceVendorOptionsOutputWithContext(ctx context.Context) InstanceVendorOptionsOutput {
	return o
}

func (o InstanceVendorOptionsOutput) ToInstanceVendorOptionsPtrOutput() InstanceVendorOptionsPtrOutput {
	return o.ToInstanceVendorOptionsPtrOutputWithContext(context.Background())
}

func (o InstanceVendorOptionsOutput) ToInstanceVendorOptionsPtrOutputWithContext(ctx context.Context) InstanceVendorOptionsPtrOutput {
	return o.ApplyT(func(v InstanceVendorOptions) *InstanceVendorOptions {
		return &v
	}).(InstanceVendorOptionsPtrOutput)
}
func (o InstanceVendorOptionsOutput) IgnoreResizeConfirmation() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v InstanceVendorOptions) *bool { return v.IgnoreResizeConfirmation }).(pulumi.BoolPtrOutput)
}

type InstanceVendorOptionsPtrOutput struct { *pulumi.OutputState}

func (InstanceVendorOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceVendorOptions)(nil)).Elem()
}

func (o InstanceVendorOptionsPtrOutput) ToInstanceVendorOptionsPtrOutput() InstanceVendorOptionsPtrOutput {
	return o
}

func (o InstanceVendorOptionsPtrOutput) ToInstanceVendorOptionsPtrOutputWithContext(ctx context.Context) InstanceVendorOptionsPtrOutput {
	return o
}

func (o InstanceVendorOptionsPtrOutput) Elem() InstanceVendorOptionsOutput {
	return o.ApplyT(func (v *InstanceVendorOptions) InstanceVendorOptions { return *v }).(InstanceVendorOptionsOutput)
}

func (o InstanceVendorOptionsPtrOutput) IgnoreResizeConfirmation() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v InstanceVendorOptions) *bool { return v.IgnoreResizeConfirmation }).(pulumi.BoolPtrOutput)
}

type SecGroupRule struct {
	Cidr *string `pulumi:"cidr"`
	FromGroupId *string `pulumi:"fromGroupId"`
	FromPort int `pulumi:"fromPort"`
	Id *string `pulumi:"id"`
	IpProtocol string `pulumi:"ipProtocol"`
	Self *bool `pulumi:"self"`
	ToPort int `pulumi:"toPort"`
}

type SecGroupRuleInput interface {
	pulumi.Input

	ToSecGroupRuleOutput() SecGroupRuleOutput
	ToSecGroupRuleOutputWithContext(context.Context) SecGroupRuleOutput
}

type SecGroupRuleArgs struct {
	Cidr pulumi.StringPtrInput `pulumi:"cidr"`
	FromGroupId pulumi.StringPtrInput `pulumi:"fromGroupId"`
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	IpProtocol pulumi.StringInput `pulumi:"ipProtocol"`
	Self pulumi.BoolPtrInput `pulumi:"self"`
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (SecGroupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecGroupRule)(nil)).Elem()
}

func (i SecGroupRuleArgs) ToSecGroupRuleOutput() SecGroupRuleOutput {
	return i.ToSecGroupRuleOutputWithContext(context.Background())
}

func (i SecGroupRuleArgs) ToSecGroupRuleOutputWithContext(ctx context.Context) SecGroupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecGroupRuleOutput)
}

type SecGroupRuleArrayInput interface {
	pulumi.Input

	ToSecGroupRuleArrayOutput() SecGroupRuleArrayOutput
	ToSecGroupRuleArrayOutputWithContext(context.Context) SecGroupRuleArrayOutput
}

type SecGroupRuleArray []SecGroupRuleInput

func (SecGroupRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecGroupRule)(nil)).Elem()
}

func (i SecGroupRuleArray) ToSecGroupRuleArrayOutput() SecGroupRuleArrayOutput {
	return i.ToSecGroupRuleArrayOutputWithContext(context.Background())
}

func (i SecGroupRuleArray) ToSecGroupRuleArrayOutputWithContext(ctx context.Context) SecGroupRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecGroupRuleArrayOutput)
}

type SecGroupRuleOutput struct { *pulumi.OutputState }

func (SecGroupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecGroupRule)(nil)).Elem()
}

func (o SecGroupRuleOutput) ToSecGroupRuleOutput() SecGroupRuleOutput {
	return o
}

func (o SecGroupRuleOutput) ToSecGroupRuleOutputWithContext(ctx context.Context) SecGroupRuleOutput {
	return o
}

func (o SecGroupRuleOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SecGroupRule) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

func (o SecGroupRuleOutput) FromGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SecGroupRule) *string { return v.FromGroupId }).(pulumi.StringPtrOutput)
}

func (o SecGroupRuleOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func (v SecGroupRule) int { return v.FromPort }).(pulumi.IntOutput)
}

func (o SecGroupRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SecGroupRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o SecGroupRuleOutput) IpProtocol() pulumi.StringOutput {
	return o.ApplyT(func (v SecGroupRule) string { return v.IpProtocol }).(pulumi.StringOutput)
}

func (o SecGroupRuleOutput) Self() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v SecGroupRule) *bool { return v.Self }).(pulumi.BoolPtrOutput)
}

func (o SecGroupRuleOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func (v SecGroupRule) int { return v.ToPort }).(pulumi.IntOutput)
}

type SecGroupRuleArrayOutput struct { *pulumi.OutputState}

func (SecGroupRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecGroupRule)(nil)).Elem()
}

func (o SecGroupRuleArrayOutput) ToSecGroupRuleArrayOutput() SecGroupRuleArrayOutput {
	return o
}

func (o SecGroupRuleArrayOutput) ToSecGroupRuleArrayOutputWithContext(ctx context.Context) SecGroupRuleArrayOutput {
	return o
}

func (o SecGroupRuleArrayOutput) Index(i pulumi.IntInput) SecGroupRuleOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) SecGroupRule {
		return vs[0].([]SecGroupRule)[vs[1].(int)]
	}).(SecGroupRuleOutput)
}

func init() {
	pulumi.RegisterOutputType(InstanceBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(InstanceNetworkOutput{})
	pulumi.RegisterOutputType(InstanceNetworkArrayOutput{})
	pulumi.RegisterOutputType(InstancePersonalityOutput{})
	pulumi.RegisterOutputType(InstancePersonalityArrayOutput{})
	pulumi.RegisterOutputType(InstanceSchedulerHintOutput{})
	pulumi.RegisterOutputType(InstanceSchedulerHintArrayOutput{})
	pulumi.RegisterOutputType(InstanceVendorOptionsOutput{})
	pulumi.RegisterOutputType(InstanceVendorOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecGroupRuleOutput{})
	pulumi.RegisterOutputType(SecGroupRuleArrayOutput{})
}
