// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-openstack/sdk/v3/go/openstack/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "openstack:compute/aggregateV2:AggregateV2":
		r = &AggregateV2{}
	case "openstack:compute/flavor:Flavor":
		r = &Flavor{}
	case "openstack:compute/flavorAccess:FlavorAccess":
		r = &FlavorAccess{}
	case "openstack:compute/floatingIp:FloatingIp":
		r = &FloatingIp{}
	case "openstack:compute/floatingIpAssociate:FloatingIpAssociate":
		r = &FloatingIpAssociate{}
	case "openstack:compute/instance:Instance":
		r = &Instance{}
	case "openstack:compute/interfaceAttach:InterfaceAttach":
		r = &InterfaceAttach{}
	case "openstack:compute/keypair:Keypair":
		r = &Keypair{}
	case "openstack:compute/quotaSetV2:QuotaSetV2":
		r = &QuotaSetV2{}
	case "openstack:compute/secGroup:SecGroup":
		r = &SecGroup{}
	case "openstack:compute/serverGroup:ServerGroup":
		r = &ServerGroup{}
	case "openstack:compute/volumeAttach:VolumeAttach":
		r = &VolumeAttach{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"openstack",
		"compute/aggregateV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"compute/flavor",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"compute/flavorAccess",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"compute/floatingIp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"compute/floatingIpAssociate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"compute/instance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"compute/interfaceAttach",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"compute/keypair",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"compute/quotaSetV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"compute/secGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"compute/serverGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"compute/volumeAttach",
		&module{version},
	)
}
