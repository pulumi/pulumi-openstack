// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-openstack/sdk/v5/go/openstack/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the ID of an OpenStack group.
//
// > **Note:** You _must_ have admin privileges in your OpenStack cloud to use
// this resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-openstack/sdk/v5/go/openstack/identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := identity.GetGroup(ctx, &identity.GetGroupArgs{
//				Name: "admins",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetGroup(ctx *pulumi.Context, args *GetGroupArgs, opts ...pulumi.InvokeOption) (*GetGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetGroupResult
	err := ctx.Invoke("openstack:identity/getGroup:getGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroup.
type GetGroupArgs struct {
	// The domain the group belongs to.
	DomainId *string `pulumi:"domainId"`
	// The name of the group.
	Name string `pulumi:"name"`
	// The region in which to obtain the V3 Keystone client.
	// If omitted, the `region` argument of the provider is used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getGroup.
type GetGroupResult struct {
	// A description of the group.
	Description string `pulumi:"description"`
	// See Argument Reference above.
	DomainId string `pulumi:"domainId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// See Argument Reference above.
	Name string `pulumi:"name"`
	// See Argument Reference above.
	Region string `pulumi:"region"`
}

func GetGroupOutput(ctx *pulumi.Context, args GetGroupOutputArgs, opts ...pulumi.InvokeOption) GetGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGroupResultOutput, error) {
			args := v.(GetGroupArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetGroupResult
			secret, err := ctx.InvokePackageRaw("openstack:identity/getGroup:getGroup", args, &rv, "", opts...)
			if err != nil {
				return GetGroupResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetGroupResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetGroupResultOutput), nil
			}
			return output, nil
		}).(GetGroupResultOutput)
}

// A collection of arguments for invoking getGroup.
type GetGroupOutputArgs struct {
	// The domain the group belongs to.
	DomainId pulumi.StringPtrInput `pulumi:"domainId"`
	// The name of the group.
	Name pulumi.StringInput `pulumi:"name"`
	// The region in which to obtain the V3 Keystone client.
	// If omitted, the `region` argument of the provider is used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupArgs)(nil)).Elem()
}

// A collection of values returned by getGroup.
type GetGroupResultOutput struct{ *pulumi.OutputState }

func (GetGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupResult)(nil)).Elem()
}

func (o GetGroupResultOutput) ToGetGroupResultOutput() GetGroupResultOutput {
	return o
}

func (o GetGroupResultOutput) ToGetGroupResultOutputWithContext(ctx context.Context) GetGroupResultOutput {
	return o
}

// A description of the group.
func (o GetGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o GetGroupResultOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupResult) string { return v.DomainId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o GetGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o GetGroupResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGroupResultOutput{})
}
