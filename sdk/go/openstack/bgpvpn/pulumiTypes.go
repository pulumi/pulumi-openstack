// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bgpvpn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-openstack/sdk/v5/go/openstack/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type PortAssociateV2Route struct {
	// The ID of the BGP VPN to be advertised. Required
	// if `type` is `bgpvpn`. Conflicts with `prefix`.
	BgpvpnId *string `pulumi:"bgpvpnId"`
	// The BGP LOCAL\_PREF value of the routes that will
	// be advertised.
	LocalPref *int `pulumi:"localPref"`
	// The CIDR prefix (v4 or v6) to be advertised. Required
	// if `type` is `prefix`. Conflicts with `bgpvpnId`.
	Prefix *string `pulumi:"prefix"`
	// Can be `prefix` or `bgpvpn`. For the `prefix` type, the
	// CIDR prefix (v4 or v6) must be specified in the `prefix` key. For the
	// `bgpvpn` type, the BGP VPN ID must be specified in the `bgpvpnId` key.
	Type string `pulumi:"type"`
}

// PortAssociateV2RouteInput is an input type that accepts PortAssociateV2RouteArgs and PortAssociateV2RouteOutput values.
// You can construct a concrete instance of `PortAssociateV2RouteInput` via:
//
//	PortAssociateV2RouteArgs{...}
type PortAssociateV2RouteInput interface {
	pulumi.Input

	ToPortAssociateV2RouteOutput() PortAssociateV2RouteOutput
	ToPortAssociateV2RouteOutputWithContext(context.Context) PortAssociateV2RouteOutput
}

type PortAssociateV2RouteArgs struct {
	// The ID of the BGP VPN to be advertised. Required
	// if `type` is `bgpvpn`. Conflicts with `prefix`.
	BgpvpnId pulumi.StringPtrInput `pulumi:"bgpvpnId"`
	// The BGP LOCAL\_PREF value of the routes that will
	// be advertised.
	LocalPref pulumi.IntPtrInput `pulumi:"localPref"`
	// The CIDR prefix (v4 or v6) to be advertised. Required
	// if `type` is `prefix`. Conflicts with `bgpvpnId`.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Can be `prefix` or `bgpvpn`. For the `prefix` type, the
	// CIDR prefix (v4 or v6) must be specified in the `prefix` key. For the
	// `bgpvpn` type, the BGP VPN ID must be specified in the `bgpvpnId` key.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PortAssociateV2RouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PortAssociateV2Route)(nil)).Elem()
}

func (i PortAssociateV2RouteArgs) ToPortAssociateV2RouteOutput() PortAssociateV2RouteOutput {
	return i.ToPortAssociateV2RouteOutputWithContext(context.Background())
}

func (i PortAssociateV2RouteArgs) ToPortAssociateV2RouteOutputWithContext(ctx context.Context) PortAssociateV2RouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortAssociateV2RouteOutput)
}

// PortAssociateV2RouteArrayInput is an input type that accepts PortAssociateV2RouteArray and PortAssociateV2RouteArrayOutput values.
// You can construct a concrete instance of `PortAssociateV2RouteArrayInput` via:
//
//	PortAssociateV2RouteArray{ PortAssociateV2RouteArgs{...} }
type PortAssociateV2RouteArrayInput interface {
	pulumi.Input

	ToPortAssociateV2RouteArrayOutput() PortAssociateV2RouteArrayOutput
	ToPortAssociateV2RouteArrayOutputWithContext(context.Context) PortAssociateV2RouteArrayOutput
}

type PortAssociateV2RouteArray []PortAssociateV2RouteInput

func (PortAssociateV2RouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PortAssociateV2Route)(nil)).Elem()
}

func (i PortAssociateV2RouteArray) ToPortAssociateV2RouteArrayOutput() PortAssociateV2RouteArrayOutput {
	return i.ToPortAssociateV2RouteArrayOutputWithContext(context.Background())
}

func (i PortAssociateV2RouteArray) ToPortAssociateV2RouteArrayOutputWithContext(ctx context.Context) PortAssociateV2RouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortAssociateV2RouteArrayOutput)
}

type PortAssociateV2RouteOutput struct{ *pulumi.OutputState }

func (PortAssociateV2RouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortAssociateV2Route)(nil)).Elem()
}

func (o PortAssociateV2RouteOutput) ToPortAssociateV2RouteOutput() PortAssociateV2RouteOutput {
	return o
}

func (o PortAssociateV2RouteOutput) ToPortAssociateV2RouteOutputWithContext(ctx context.Context) PortAssociateV2RouteOutput {
	return o
}

// The ID of the BGP VPN to be advertised. Required
// if `type` is `bgpvpn`. Conflicts with `prefix`.
func (o PortAssociateV2RouteOutput) BgpvpnId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortAssociateV2Route) *string { return v.BgpvpnId }).(pulumi.StringPtrOutput)
}

// The BGP LOCAL\_PREF value of the routes that will
// be advertised.
func (o PortAssociateV2RouteOutput) LocalPref() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PortAssociateV2Route) *int { return v.LocalPref }).(pulumi.IntPtrOutput)
}

// The CIDR prefix (v4 or v6) to be advertised. Required
// if `type` is `prefix`. Conflicts with `bgpvpnId`.
func (o PortAssociateV2RouteOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortAssociateV2Route) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Can be `prefix` or `bgpvpn`. For the `prefix` type, the
// CIDR prefix (v4 or v6) must be specified in the `prefix` key. For the
// `bgpvpn` type, the BGP VPN ID must be specified in the `bgpvpnId` key.
func (o PortAssociateV2RouteOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PortAssociateV2Route) string { return v.Type }).(pulumi.StringOutput)
}

type PortAssociateV2RouteArrayOutput struct{ *pulumi.OutputState }

func (PortAssociateV2RouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PortAssociateV2Route)(nil)).Elem()
}

func (o PortAssociateV2RouteArrayOutput) ToPortAssociateV2RouteArrayOutput() PortAssociateV2RouteArrayOutput {
	return o
}

func (o PortAssociateV2RouteArrayOutput) ToPortAssociateV2RouteArrayOutputWithContext(ctx context.Context) PortAssociateV2RouteArrayOutput {
	return o
}

func (o PortAssociateV2RouteArrayOutput) Index(i pulumi.IntInput) PortAssociateV2RouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PortAssociateV2Route {
		return vs[0].([]PortAssociateV2Route)[vs[1].(int)]
	}).(PortAssociateV2RouteOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PortAssociateV2RouteInput)(nil)).Elem(), PortAssociateV2RouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortAssociateV2RouteArrayInput)(nil)).Elem(), PortAssociateV2RouteArray{})
	pulumi.RegisterOutputType(PortAssociateV2RouteOutput{})
	pulumi.RegisterOutputType(PortAssociateV2RouteArrayOutput{})
}
