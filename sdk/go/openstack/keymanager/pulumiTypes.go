// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package keymanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ContainerV1Consumer struct {
	// Human-readable name for the Container. Does not have
	// to be unique.
	Name *string `pulumi:"name"`
	// The consumer URL.
	Url *string `pulumi:"url"`
}

type ContainerV1ConsumerInput interface {
	pulumi.Input

	ToContainerV1ConsumerOutput() ContainerV1ConsumerOutput
	ToContainerV1ConsumerOutputWithContext(context.Context) ContainerV1ConsumerOutput
}

type ContainerV1ConsumerArgs struct {
	// Human-readable name for the Container. Does not have
	// to be unique.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The consumer URL.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ContainerV1ConsumerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerV1Consumer)(nil)).Elem()
}

func (i ContainerV1ConsumerArgs) ToContainerV1ConsumerOutput() ContainerV1ConsumerOutput {
	return i.ToContainerV1ConsumerOutputWithContext(context.Background())
}

func (i ContainerV1ConsumerArgs) ToContainerV1ConsumerOutputWithContext(ctx context.Context) ContainerV1ConsumerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerV1ConsumerOutput)
}

type ContainerV1ConsumerArrayInput interface {
	pulumi.Input

	ToContainerV1ConsumerArrayOutput() ContainerV1ConsumerArrayOutput
	ToContainerV1ConsumerArrayOutputWithContext(context.Context) ContainerV1ConsumerArrayOutput
}

type ContainerV1ConsumerArray []ContainerV1ConsumerInput

func (ContainerV1ConsumerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerV1Consumer)(nil)).Elem()
}

func (i ContainerV1ConsumerArray) ToContainerV1ConsumerArrayOutput() ContainerV1ConsumerArrayOutput {
	return i.ToContainerV1ConsumerArrayOutputWithContext(context.Background())
}

func (i ContainerV1ConsumerArray) ToContainerV1ConsumerArrayOutputWithContext(ctx context.Context) ContainerV1ConsumerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerV1ConsumerArrayOutput)
}

type ContainerV1ConsumerOutput struct{ *pulumi.OutputState }

func (ContainerV1ConsumerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerV1Consumer)(nil)).Elem()
}

func (o ContainerV1ConsumerOutput) ToContainerV1ConsumerOutput() ContainerV1ConsumerOutput {
	return o
}

func (o ContainerV1ConsumerOutput) ToContainerV1ConsumerOutputWithContext(ctx context.Context) ContainerV1ConsumerOutput {
	return o
}

// Human-readable name for the Container. Does not have
// to be unique.
func (o ContainerV1ConsumerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerV1Consumer) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The consumer URL.
func (o ContainerV1ConsumerOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerV1Consumer) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ContainerV1ConsumerArrayOutput struct{ *pulumi.OutputState }

func (ContainerV1ConsumerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerV1Consumer)(nil)).Elem()
}

func (o ContainerV1ConsumerArrayOutput) ToContainerV1ConsumerArrayOutput() ContainerV1ConsumerArrayOutput {
	return o
}

func (o ContainerV1ConsumerArrayOutput) ToContainerV1ConsumerArrayOutputWithContext(ctx context.Context) ContainerV1ConsumerArrayOutput {
	return o
}

func (o ContainerV1ConsumerArrayOutput) Index(i pulumi.IntInput) ContainerV1ConsumerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerV1Consumer {
		return vs[0].([]ContainerV1Consumer)[vs[1].(int)]
	}).(ContainerV1ConsumerOutput)
}

type ContainerV1SecretRef struct {
	// Human-readable name for the Container. Does not have
	// to be unique.
	Name      *string `pulumi:"name"`
	SecretRef string  `pulumi:"secretRef"`
}

type ContainerV1SecretRefInput interface {
	pulumi.Input

	ToContainerV1SecretRefOutput() ContainerV1SecretRefOutput
	ToContainerV1SecretRefOutputWithContext(context.Context) ContainerV1SecretRefOutput
}

type ContainerV1SecretRefArgs struct {
	// Human-readable name for the Container. Does not have
	// to be unique.
	Name      pulumi.StringPtrInput `pulumi:"name"`
	SecretRef pulumi.StringInput    `pulumi:"secretRef"`
}

func (ContainerV1SecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerV1SecretRef)(nil)).Elem()
}

func (i ContainerV1SecretRefArgs) ToContainerV1SecretRefOutput() ContainerV1SecretRefOutput {
	return i.ToContainerV1SecretRefOutputWithContext(context.Background())
}

func (i ContainerV1SecretRefArgs) ToContainerV1SecretRefOutputWithContext(ctx context.Context) ContainerV1SecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerV1SecretRefOutput)
}

type ContainerV1SecretRefArrayInput interface {
	pulumi.Input

	ToContainerV1SecretRefArrayOutput() ContainerV1SecretRefArrayOutput
	ToContainerV1SecretRefArrayOutputWithContext(context.Context) ContainerV1SecretRefArrayOutput
}

type ContainerV1SecretRefArray []ContainerV1SecretRefInput

func (ContainerV1SecretRefArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerV1SecretRef)(nil)).Elem()
}

func (i ContainerV1SecretRefArray) ToContainerV1SecretRefArrayOutput() ContainerV1SecretRefArrayOutput {
	return i.ToContainerV1SecretRefArrayOutputWithContext(context.Background())
}

func (i ContainerV1SecretRefArray) ToContainerV1SecretRefArrayOutputWithContext(ctx context.Context) ContainerV1SecretRefArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerV1SecretRefArrayOutput)
}

type ContainerV1SecretRefOutput struct{ *pulumi.OutputState }

func (ContainerV1SecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerV1SecretRef)(nil)).Elem()
}

func (o ContainerV1SecretRefOutput) ToContainerV1SecretRefOutput() ContainerV1SecretRefOutput {
	return o
}

func (o ContainerV1SecretRefOutput) ToContainerV1SecretRefOutputWithContext(ctx context.Context) ContainerV1SecretRefOutput {
	return o
}

// Human-readable name for the Container. Does not have
// to be unique.
func (o ContainerV1SecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerV1SecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ContainerV1SecretRefOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerV1SecretRef) string { return v.SecretRef }).(pulumi.StringOutput)
}

type ContainerV1SecretRefArrayOutput struct{ *pulumi.OutputState }

func (ContainerV1SecretRefArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerV1SecretRef)(nil)).Elem()
}

func (o ContainerV1SecretRefArrayOutput) ToContainerV1SecretRefArrayOutput() ContainerV1SecretRefArrayOutput {
	return o
}

func (o ContainerV1SecretRefArrayOutput) ToContainerV1SecretRefArrayOutputWithContext(ctx context.Context) ContainerV1SecretRefArrayOutput {
	return o
}

func (o ContainerV1SecretRefArrayOutput) Index(i pulumi.IntInput) ContainerV1SecretRefOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerV1SecretRef {
		return vs[0].([]ContainerV1SecretRef)[vs[1].(int)]
	}).(ContainerV1SecretRefOutput)
}

type GetContainerConsumer struct {
	// The Container name.
	Name *string `pulumi:"name"`
	// The consumer URL.
	Url *string `pulumi:"url"`
}

type GetContainerConsumerInput interface {
	pulumi.Input

	ToGetContainerConsumerOutput() GetContainerConsumerOutput
	ToGetContainerConsumerOutputWithContext(context.Context) GetContainerConsumerOutput
}

type GetContainerConsumerArgs struct {
	// The Container name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The consumer URL.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (GetContainerConsumerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerConsumer)(nil)).Elem()
}

func (i GetContainerConsumerArgs) ToGetContainerConsumerOutput() GetContainerConsumerOutput {
	return i.ToGetContainerConsumerOutputWithContext(context.Background())
}

func (i GetContainerConsumerArgs) ToGetContainerConsumerOutputWithContext(ctx context.Context) GetContainerConsumerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerConsumerOutput)
}

type GetContainerConsumerArrayInput interface {
	pulumi.Input

	ToGetContainerConsumerArrayOutput() GetContainerConsumerArrayOutput
	ToGetContainerConsumerArrayOutputWithContext(context.Context) GetContainerConsumerArrayOutput
}

type GetContainerConsumerArray []GetContainerConsumerInput

func (GetContainerConsumerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerConsumer)(nil)).Elem()
}

func (i GetContainerConsumerArray) ToGetContainerConsumerArrayOutput() GetContainerConsumerArrayOutput {
	return i.ToGetContainerConsumerArrayOutputWithContext(context.Background())
}

func (i GetContainerConsumerArray) ToGetContainerConsumerArrayOutputWithContext(ctx context.Context) GetContainerConsumerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerConsumerArrayOutput)
}

type GetContainerConsumerOutput struct{ *pulumi.OutputState }

func (GetContainerConsumerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerConsumer)(nil)).Elem()
}

func (o GetContainerConsumerOutput) ToGetContainerConsumerOutput() GetContainerConsumerOutput {
	return o
}

func (o GetContainerConsumerOutput) ToGetContainerConsumerOutputWithContext(ctx context.Context) GetContainerConsumerOutput {
	return o
}

// The Container name.
func (o GetContainerConsumerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetContainerConsumer) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The consumer URL.
func (o GetContainerConsumerOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetContainerConsumer) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type GetContainerConsumerArrayOutput struct{ *pulumi.OutputState }

func (GetContainerConsumerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerConsumer)(nil)).Elem()
}

func (o GetContainerConsumerArrayOutput) ToGetContainerConsumerArrayOutput() GetContainerConsumerArrayOutput {
	return o
}

func (o GetContainerConsumerArrayOutput) ToGetContainerConsumerArrayOutputWithContext(ctx context.Context) GetContainerConsumerArrayOutput {
	return o
}

func (o GetContainerConsumerArrayOutput) Index(i pulumi.IntInput) GetContainerConsumerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerConsumer {
		return vs[0].([]GetContainerConsumer)[vs[1].(int)]
	}).(GetContainerConsumerOutput)
}

type GetContainerSecretRef struct {
	// The Container name.
	Name *string `pulumi:"name"`
	// The secret reference / where to find the secret, URL.
	SecretRef *string `pulumi:"secretRef"`
}

type GetContainerSecretRefInput interface {
	pulumi.Input

	ToGetContainerSecretRefOutput() GetContainerSecretRefOutput
	ToGetContainerSecretRefOutputWithContext(context.Context) GetContainerSecretRefOutput
}

type GetContainerSecretRefArgs struct {
	// The Container name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The secret reference / where to find the secret, URL.
	SecretRef pulumi.StringPtrInput `pulumi:"secretRef"`
}

func (GetContainerSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerSecretRef)(nil)).Elem()
}

func (i GetContainerSecretRefArgs) ToGetContainerSecretRefOutput() GetContainerSecretRefOutput {
	return i.ToGetContainerSecretRefOutputWithContext(context.Background())
}

func (i GetContainerSecretRefArgs) ToGetContainerSecretRefOutputWithContext(ctx context.Context) GetContainerSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerSecretRefOutput)
}

type GetContainerSecretRefArrayInput interface {
	pulumi.Input

	ToGetContainerSecretRefArrayOutput() GetContainerSecretRefArrayOutput
	ToGetContainerSecretRefArrayOutputWithContext(context.Context) GetContainerSecretRefArrayOutput
}

type GetContainerSecretRefArray []GetContainerSecretRefInput

func (GetContainerSecretRefArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerSecretRef)(nil)).Elem()
}

func (i GetContainerSecretRefArray) ToGetContainerSecretRefArrayOutput() GetContainerSecretRefArrayOutput {
	return i.ToGetContainerSecretRefArrayOutputWithContext(context.Background())
}

func (i GetContainerSecretRefArray) ToGetContainerSecretRefArrayOutputWithContext(ctx context.Context) GetContainerSecretRefArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerSecretRefArrayOutput)
}

type GetContainerSecretRefOutput struct{ *pulumi.OutputState }

func (GetContainerSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerSecretRef)(nil)).Elem()
}

func (o GetContainerSecretRefOutput) ToGetContainerSecretRefOutput() GetContainerSecretRefOutput {
	return o
}

func (o GetContainerSecretRefOutput) ToGetContainerSecretRefOutputWithContext(ctx context.Context) GetContainerSecretRefOutput {
	return o
}

// The Container name.
func (o GetContainerSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetContainerSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The secret reference / where to find the secret, URL.
func (o GetContainerSecretRefOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetContainerSecretRef) *string { return v.SecretRef }).(pulumi.StringPtrOutput)
}

type GetContainerSecretRefArrayOutput struct{ *pulumi.OutputState }

func (GetContainerSecretRefArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerSecretRef)(nil)).Elem()
}

func (o GetContainerSecretRefArrayOutput) ToGetContainerSecretRefArrayOutput() GetContainerSecretRefArrayOutput {
	return o
}

func (o GetContainerSecretRefArrayOutput) ToGetContainerSecretRefArrayOutputWithContext(ctx context.Context) GetContainerSecretRefArrayOutput {
	return o
}

func (o GetContainerSecretRefArrayOutput) Index(i pulumi.IntInput) GetContainerSecretRefOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerSecretRef {
		return vs[0].([]GetContainerSecretRef)[vs[1].(int)]
	}).(GetContainerSecretRefOutput)
}

func init() {
	pulumi.RegisterOutputType(ContainerV1ConsumerOutput{})
	pulumi.RegisterOutputType(ContainerV1ConsumerArrayOutput{})
	pulumi.RegisterOutputType(ContainerV1SecretRefOutput{})
	pulumi.RegisterOutputType(ContainerV1SecretRefArrayOutput{})
	pulumi.RegisterOutputType(GetContainerConsumerOutput{})
	pulumi.RegisterOutputType(GetContainerConsumerArrayOutput{})
	pulumi.RegisterOutputType(GetContainerSecretRefOutput{})
	pulumi.RegisterOutputType(GetContainerSecretRefArrayOutput{})
}
