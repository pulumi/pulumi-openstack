// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package keymanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-openstack/sdk/v3/go/openstack/keymanager"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := keymanager.GetSecret(ctx, &keymanager.GetSecretArgs{
// 			Mode:       pulumi.StringRef("cbc"),
// 			SecretType: pulumi.StringRef("passphrase"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ## Date Filters
//
// The values for the `expirationFilter`, `createdAtFilter`, and
// `updatedAtFilter` parameters are comma-separated lists of time stamps in
// RFC3339 format. The time stamps can be prefixed with any of these comparison
// operators: *gt:* (greater-than), *gte:* (greater-than-or-equal), *lt:*
// (less-than), *lte:* (less-than-or-equal).
//
// For example, to get a passphrase a Secret with CBC moda, that will expire in
// January of 2020:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-openstack/sdk/v3/go/openstack/keymanager"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := keymanager.GetSecret(ctx, &keymanager.GetSecretArgs{
// 			ExpirationFilter: pulumi.StringRef("gt:2020-01-01T00:00:00Z"),
// 			Mode:             pulumi.StringRef("cbc"),
// 			SecretType:       pulumi.StringRef("passphrase"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetSecret(ctx *pulumi.Context, args *GetSecretArgs, opts ...pulumi.InvokeOption) (*GetSecretResult, error) {
	var rv GetSecretResult
	err := ctx.Invoke("openstack:keymanager/getSecret:getSecret", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecret.
type GetSecretArgs struct {
	// Select the Secret with an ACL that contains the user.
	// Project scope is ignored. Defaults to `false`.
	AclOnly *bool `pulumi:"aclOnly"`
	// The Secret algorithm.
	Algorithm *string `pulumi:"algorithm"`
	// The Secret bit length.
	BitLength *int `pulumi:"bitLength"`
	// Date filter to select the Secret with
	// created matching the specified criteria. See Date Filters below for more
	// detail.
	CreatedAtFilter *string `pulumi:"createdAtFilter"`
	// Date filter to select the Secret with
	// expiration matching the specified criteria. See Date Filters below for more
	// detail.
	ExpirationFilter *string `pulumi:"expirationFilter"`
	// The Secret mode.
	Mode *string `pulumi:"mode"`
	// The Secret name.
	Name *string `pulumi:"name"`
	// The region in which to obtain the V1 KeyManager client.
	// A KeyManager client is needed to fetch a secret. If omitted, the `region`
	// argument of the provider is used.
	Region *string `pulumi:"region"`
	// The Secret type. For more information see
	// [Secret types](https://docs.openstack.org/barbican/latest/api/reference/secret_types.html).
	SecretType *string `pulumi:"secretType"`
	// Date filter to select the Secret with
	// updated matching the specified criteria. See Date Filters below for more
	// detail.
	UpdatedAtFilter *string `pulumi:"updatedAtFilter"`
}

// A collection of values returned by getSecret.
type GetSecretResult struct {
	// See Argument Reference above.
	AclOnly *bool `pulumi:"aclOnly"`
	// The list of ACLs assigned to a secret. The `read` structure is described below.
	Acls []GetSecretAcl `pulumi:"acls"`
	// See Argument Reference above.
	Algorithm *string `pulumi:"algorithm"`
	// See Argument Reference above.
	BitLength *int `pulumi:"bitLength"`
	// The map of the content types, assigned on the secret.
	ContentTypes map[string]interface{} `pulumi:"contentTypes"`
	// The date the secret ACL was created.
	CreatedAt string `pulumi:"createdAt"`
	// See Argument Reference above.
	CreatedAtFilter *string `pulumi:"createdAtFilter"`
	// The creator of the secret.
	CreatorId string `pulumi:"creatorId"`
	// The date the secret will expire.
	Expiration string `pulumi:"expiration"`
	// See Argument Reference above.
	ExpirationFilter *string `pulumi:"expirationFilter"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The map of metadata, assigned on the secret, which has been
	// explicitly and implicitly added.
	Metadata map[string]interface{} `pulumi:"metadata"`
	// See Argument Reference above.
	Mode *string `pulumi:"mode"`
	// See Argument Reference above.
	Name *string `pulumi:"name"`
	// The secret payload.
	Payload string `pulumi:"payload"`
	// The Secret encoding.
	PayloadContentEncoding string `pulumi:"payloadContentEncoding"`
	// The Secret content type.
	PayloadContentType string `pulumi:"payloadContentType"`
	// See Argument Reference above.
	Region *string `pulumi:"region"`
	// The secret reference / where to find the secret.
	SecretRef string `pulumi:"secretRef"`
	// See Argument Reference above.
	SecretType *string `pulumi:"secretType"`
	// The status of the secret.
	Status string `pulumi:"status"`
	// The date the secret ACL was last updated.
	UpdatedAt string `pulumi:"updatedAt"`
	// See Argument Reference above.
	UpdatedAtFilter *string `pulumi:"updatedAtFilter"`
}

func GetSecretOutput(ctx *pulumi.Context, args GetSecretOutputArgs, opts ...pulumi.InvokeOption) GetSecretResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSecretResult, error) {
			args := v.(GetSecretArgs)
			r, err := GetSecret(ctx, &args, opts...)
			var s GetSecretResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSecretResultOutput)
}

// A collection of arguments for invoking getSecret.
type GetSecretOutputArgs struct {
	// Select the Secret with an ACL that contains the user.
	// Project scope is ignored. Defaults to `false`.
	AclOnly pulumi.BoolPtrInput `pulumi:"aclOnly"`
	// The Secret algorithm.
	Algorithm pulumi.StringPtrInput `pulumi:"algorithm"`
	// The Secret bit length.
	BitLength pulumi.IntPtrInput `pulumi:"bitLength"`
	// Date filter to select the Secret with
	// created matching the specified criteria. See Date Filters below for more
	// detail.
	CreatedAtFilter pulumi.StringPtrInput `pulumi:"createdAtFilter"`
	// Date filter to select the Secret with
	// expiration matching the specified criteria. See Date Filters below for more
	// detail.
	ExpirationFilter pulumi.StringPtrInput `pulumi:"expirationFilter"`
	// The Secret mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// The Secret name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The region in which to obtain the V1 KeyManager client.
	// A KeyManager client is needed to fetch a secret. If omitted, the `region`
	// argument of the provider is used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The Secret type. For more information see
	// [Secret types](https://docs.openstack.org/barbican/latest/api/reference/secret_types.html).
	SecretType pulumi.StringPtrInput `pulumi:"secretType"`
	// Date filter to select the Secret with
	// updated matching the specified criteria. See Date Filters below for more
	// detail.
	UpdatedAtFilter pulumi.StringPtrInput `pulumi:"updatedAtFilter"`
}

func (GetSecretOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretArgs)(nil)).Elem()
}

// A collection of values returned by getSecret.
type GetSecretResultOutput struct{ *pulumi.OutputState }

func (GetSecretResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretResult)(nil)).Elem()
}

func (o GetSecretResultOutput) ToGetSecretResultOutput() GetSecretResultOutput {
	return o
}

func (o GetSecretResultOutput) ToGetSecretResultOutputWithContext(ctx context.Context) GetSecretResultOutput {
	return o
}

// See Argument Reference above.
func (o GetSecretResultOutput) AclOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecretResult) *bool { return v.AclOnly }).(pulumi.BoolPtrOutput)
}

// The list of ACLs assigned to a secret. The `read` structure is described below.
func (o GetSecretResultOutput) Acls() GetSecretAclArrayOutput {
	return o.ApplyT(func(v GetSecretResult) []GetSecretAcl { return v.Acls }).(GetSecretAclArrayOutput)
}

// See Argument Reference above.
func (o GetSecretResultOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretResult) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

// See Argument Reference above.
func (o GetSecretResultOutput) BitLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSecretResult) *int { return v.BitLength }).(pulumi.IntPtrOutput)
}

// The map of the content types, assigned on the secret.
func (o GetSecretResultOutput) ContentTypes() pulumi.MapOutput {
	return o.ApplyT(func(v GetSecretResult) map[string]interface{} { return v.ContentTypes }).(pulumi.MapOutput)
}

// The date the secret ACL was created.
func (o GetSecretResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o GetSecretResultOutput) CreatedAtFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretResult) *string { return v.CreatedAtFilter }).(pulumi.StringPtrOutput)
}

// The creator of the secret.
func (o GetSecretResultOutput) CreatorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretResult) string { return v.CreatorId }).(pulumi.StringOutput)
}

// The date the secret will expire.
func (o GetSecretResultOutput) Expiration() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretResult) string { return v.Expiration }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o GetSecretResultOutput) ExpirationFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretResult) *string { return v.ExpirationFilter }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSecretResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretResult) string { return v.Id }).(pulumi.StringOutput)
}

// The map of metadata, assigned on the secret, which has been
// explicitly and implicitly added.
func (o GetSecretResultOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v GetSecretResult) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

// See Argument Reference above.
func (o GetSecretResultOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretResult) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// See Argument Reference above.
func (o GetSecretResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The secret payload.
func (o GetSecretResultOutput) Payload() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretResult) string { return v.Payload }).(pulumi.StringOutput)
}

// The Secret encoding.
func (o GetSecretResultOutput) PayloadContentEncoding() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretResult) string { return v.PayloadContentEncoding }).(pulumi.StringOutput)
}

// The Secret content type.
func (o GetSecretResultOutput) PayloadContentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretResult) string { return v.PayloadContentType }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o GetSecretResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The secret reference / where to find the secret.
func (o GetSecretResultOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretResult) string { return v.SecretRef }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o GetSecretResultOutput) SecretType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretResult) *string { return v.SecretType }).(pulumi.StringPtrOutput)
}

// The status of the secret.
func (o GetSecretResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretResult) string { return v.Status }).(pulumi.StringOutput)
}

// The date the secret ACL was last updated.
func (o GetSecretResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o GetSecretResultOutput) UpdatedAtFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretResult) *string { return v.UpdatedAtFilter }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecretResultOutput{})
}
