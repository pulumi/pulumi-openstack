// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package networking

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type SecGroup struct {
	pulumi.CustomResourceState

	// The collection of tags assigned on the security group, which have
	// been explicitly and implicitly added.
	AllTags pulumi.StringArrayOutput `pulumi:"allTags"`
	// Whether or not to delete the default
	// egress security rules. This is `false` by default. See the below note
	// for more information.
	DeleteDefaultRules pulumi.BoolPtrOutput `pulumi:"deleteDefaultRules"`
	// A unique name for the security group.
	Description pulumi.StringOutput `pulumi:"description"`
	// A unique name for the security group.
	Name pulumi.StringOutput `pulumi:"name"`
	// The region in which to obtain the V2 networking client.
	// A networking client is needed to create a port. If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// security group.
	Region pulumi.StringOutput `pulumi:"region"`
	// A set of string tags for the security group.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The owner of the security group. Required if admin
	// wants to create a port for another tenant. Changing this creates a new
	// security group.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewSecGroup registers a new resource with the given unique name, arguments, and options.
func NewSecGroup(ctx *pulumi.Context,
	name string, args *SecGroupArgs, opts ...pulumi.ResourceOption) (*SecGroup, error) {
	if args == nil {
		args = &SecGroupArgs{}
	}
	var resource SecGroup
	err := ctx.RegisterResource("openstack:networking/secGroup:SecGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecGroup gets an existing SecGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecGroupState, opts ...pulumi.ResourceOption) (*SecGroup, error) {
	var resource SecGroup
	err := ctx.ReadResource("openstack:networking/secGroup:SecGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecGroup resources.
type secGroupState struct {
	// The collection of tags assigned on the security group, which have
	// been explicitly and implicitly added.
	AllTags []string `pulumi:"allTags"`
	// Whether or not to delete the default
	// egress security rules. This is `false` by default. See the below note
	// for more information.
	DeleteDefaultRules *bool `pulumi:"deleteDefaultRules"`
	// A unique name for the security group.
	Description *string `pulumi:"description"`
	// A unique name for the security group.
	Name *string `pulumi:"name"`
	// The region in which to obtain the V2 networking client.
	// A networking client is needed to create a port. If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// security group.
	Region *string `pulumi:"region"`
	// A set of string tags for the security group.
	Tags []string `pulumi:"tags"`
	// The owner of the security group. Required if admin
	// wants to create a port for another tenant. Changing this creates a new
	// security group.
	TenantId *string `pulumi:"tenantId"`
}

type SecGroupState struct {
	// The collection of tags assigned on the security group, which have
	// been explicitly and implicitly added.
	AllTags pulumi.StringArrayInput
	// Whether or not to delete the default
	// egress security rules. This is `false` by default. See the below note
	// for more information.
	DeleteDefaultRules pulumi.BoolPtrInput
	// A unique name for the security group.
	Description pulumi.StringPtrInput
	// A unique name for the security group.
	Name pulumi.StringPtrInput
	// The region in which to obtain the V2 networking client.
	// A networking client is needed to create a port. If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// security group.
	Region pulumi.StringPtrInput
	// A set of string tags for the security group.
	Tags pulumi.StringArrayInput
	// The owner of the security group. Required if admin
	// wants to create a port for another tenant. Changing this creates a new
	// security group.
	TenantId pulumi.StringPtrInput
}

func (SecGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*secGroupState)(nil)).Elem()
}

type secGroupArgs struct {
	// Whether or not to delete the default
	// egress security rules. This is `false` by default. See the below note
	// for more information.
	DeleteDefaultRules *bool `pulumi:"deleteDefaultRules"`
	// A unique name for the security group.
	Description *string `pulumi:"description"`
	// A unique name for the security group.
	Name *string `pulumi:"name"`
	// The region in which to obtain the V2 networking client.
	// A networking client is needed to create a port. If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// security group.
	Region *string `pulumi:"region"`
	// A set of string tags for the security group.
	Tags []string `pulumi:"tags"`
	// The owner of the security group. Required if admin
	// wants to create a port for another tenant. Changing this creates a new
	// security group.
	TenantId *string `pulumi:"tenantId"`
}

// The set of arguments for constructing a SecGroup resource.
type SecGroupArgs struct {
	// Whether or not to delete the default
	// egress security rules. This is `false` by default. See the below note
	// for more information.
	DeleteDefaultRules pulumi.BoolPtrInput
	// A unique name for the security group.
	Description pulumi.StringPtrInput
	// A unique name for the security group.
	Name pulumi.StringPtrInput
	// The region in which to obtain the V2 networking client.
	// A networking client is needed to create a port. If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// security group.
	Region pulumi.StringPtrInput
	// A set of string tags for the security group.
	Tags pulumi.StringArrayInput
	// The owner of the security group. Required if admin
	// wants to create a port for another tenant. Changing this creates a new
	// security group.
	TenantId pulumi.StringPtrInput
}

func (SecGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secGroupArgs)(nil)).Elem()
}
