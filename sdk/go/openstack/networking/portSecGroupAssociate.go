// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package networking

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type PortSecGroupAssociate struct {
	pulumi.CustomResourceState

	// The collection of Security Group IDs on the port
	// which have been explicitly and implicitly added.
	AllSecurityGroupIds pulumi.StringArrayOutput `pulumi:"allSecurityGroupIds"`
	// Whether to replace or append the list of security
	// groups, specified in the `securityGroupIds`. Defaults to `false`.
	Enforce pulumi.BoolPtrOutput `pulumi:"enforce"`
	// An UUID of the port to apply security groups to.
	PortId pulumi.StringOutput `pulumi:"portId"`
	// The region in which to obtain the V2 networking client.
	// A networking client is needed to manage a port. If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// A list of security group IDs to apply to
	// the port. The security groups must be specified by ID and not name (as
	// opposed to how they are configured with the Compute Instance).
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
}

// NewPortSecGroupAssociate registers a new resource with the given unique name, arguments, and options.
func NewPortSecGroupAssociate(ctx *pulumi.Context,
	name string, args *PortSecGroupAssociateArgs, opts ...pulumi.ResourceOption) (*PortSecGroupAssociate, error) {
	if args == nil || args.PortId == nil {
		return nil, errors.New("missing required argument 'PortId'")
	}
	if args == nil || args.SecurityGroupIds == nil {
		return nil, errors.New("missing required argument 'SecurityGroupIds'")
	}
	if args == nil {
		args = &PortSecGroupAssociateArgs{}
	}
	var resource PortSecGroupAssociate
	err := ctx.RegisterResource("openstack:networking/portSecGroupAssociate:PortSecGroupAssociate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPortSecGroupAssociate gets an existing PortSecGroupAssociate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPortSecGroupAssociate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PortSecGroupAssociateState, opts ...pulumi.ResourceOption) (*PortSecGroupAssociate, error) {
	var resource PortSecGroupAssociate
	err := ctx.ReadResource("openstack:networking/portSecGroupAssociate:PortSecGroupAssociate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PortSecGroupAssociate resources.
type portSecGroupAssociateState struct {
	// The collection of Security Group IDs on the port
	// which have been explicitly and implicitly added.
	AllSecurityGroupIds []string `pulumi:"allSecurityGroupIds"`
	// Whether to replace or append the list of security
	// groups, specified in the `securityGroupIds`. Defaults to `false`.
	Enforce *bool `pulumi:"enforce"`
	// An UUID of the port to apply security groups to.
	PortId *string `pulumi:"portId"`
	// The region in which to obtain the V2 networking client.
	// A networking client is needed to manage a port. If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// resource.
	Region *string `pulumi:"region"`
	// A list of security group IDs to apply to
	// the port. The security groups must be specified by ID and not name (as
	// opposed to how they are configured with the Compute Instance).
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
}

type PortSecGroupAssociateState struct {
	// The collection of Security Group IDs on the port
	// which have been explicitly and implicitly added.
	AllSecurityGroupIds pulumi.StringArrayInput
	// Whether to replace or append the list of security
	// groups, specified in the `securityGroupIds`. Defaults to `false`.
	Enforce pulumi.BoolPtrInput
	// An UUID of the port to apply security groups to.
	PortId pulumi.StringPtrInput
	// The region in which to obtain the V2 networking client.
	// A networking client is needed to manage a port. If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// resource.
	Region pulumi.StringPtrInput
	// A list of security group IDs to apply to
	// the port. The security groups must be specified by ID and not name (as
	// opposed to how they are configured with the Compute Instance).
	SecurityGroupIds pulumi.StringArrayInput
}

func (PortSecGroupAssociateState) ElementType() reflect.Type {
	return reflect.TypeOf((*portSecGroupAssociateState)(nil)).Elem()
}

type portSecGroupAssociateArgs struct {
	// Whether to replace or append the list of security
	// groups, specified in the `securityGroupIds`. Defaults to `false`.
	Enforce *bool `pulumi:"enforce"`
	// An UUID of the port to apply security groups to.
	PortId string `pulumi:"portId"`
	// The region in which to obtain the V2 networking client.
	// A networking client is needed to manage a port. If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// resource.
	Region *string `pulumi:"region"`
	// A list of security group IDs to apply to
	// the port. The security groups must be specified by ID and not name (as
	// opposed to how they are configured with the Compute Instance).
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
}

// The set of arguments for constructing a PortSecGroupAssociate resource.
type PortSecGroupAssociateArgs struct {
	// Whether to replace or append the list of security
	// groups, specified in the `securityGroupIds`. Defaults to `false`.
	Enforce pulumi.BoolPtrInput
	// An UUID of the port to apply security groups to.
	PortId pulumi.StringInput
	// The region in which to obtain the V2 networking client.
	// A networking client is needed to manage a port. If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// resource.
	Region pulumi.StringPtrInput
	// A list of security group IDs to apply to
	// the port. The security groups must be specified by ID and not name (as
	// opposed to how they are configured with the Compute Instance).
	SecurityGroupIds pulumi.StringArrayInput
}

func (PortSecGroupAssociateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*portSecGroupAssociateArgs)(nil)).Elem()
}
