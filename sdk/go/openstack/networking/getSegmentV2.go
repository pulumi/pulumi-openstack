// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networking

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-openstack/sdk/v5/go/openstack/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the ID of an available OpenStack network.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-openstack/sdk/v5/go/openstack/networking"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networking.LookupSegmentV2(ctx, &networking.LookupSegmentV2Args{
//				Name: pulumi.StringRef("tf_test_segment"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSegmentV2(ctx *pulumi.Context, args *LookupSegmentV2Args, opts ...pulumi.InvokeOption) (*LookupSegmentV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSegmentV2Result
	err := ctx.Invoke("openstack:networking/getSegmentV2:getSegmentV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSegmentV2.
type LookupSegmentV2Args struct {
	// Human-readable description of the network segment.
	Description *string `pulumi:"description"`
	// The name of the network segment.
	Name *string `pulumi:"name"`
	// The ID of the network.
	NetworkId *string `pulumi:"networkId"`
	// The type of the network, such as `vlan`, `vxlan`,
	// `flat`, `gre`, `geneve`, or `local`.
	NetworkType *string `pulumi:"networkType"`
	// The name of the physical network.
	PhysicalNetwork *string `pulumi:"physicalNetwork"`
	// The region in which to obtain the V2 Neutron client.
	// A Neutron client is needed to retrieve networks ids. If omitted, the
	// `region` argument of the provider is used.
	Region *string `pulumi:"region"`
	// See Argument Reference above.
	RevisionNumber *int `pulumi:"revisionNumber"`
	// The ID of the network segment
	SegmentId *string `pulumi:"segmentId"`
	// The segmentation ID of the network segment.
	SegmentationId *int `pulumi:"segmentationId"`
}

// A collection of values returned by getSegmentV2.
type LookupSegmentV2Result struct {
	// The date and time when the network segment was created.
	CreatedAt string `pulumi:"createdAt"`
	// See Argument Reference above.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// See Argument Reference above.
	Name string `pulumi:"name"`
	// See Argument Reference above.
	NetworkId string `pulumi:"networkId"`
	// See Argument Reference above.
	NetworkType string `pulumi:"networkType"`
	// See Argument Reference above.
	PhysicalNetwork string `pulumi:"physicalNetwork"`
	Region          string `pulumi:"region"`
	// See Argument Reference above.
	RevisionNumber int `pulumi:"revisionNumber"`
	// See Argument Reference above.
	SegmentId string `pulumi:"segmentId"`
	// See Argument Reference above.
	SegmentationId int `pulumi:"segmentationId"`
	// The date and time when the network segment was last updated.
	UpdatedAt string `pulumi:"updatedAt"`
}

func LookupSegmentV2Output(ctx *pulumi.Context, args LookupSegmentV2OutputArgs, opts ...pulumi.InvokeOption) LookupSegmentV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSegmentV2ResultOutput, error) {
			args := v.(LookupSegmentV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("openstack:networking/getSegmentV2:getSegmentV2", args, LookupSegmentV2ResultOutput{}, options).(LookupSegmentV2ResultOutput), nil
		}).(LookupSegmentV2ResultOutput)
}

// A collection of arguments for invoking getSegmentV2.
type LookupSegmentV2OutputArgs struct {
	// Human-readable description of the network segment.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the network segment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ID of the network.
	NetworkId pulumi.StringPtrInput `pulumi:"networkId"`
	// The type of the network, such as `vlan`, `vxlan`,
	// `flat`, `gre`, `geneve`, or `local`.
	NetworkType pulumi.StringPtrInput `pulumi:"networkType"`
	// The name of the physical network.
	PhysicalNetwork pulumi.StringPtrInput `pulumi:"physicalNetwork"`
	// The region in which to obtain the V2 Neutron client.
	// A Neutron client is needed to retrieve networks ids. If omitted, the
	// `region` argument of the provider is used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// See Argument Reference above.
	RevisionNumber pulumi.IntPtrInput `pulumi:"revisionNumber"`
	// The ID of the network segment
	SegmentId pulumi.StringPtrInput `pulumi:"segmentId"`
	// The segmentation ID of the network segment.
	SegmentationId pulumi.IntPtrInput `pulumi:"segmentationId"`
}

func (LookupSegmentV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSegmentV2Args)(nil)).Elem()
}

// A collection of values returned by getSegmentV2.
type LookupSegmentV2ResultOutput struct{ *pulumi.OutputState }

func (LookupSegmentV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSegmentV2Result)(nil)).Elem()
}

func (o LookupSegmentV2ResultOutput) ToLookupSegmentV2ResultOutput() LookupSegmentV2ResultOutput {
	return o
}

func (o LookupSegmentV2ResultOutput) ToLookupSegmentV2ResultOutputWithContext(ctx context.Context) LookupSegmentV2ResultOutput {
	return o
}

// The date and time when the network segment was created.
func (o LookupSegmentV2ResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentV2Result) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o LookupSegmentV2ResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentV2Result) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSegmentV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o LookupSegmentV2ResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentV2Result) string { return v.Name }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o LookupSegmentV2ResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentV2Result) string { return v.NetworkId }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o LookupSegmentV2ResultOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentV2Result) string { return v.NetworkType }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o LookupSegmentV2ResultOutput) PhysicalNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentV2Result) string { return v.PhysicalNetwork }).(pulumi.StringOutput)
}

func (o LookupSegmentV2ResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentV2Result) string { return v.Region }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o LookupSegmentV2ResultOutput) RevisionNumber() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSegmentV2Result) int { return v.RevisionNumber }).(pulumi.IntOutput)
}

// See Argument Reference above.
func (o LookupSegmentV2ResultOutput) SegmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentV2Result) string { return v.SegmentId }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o LookupSegmentV2ResultOutput) SegmentationId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSegmentV2Result) int { return v.SegmentationId }).(pulumi.IntOutput)
}

// The date and time when the network segment was last updated.
func (o LookupSegmentV2ResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentV2Result) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSegmentV2ResultOutput{})
}
