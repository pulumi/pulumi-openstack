// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package networking

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages a V2 neutron security group rule resource within OpenStack.
// Unlike Nova security groups, neutron separates the group from the rules
// and also allows an admin to target a specific tenant_id.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-openstack/sdk/v2/go/openstack/networking"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		secgroup1, err := networking.NewSecGroup(ctx, "secgroup1", &networking.SecGroupArgs{
// 			Description: pulumi.String("My neutron security group"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = networking.NewSecGroupRule(ctx, "secgroupRule1", &networking.SecGroupRuleArgs{
// 			Direction:       pulumi.String("ingress"),
// 			Ethertype:       pulumi.String("IPv4"),
// 			PortRangeMax:    pulumi.Int(22),
// 			PortRangeMin:    pulumi.Int(22),
// 			Protocol:        pulumi.String("tcp"),
// 			RemoteIpPrefix:  pulumi.String("0.0.0.0/0"),
// 			SecurityGroupId: secgroup1.ID(),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type SecGroupRule struct {
	pulumi.CustomResourceState

	// A description of the rule. Changing this creates a new security group rule.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The direction of the rule, valid values are __ingress__
	// or __egress__. Changing this creates a new security group rule.
	Direction pulumi.StringOutput `pulumi:"direction"`
	// The layer 3 protocol type, valid values are __IPv4__
	// or __IPv6__. Changing this creates a new security group rule.
	Ethertype pulumi.StringOutput `pulumi:"ethertype"`
	// The higher part of the allowed port range, valid
	// integer value needs to be between 1 and 65535. Changing this creates a new
	// security group rule.
	PortRangeMax pulumi.IntOutput `pulumi:"portRangeMax"`
	// The lower part of the allowed port range, valid
	// integer value needs to be between 1 and 65535. Changing this creates a new
	// security group rule.
	PortRangeMin pulumi.IntOutput `pulumi:"portRangeMin"`
	// The layer 4 protocol type, valid values are following. Changing this creates a new security group rule. This is required if you want to specify a port range.
	// * __tcp__
	// * __udp__
	// * __icmp__
	// * __ah__
	// * __dccp__
	// * __egp__
	// * __esp__
	// * __gre__
	// * __igmp__
	// * __ipv6-encap__
	// * __ipv6-frag__
	// * __ipv6-icmp__
	// * __ipv6-nonxt__
	// * __ipv6-opts__
	// * __ipv6-route__
	// * __ospf__
	// * __pgm__
	// * __rsvp__
	// * __sctp__
	// * __udplite__
	// * __vrrp__
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// The region in which to obtain the V2 networking client.
	// A networking client is needed to create a port. If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// security group rule.
	Region pulumi.StringOutput `pulumi:"region"`
	// The remote group id, the value needs to be an
	// Openstack ID of a security group in the same tenant. Changing this creates
	// a new security group rule.
	RemoteGroupId pulumi.StringOutput `pulumi:"remoteGroupId"`
	// The remote CIDR, the value needs to be a valid
	// CIDR (i.e. 192.168.0.0/16). Changing this creates a new security group rule.
	RemoteIpPrefix pulumi.StringOutput `pulumi:"remoteIpPrefix"`
	// The security group id the rule should belong
	// to, the value needs to be an Openstack ID of a security group in the same
	// tenant. Changing this creates a new security group rule.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
	// The owner of the security group. Required if admin
	// wants to create a port for another tenant. Changing this creates a new
	// security group rule.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewSecGroupRule registers a new resource with the given unique name, arguments, and options.
func NewSecGroupRule(ctx *pulumi.Context,
	name string, args *SecGroupRuleArgs, opts ...pulumi.ResourceOption) (*SecGroupRule, error) {
	if args == nil || args.Direction == nil {
		return nil, errors.New("missing required argument 'Direction'")
	}
	if args == nil || args.Ethertype == nil {
		return nil, errors.New("missing required argument 'Ethertype'")
	}
	if args == nil || args.SecurityGroupId == nil {
		return nil, errors.New("missing required argument 'SecurityGroupId'")
	}
	if args == nil {
		args = &SecGroupRuleArgs{}
	}
	var resource SecGroupRule
	err := ctx.RegisterResource("openstack:networking/secGroupRule:SecGroupRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecGroupRule gets an existing SecGroupRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecGroupRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecGroupRuleState, opts ...pulumi.ResourceOption) (*SecGroupRule, error) {
	var resource SecGroupRule
	err := ctx.ReadResource("openstack:networking/secGroupRule:SecGroupRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecGroupRule resources.
type secGroupRuleState struct {
	// A description of the rule. Changing this creates a new security group rule.
	Description *string `pulumi:"description"`
	// The direction of the rule, valid values are __ingress__
	// or __egress__. Changing this creates a new security group rule.
	Direction *string `pulumi:"direction"`
	// The layer 3 protocol type, valid values are __IPv4__
	// or __IPv6__. Changing this creates a new security group rule.
	Ethertype *string `pulumi:"ethertype"`
	// The higher part of the allowed port range, valid
	// integer value needs to be between 1 and 65535. Changing this creates a new
	// security group rule.
	PortRangeMax *int `pulumi:"portRangeMax"`
	// The lower part of the allowed port range, valid
	// integer value needs to be between 1 and 65535. Changing this creates a new
	// security group rule.
	PortRangeMin *int `pulumi:"portRangeMin"`
	// The layer 4 protocol type, valid values are following. Changing this creates a new security group rule. This is required if you want to specify a port range.
	// * __tcp__
	// * __udp__
	// * __icmp__
	// * __ah__
	// * __dccp__
	// * __egp__
	// * __esp__
	// * __gre__
	// * __igmp__
	// * __ipv6-encap__
	// * __ipv6-frag__
	// * __ipv6-icmp__
	// * __ipv6-nonxt__
	// * __ipv6-opts__
	// * __ipv6-route__
	// * __ospf__
	// * __pgm__
	// * __rsvp__
	// * __sctp__
	// * __udplite__
	// * __vrrp__
	Protocol *string `pulumi:"protocol"`
	// The region in which to obtain the V2 networking client.
	// A networking client is needed to create a port. If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// security group rule.
	Region *string `pulumi:"region"`
	// The remote group id, the value needs to be an
	// Openstack ID of a security group in the same tenant. Changing this creates
	// a new security group rule.
	RemoteGroupId *string `pulumi:"remoteGroupId"`
	// The remote CIDR, the value needs to be a valid
	// CIDR (i.e. 192.168.0.0/16). Changing this creates a new security group rule.
	RemoteIpPrefix *string `pulumi:"remoteIpPrefix"`
	// The security group id the rule should belong
	// to, the value needs to be an Openstack ID of a security group in the same
	// tenant. Changing this creates a new security group rule.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// The owner of the security group. Required if admin
	// wants to create a port for another tenant. Changing this creates a new
	// security group rule.
	TenantId *string `pulumi:"tenantId"`
}

type SecGroupRuleState struct {
	// A description of the rule. Changing this creates a new security group rule.
	Description pulumi.StringPtrInput
	// The direction of the rule, valid values are __ingress__
	// or __egress__. Changing this creates a new security group rule.
	Direction pulumi.StringPtrInput
	// The layer 3 protocol type, valid values are __IPv4__
	// or __IPv6__. Changing this creates a new security group rule.
	Ethertype pulumi.StringPtrInput
	// The higher part of the allowed port range, valid
	// integer value needs to be between 1 and 65535. Changing this creates a new
	// security group rule.
	PortRangeMax pulumi.IntPtrInput
	// The lower part of the allowed port range, valid
	// integer value needs to be between 1 and 65535. Changing this creates a new
	// security group rule.
	PortRangeMin pulumi.IntPtrInput
	// The layer 4 protocol type, valid values are following. Changing this creates a new security group rule. This is required if you want to specify a port range.
	// * __tcp__
	// * __udp__
	// * __icmp__
	// * __ah__
	// * __dccp__
	// * __egp__
	// * __esp__
	// * __gre__
	// * __igmp__
	// * __ipv6-encap__
	// * __ipv6-frag__
	// * __ipv6-icmp__
	// * __ipv6-nonxt__
	// * __ipv6-opts__
	// * __ipv6-route__
	// * __ospf__
	// * __pgm__
	// * __rsvp__
	// * __sctp__
	// * __udplite__
	// * __vrrp__
	Protocol pulumi.StringPtrInput
	// The region in which to obtain the V2 networking client.
	// A networking client is needed to create a port. If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// security group rule.
	Region pulumi.StringPtrInput
	// The remote group id, the value needs to be an
	// Openstack ID of a security group in the same tenant. Changing this creates
	// a new security group rule.
	RemoteGroupId pulumi.StringPtrInput
	// The remote CIDR, the value needs to be a valid
	// CIDR (i.e. 192.168.0.0/16). Changing this creates a new security group rule.
	RemoteIpPrefix pulumi.StringPtrInput
	// The security group id the rule should belong
	// to, the value needs to be an Openstack ID of a security group in the same
	// tenant. Changing this creates a new security group rule.
	SecurityGroupId pulumi.StringPtrInput
	// The owner of the security group. Required if admin
	// wants to create a port for another tenant. Changing this creates a new
	// security group rule.
	TenantId pulumi.StringPtrInput
}

func (SecGroupRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*secGroupRuleState)(nil)).Elem()
}

type secGroupRuleArgs struct {
	// A description of the rule. Changing this creates a new security group rule.
	Description *string `pulumi:"description"`
	// The direction of the rule, valid values are __ingress__
	// or __egress__. Changing this creates a new security group rule.
	Direction string `pulumi:"direction"`
	// The layer 3 protocol type, valid values are __IPv4__
	// or __IPv6__. Changing this creates a new security group rule.
	Ethertype string `pulumi:"ethertype"`
	// The higher part of the allowed port range, valid
	// integer value needs to be between 1 and 65535. Changing this creates a new
	// security group rule.
	PortRangeMax *int `pulumi:"portRangeMax"`
	// The lower part of the allowed port range, valid
	// integer value needs to be between 1 and 65535. Changing this creates a new
	// security group rule.
	PortRangeMin *int `pulumi:"portRangeMin"`
	// The layer 4 protocol type, valid values are following. Changing this creates a new security group rule. This is required if you want to specify a port range.
	// * __tcp__
	// * __udp__
	// * __icmp__
	// * __ah__
	// * __dccp__
	// * __egp__
	// * __esp__
	// * __gre__
	// * __igmp__
	// * __ipv6-encap__
	// * __ipv6-frag__
	// * __ipv6-icmp__
	// * __ipv6-nonxt__
	// * __ipv6-opts__
	// * __ipv6-route__
	// * __ospf__
	// * __pgm__
	// * __rsvp__
	// * __sctp__
	// * __udplite__
	// * __vrrp__
	Protocol *string `pulumi:"protocol"`
	// The region in which to obtain the V2 networking client.
	// A networking client is needed to create a port. If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// security group rule.
	Region *string `pulumi:"region"`
	// The remote group id, the value needs to be an
	// Openstack ID of a security group in the same tenant. Changing this creates
	// a new security group rule.
	RemoteGroupId *string `pulumi:"remoteGroupId"`
	// The remote CIDR, the value needs to be a valid
	// CIDR (i.e. 192.168.0.0/16). Changing this creates a new security group rule.
	RemoteIpPrefix *string `pulumi:"remoteIpPrefix"`
	// The security group id the rule should belong
	// to, the value needs to be an Openstack ID of a security group in the same
	// tenant. Changing this creates a new security group rule.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The owner of the security group. Required if admin
	// wants to create a port for another tenant. Changing this creates a new
	// security group rule.
	TenantId *string `pulumi:"tenantId"`
}

// The set of arguments for constructing a SecGroupRule resource.
type SecGroupRuleArgs struct {
	// A description of the rule. Changing this creates a new security group rule.
	Description pulumi.StringPtrInput
	// The direction of the rule, valid values are __ingress__
	// or __egress__. Changing this creates a new security group rule.
	Direction pulumi.StringInput
	// The layer 3 protocol type, valid values are __IPv4__
	// or __IPv6__. Changing this creates a new security group rule.
	Ethertype pulumi.StringInput
	// The higher part of the allowed port range, valid
	// integer value needs to be between 1 and 65535. Changing this creates a new
	// security group rule.
	PortRangeMax pulumi.IntPtrInput
	// The lower part of the allowed port range, valid
	// integer value needs to be between 1 and 65535. Changing this creates a new
	// security group rule.
	PortRangeMin pulumi.IntPtrInput
	// The layer 4 protocol type, valid values are following. Changing this creates a new security group rule. This is required if you want to specify a port range.
	// * __tcp__
	// * __udp__
	// * __icmp__
	// * __ah__
	// * __dccp__
	// * __egp__
	// * __esp__
	// * __gre__
	// * __igmp__
	// * __ipv6-encap__
	// * __ipv6-frag__
	// * __ipv6-icmp__
	// * __ipv6-nonxt__
	// * __ipv6-opts__
	// * __ipv6-route__
	// * __ospf__
	// * __pgm__
	// * __rsvp__
	// * __sctp__
	// * __udplite__
	// * __vrrp__
	Protocol pulumi.StringPtrInput
	// The region in which to obtain the V2 networking client.
	// A networking client is needed to create a port. If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// security group rule.
	Region pulumi.StringPtrInput
	// The remote group id, the value needs to be an
	// Openstack ID of a security group in the same tenant. Changing this creates
	// a new security group rule.
	RemoteGroupId pulumi.StringPtrInput
	// The remote CIDR, the value needs to be a valid
	// CIDR (i.e. 192.168.0.0/16). Changing this creates a new security group rule.
	RemoteIpPrefix pulumi.StringPtrInput
	// The security group id the rule should belong
	// to, the value needs to be an Openstack ID of a security group in the same
	// tenant. Changing this creates a new security group rule.
	SecurityGroupId pulumi.StringInput
	// The owner of the security group. Required if admin
	// wants to create a port for another tenant. Changing this creates a new
	// security group rule.
	TenantId pulumi.StringPtrInput
}

func (SecGroupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secGroupRuleArgs)(nil)).Elem()
}
