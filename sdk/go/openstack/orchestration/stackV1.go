// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package orchestration

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages a V1 stack resource within OpenStack.
type StackV1 struct {
	pulumi.CustomResourceState

	// List of stack capabilities for stack.
	Capabilities pulumi.StringArrayOutput `pulumi:"capabilities"`
	// The date and time when the resource was created. The date
	// and time stamp format is ISO 8601: CCYY-MM-DDThh:mm:ss±hh:mm
	// For example, 2015-08-27T09:49:58-05:00. The ±hh:mm value, if included,
	// is the time zone as an offset from UTC.
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// The description of the stack resource.
	Description pulumi.StringOutput `pulumi:"description"`
	// Enables or disables deletion of all stack
	// resources when a stack creation fails. Default is true, meaning all
	// resources are not deleted when stack creation fails.
	DisableRollback pulumi.BoolOutput `pulumi:"disableRollback"`
	// Environment key/value pairs to associate with
	// the stack which contains details for the environment of the stack.
	// Allowed keys: Bin, URL, Files. Changing this updates the existing stack
	// Environment Opts.
	EnvironmentOpts pulumi.MapOutput `pulumi:"environmentOpts"`
	// A unique name for the stack. It must start with an
	// alphabetic character. Changing this updates the stack's name.
	Name pulumi.StringOutput `pulumi:"name"`
	// List of notification topics for stack.
	NotificationTopics pulumi.StringArrayOutput `pulumi:"notificationTopics"`
	// A list of stack outputs.
	Outputs StackV1OutputArrayOutput `pulumi:"outputs"`
	// User-defined key/value pairs as parameters to pass
	// to the template. Changing this updates the existing stack parameters.
	Parameters pulumi.MapOutput `pulumi:"parameters"`
	// The region in which to create the stack. If
	// omitted, the `region` argument of the provider is used. Changing this
	// creates a new stack.
	Region pulumi.StringOutput `pulumi:"region"`
	// The status of the stack.
	Status pulumi.StringOutput `pulumi:"status"`
	// The reason for the current status of the stack.
	StatusReason pulumi.StringOutput `pulumi:"statusReason"`
	// A list of tags to assosciate with the Stack
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The description of the stack template.
	TemplateDescription pulumi.StringOutput `pulumi:"templateDescription"`
	// Template key/value pairs to associate with the
	// stack which contains either the template file or url.
	// Allowed keys: Bin, URL, Files. Changing this updates the existing stack
	// Template Opts.
	TemplateOpts pulumi.MapOutput `pulumi:"templateOpts"`
	// The timeout for stack action in minutes.
	Timeout pulumi.IntOutput `pulumi:"timeout"`
	// The date and time when the resource was updated. The date
	// and time stamp format is ISO 8601: CCYY-MM-DDThh:mm:ss±hh:mm
	// For example, 2015-08-27T09:49:58-05:00. The ±hh:mm value, if included,
	// is the time zone as an offset from UTC.
	UpdatedTime pulumi.StringOutput `pulumi:"updatedTime"`
}

// NewStackV1 registers a new resource with the given unique name, arguments, and options.
func NewStackV1(ctx *pulumi.Context,
	name string, args *StackV1Args, opts ...pulumi.ResourceOption) (*StackV1, error) {
	if args == nil || args.TemplateOpts == nil {
		return nil, errors.New("missing required argument 'TemplateOpts'")
	}
	if args == nil {
		args = &StackV1Args{}
	}
	var resource StackV1
	err := ctx.RegisterResource("openstack:orchestration/stackV1:StackV1", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStackV1 gets an existing StackV1 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStackV1(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StackV1State, opts ...pulumi.ResourceOption) (*StackV1, error) {
	var resource StackV1
	err := ctx.ReadResource("openstack:orchestration/stackV1:StackV1", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StackV1 resources.
type stackV1State struct {
	// List of stack capabilities for stack.
	Capabilities []string `pulumi:"capabilities"`
	// The date and time when the resource was created. The date
	// and time stamp format is ISO 8601: CCYY-MM-DDThh:mm:ss±hh:mm
	// For example, 2015-08-27T09:49:58-05:00. The ±hh:mm value, if included,
	// is the time zone as an offset from UTC.
	CreationTime *string `pulumi:"creationTime"`
	// The description of the stack resource.
	Description *string `pulumi:"description"`
	// Enables or disables deletion of all stack
	// resources when a stack creation fails. Default is true, meaning all
	// resources are not deleted when stack creation fails.
	DisableRollback *bool `pulumi:"disableRollback"`
	// Environment key/value pairs to associate with
	// the stack which contains details for the environment of the stack.
	// Allowed keys: Bin, URL, Files. Changing this updates the existing stack
	// Environment Opts.
	EnvironmentOpts map[string]interface{} `pulumi:"environmentOpts"`
	// A unique name for the stack. It must start with an
	// alphabetic character. Changing this updates the stack's name.
	Name *string `pulumi:"name"`
	// List of notification topics for stack.
	NotificationTopics []string `pulumi:"notificationTopics"`
	// A list of stack outputs.
	Outputs []StackV1Output `pulumi:"outputs"`
	// User-defined key/value pairs as parameters to pass
	// to the template. Changing this updates the existing stack parameters.
	Parameters map[string]interface{} `pulumi:"parameters"`
	// The region in which to create the stack. If
	// omitted, the `region` argument of the provider is used. Changing this
	// creates a new stack.
	Region *string `pulumi:"region"`
	// The status of the stack.
	Status *string `pulumi:"status"`
	// The reason for the current status of the stack.
	StatusReason *string `pulumi:"statusReason"`
	// A list of tags to assosciate with the Stack
	Tags []string `pulumi:"tags"`
	// The description of the stack template.
	TemplateDescription *string `pulumi:"templateDescription"`
	// Template key/value pairs to associate with the
	// stack which contains either the template file or url.
	// Allowed keys: Bin, URL, Files. Changing this updates the existing stack
	// Template Opts.
	TemplateOpts map[string]interface{} `pulumi:"templateOpts"`
	// The timeout for stack action in minutes.
	Timeout *int `pulumi:"timeout"`
	// The date and time when the resource was updated. The date
	// and time stamp format is ISO 8601: CCYY-MM-DDThh:mm:ss±hh:mm
	// For example, 2015-08-27T09:49:58-05:00. The ±hh:mm value, if included,
	// is the time zone as an offset from UTC.
	UpdatedTime *string `pulumi:"updatedTime"`
}

type StackV1State struct {
	// List of stack capabilities for stack.
	Capabilities pulumi.StringArrayInput
	// The date and time when the resource was created. The date
	// and time stamp format is ISO 8601: CCYY-MM-DDThh:mm:ss±hh:mm
	// For example, 2015-08-27T09:49:58-05:00. The ±hh:mm value, if included,
	// is the time zone as an offset from UTC.
	CreationTime pulumi.StringPtrInput
	// The description of the stack resource.
	Description pulumi.StringPtrInput
	// Enables or disables deletion of all stack
	// resources when a stack creation fails. Default is true, meaning all
	// resources are not deleted when stack creation fails.
	DisableRollback pulumi.BoolPtrInput
	// Environment key/value pairs to associate with
	// the stack which contains details for the environment of the stack.
	// Allowed keys: Bin, URL, Files. Changing this updates the existing stack
	// Environment Opts.
	EnvironmentOpts pulumi.MapInput
	// A unique name for the stack. It must start with an
	// alphabetic character. Changing this updates the stack's name.
	Name pulumi.StringPtrInput
	// List of notification topics for stack.
	NotificationTopics pulumi.StringArrayInput
	// A list of stack outputs.
	Outputs StackV1OutputArrayInput
	// User-defined key/value pairs as parameters to pass
	// to the template. Changing this updates the existing stack parameters.
	Parameters pulumi.MapInput
	// The region in which to create the stack. If
	// omitted, the `region` argument of the provider is used. Changing this
	// creates a new stack.
	Region pulumi.StringPtrInput
	// The status of the stack.
	Status pulumi.StringPtrInput
	// The reason for the current status of the stack.
	StatusReason pulumi.StringPtrInput
	// A list of tags to assosciate with the Stack
	Tags pulumi.StringArrayInput
	// The description of the stack template.
	TemplateDescription pulumi.StringPtrInput
	// Template key/value pairs to associate with the
	// stack which contains either the template file or url.
	// Allowed keys: Bin, URL, Files. Changing this updates the existing stack
	// Template Opts.
	TemplateOpts pulumi.MapInput
	// The timeout for stack action in minutes.
	Timeout pulumi.IntPtrInput
	// The date and time when the resource was updated. The date
	// and time stamp format is ISO 8601: CCYY-MM-DDThh:mm:ss±hh:mm
	// For example, 2015-08-27T09:49:58-05:00. The ±hh:mm value, if included,
	// is the time zone as an offset from UTC.
	UpdatedTime pulumi.StringPtrInput
}

func (StackV1State) ElementType() reflect.Type {
	return reflect.TypeOf((*stackV1State)(nil)).Elem()
}

type stackV1Args struct {
	// List of stack capabilities for stack.
	Capabilities []string `pulumi:"capabilities"`
	// The date and time when the resource was created. The date
	// and time stamp format is ISO 8601: CCYY-MM-DDThh:mm:ss±hh:mm
	// For example, 2015-08-27T09:49:58-05:00. The ±hh:mm value, if included,
	// is the time zone as an offset from UTC.
	CreationTime *string `pulumi:"creationTime"`
	// The description of the stack resource.
	Description *string `pulumi:"description"`
	// Enables or disables deletion of all stack
	// resources when a stack creation fails. Default is true, meaning all
	// resources are not deleted when stack creation fails.
	DisableRollback *bool `pulumi:"disableRollback"`
	// Environment key/value pairs to associate with
	// the stack which contains details for the environment of the stack.
	// Allowed keys: Bin, URL, Files. Changing this updates the existing stack
	// Environment Opts.
	EnvironmentOpts map[string]interface{} `pulumi:"environmentOpts"`
	// A unique name for the stack. It must start with an
	// alphabetic character. Changing this updates the stack's name.
	Name *string `pulumi:"name"`
	// List of notification topics for stack.
	NotificationTopics []string `pulumi:"notificationTopics"`
	// A list of stack outputs.
	Outputs []StackV1Output `pulumi:"outputs"`
	// User-defined key/value pairs as parameters to pass
	// to the template. Changing this updates the existing stack parameters.
	Parameters map[string]interface{} `pulumi:"parameters"`
	// The region in which to create the stack. If
	// omitted, the `region` argument of the provider is used. Changing this
	// creates a new stack.
	Region *string `pulumi:"region"`
	// The status of the stack.
	Status *string `pulumi:"status"`
	// The reason for the current status of the stack.
	StatusReason *string `pulumi:"statusReason"`
	// A list of tags to assosciate with the Stack
	Tags []string `pulumi:"tags"`
	// The description of the stack template.
	TemplateDescription *string `pulumi:"templateDescription"`
	// Template key/value pairs to associate with the
	// stack which contains either the template file or url.
	// Allowed keys: Bin, URL, Files. Changing this updates the existing stack
	// Template Opts.
	TemplateOpts map[string]interface{} `pulumi:"templateOpts"`
	// The timeout for stack action in minutes.
	Timeout *int `pulumi:"timeout"`
	// The date and time when the resource was updated. The date
	// and time stamp format is ISO 8601: CCYY-MM-DDThh:mm:ss±hh:mm
	// For example, 2015-08-27T09:49:58-05:00. The ±hh:mm value, if included,
	// is the time zone as an offset from UTC.
	UpdatedTime *string `pulumi:"updatedTime"`
}

// The set of arguments for constructing a StackV1 resource.
type StackV1Args struct {
	// List of stack capabilities for stack.
	Capabilities pulumi.StringArrayInput
	// The date and time when the resource was created. The date
	// and time stamp format is ISO 8601: CCYY-MM-DDThh:mm:ss±hh:mm
	// For example, 2015-08-27T09:49:58-05:00. The ±hh:mm value, if included,
	// is the time zone as an offset from UTC.
	CreationTime pulumi.StringPtrInput
	// The description of the stack resource.
	Description pulumi.StringPtrInput
	// Enables or disables deletion of all stack
	// resources when a stack creation fails. Default is true, meaning all
	// resources are not deleted when stack creation fails.
	DisableRollback pulumi.BoolPtrInput
	// Environment key/value pairs to associate with
	// the stack which contains details for the environment of the stack.
	// Allowed keys: Bin, URL, Files. Changing this updates the existing stack
	// Environment Opts.
	EnvironmentOpts pulumi.MapInput
	// A unique name for the stack. It must start with an
	// alphabetic character. Changing this updates the stack's name.
	Name pulumi.StringPtrInput
	// List of notification topics for stack.
	NotificationTopics pulumi.StringArrayInput
	// A list of stack outputs.
	Outputs StackV1OutputArrayInput
	// User-defined key/value pairs as parameters to pass
	// to the template. Changing this updates the existing stack parameters.
	Parameters pulumi.MapInput
	// The region in which to create the stack. If
	// omitted, the `region` argument of the provider is used. Changing this
	// creates a new stack.
	Region pulumi.StringPtrInput
	// The status of the stack.
	Status pulumi.StringPtrInput
	// The reason for the current status of the stack.
	StatusReason pulumi.StringPtrInput
	// A list of tags to assosciate with the Stack
	Tags pulumi.StringArrayInput
	// The description of the stack template.
	TemplateDescription pulumi.StringPtrInput
	// Template key/value pairs to associate with the
	// stack which contains either the template file or url.
	// Allowed keys: Bin, URL, Files. Changing this updates the existing stack
	// Template Opts.
	TemplateOpts pulumi.MapInput
	// The timeout for stack action in minutes.
	Timeout pulumi.IntPtrInput
	// The date and time when the resource was updated. The date
	// and time stamp format is ISO 8601: CCYY-MM-DDThh:mm:ss±hh:mm
	// For example, 2015-08-27T09:49:58-05:00. The ±hh:mm value, if included,
	// is the time zone as an offset from UTC.
	UpdatedTime pulumi.StringPtrInput
}

func (StackV1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*stackV1Args)(nil)).Elem()
}
