// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package objectstorage

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages a V1 container object resource within OpenStack.
type ContainerObject struct {
	pulumi.CustomResourceState

	// A unique (within an account) name for the container.
	// The container name must be from 1 to 256 characters long and can start
	// with any character and contain any pattern. Character set must be UTF-8.
	// The container name cannot contain a slash (/) character because this
	// character delimits the container and object name. For example, the path
	// /v1/account/www/pages specifies the www container, not the www/pages container.
	ContainerName pulumi.StringOutput `pulumi:"containerName"`
	// A string representing the content of the object. Conflicts with
	// `source` and `copyFrom`.
	Content pulumi.StringPtrOutput `pulumi:"content"`
	// A string which specifies the override behavior for
	// the browser. For example, this header might specify that the browser use a download
	// program to save this file rather than show the file, which is the default.
	ContentDisposition pulumi.StringOutput `pulumi:"contentDisposition"`
	// A string representing the value of the Content-Encoding
	// metadata.
	ContentEncoding pulumi.StringOutput `pulumi:"contentEncoding"`
	// If the operation succeeds, this value is zero (0) or the
	// length of informational or error text in the response body.
	ContentLength pulumi.IntOutput `pulumi:"contentLength"`
	// A string which sets the MIME type for the object.
	ContentType pulumi.StringOutput `pulumi:"contentType"`
	// A string representing the name of an object
	// used to create the new object by copying the `copyFrom` object. The value is in form
	// {container}/{object}. You must UTF-8-encode and then URL-encode the names of the
	// container and object before you include them in the header. Conflicts with `source` and
	// `content`.
	CopyFrom pulumi.StringPtrOutput `pulumi:"copyFrom"`
	// The date and time the system responded to the request, using the preferred
	// format of RFC 7231 as shown in this example Thu, 16 Jun 2016 15:10:38 GMT. The
	// time is always in UTC.
	Date pulumi.StringOutput `pulumi:"date"`
	// An integer representing the number of seconds after which the
	// system removes the object. Internally, the Object Storage system stores this value in
	// the X-Delete-At metadata item.
	DeleteAfter pulumi.IntPtrOutput `pulumi:"deleteAfter"`
	// An string representing the date when the system removes the object.
	// For example, "2015-08-26" is equivalent to Mon, Wed, 26 Aug 2015 00:00:00 GMT.
	DeleteAt pulumi.StringOutput `pulumi:"deleteAt"`
	// If set to true, Object Storage guesses the content
	// type based on the file extension and ignores the value sent in the Content-Type
	// header, if present.
	DetectContentType pulumi.BoolPtrOutput `pulumi:"detectContentType"`
	// Used to trigger updates. The only meaningful value is ${md5(file("path/to/file"))}.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The date and time when the object was last modified. The date and time
	// stamp format is ISO 8601:
	// CCYY-MM-DDThh:mm:ss±hh:mm
	// For example, 2015-08-27T09:49:58-05:00.
	// The ±hh:mm value, if included, is the time zone as an offset from UTC. In the previous
	// example, the offset value is -05:00.
	LastModified pulumi.StringOutput `pulumi:"lastModified"`
	Metadata     pulumi.MapOutput    `pulumi:"metadata"`
	// A unique name for the object.
	Name pulumi.StringOutput `pulumi:"name"`
	// A string set to specify that this is a dynamic large
	// object manifest object. The value is the container and object name prefix of the
	// segment objects in the form container/prefix. You must UTF-8-encode and then
	// URL-encode the names of the container and prefix before you include them in this
	// header.
	ObjectManifest pulumi.StringOutput `pulumi:"objectManifest"`
	// The region in which to create the container. If
	// omitted, the `region` argument of the provider is used. Changing this
	// creates a new container.
	Region pulumi.StringOutput `pulumi:"region"`
	// A string representing the local path of a file which will be used
	// as the object's content. Conflicts with `source` and `copyFrom`.
	Source pulumi.StringPtrOutput `pulumi:"source"`
	// A unique transaction ID for this request. Your service provider might
	// need this value if you report a problem.
	TransId pulumi.StringOutput `pulumi:"transId"`
}

// NewContainerObject registers a new resource with the given unique name, arguments, and options.
func NewContainerObject(ctx *pulumi.Context,
	name string, args *ContainerObjectArgs, opts ...pulumi.ResourceOption) (*ContainerObject, error) {
	if args == nil || args.ContainerName == nil {
		return nil, errors.New("missing required argument 'ContainerName'")
	}
	if args == nil {
		args = &ContainerObjectArgs{}
	}
	var resource ContainerObject
	err := ctx.RegisterResource("openstack:objectstorage/containerObject:ContainerObject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContainerObject gets an existing ContainerObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContainerObject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContainerObjectState, opts ...pulumi.ResourceOption) (*ContainerObject, error) {
	var resource ContainerObject
	err := ctx.ReadResource("openstack:objectstorage/containerObject:ContainerObject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContainerObject resources.
type containerObjectState struct {
	// A unique (within an account) name for the container.
	// The container name must be from 1 to 256 characters long and can start
	// with any character and contain any pattern. Character set must be UTF-8.
	// The container name cannot contain a slash (/) character because this
	// character delimits the container and object name. For example, the path
	// /v1/account/www/pages specifies the www container, not the www/pages container.
	ContainerName *string `pulumi:"containerName"`
	// A string representing the content of the object. Conflicts with
	// `source` and `copyFrom`.
	Content *string `pulumi:"content"`
	// A string which specifies the override behavior for
	// the browser. For example, this header might specify that the browser use a download
	// program to save this file rather than show the file, which is the default.
	ContentDisposition *string `pulumi:"contentDisposition"`
	// A string representing the value of the Content-Encoding
	// metadata.
	ContentEncoding *string `pulumi:"contentEncoding"`
	// If the operation succeeds, this value is zero (0) or the
	// length of informational or error text in the response body.
	ContentLength *int `pulumi:"contentLength"`
	// A string which sets the MIME type for the object.
	ContentType *string `pulumi:"contentType"`
	// A string representing the name of an object
	// used to create the new object by copying the `copyFrom` object. The value is in form
	// {container}/{object}. You must UTF-8-encode and then URL-encode the names of the
	// container and object before you include them in the header. Conflicts with `source` and
	// `content`.
	CopyFrom *string `pulumi:"copyFrom"`
	// The date and time the system responded to the request, using the preferred
	// format of RFC 7231 as shown in this example Thu, 16 Jun 2016 15:10:38 GMT. The
	// time is always in UTC.
	Date *string `pulumi:"date"`
	// An integer representing the number of seconds after which the
	// system removes the object. Internally, the Object Storage system stores this value in
	// the X-Delete-At metadata item.
	DeleteAfter *int `pulumi:"deleteAfter"`
	// An string representing the date when the system removes the object.
	// For example, "2015-08-26" is equivalent to Mon, Wed, 26 Aug 2015 00:00:00 GMT.
	DeleteAt *string `pulumi:"deleteAt"`
	// If set to true, Object Storage guesses the content
	// type based on the file extension and ignores the value sent in the Content-Type
	// header, if present.
	DetectContentType *bool `pulumi:"detectContentType"`
	// Used to trigger updates. The only meaningful value is ${md5(file("path/to/file"))}.
	Etag *string `pulumi:"etag"`
	// The date and time when the object was last modified. The date and time
	// stamp format is ISO 8601:
	// CCYY-MM-DDThh:mm:ss±hh:mm
	// For example, 2015-08-27T09:49:58-05:00.
	// The ±hh:mm value, if included, is the time zone as an offset from UTC. In the previous
	// example, the offset value is -05:00.
	LastModified *string                `pulumi:"lastModified"`
	Metadata     map[string]interface{} `pulumi:"metadata"`
	// A unique name for the object.
	Name *string `pulumi:"name"`
	// A string set to specify that this is a dynamic large
	// object manifest object. The value is the container and object name prefix of the
	// segment objects in the form container/prefix. You must UTF-8-encode and then
	// URL-encode the names of the container and prefix before you include them in this
	// header.
	ObjectManifest *string `pulumi:"objectManifest"`
	// The region in which to create the container. If
	// omitted, the `region` argument of the provider is used. Changing this
	// creates a new container.
	Region *string `pulumi:"region"`
	// A string representing the local path of a file which will be used
	// as the object's content. Conflicts with `source` and `copyFrom`.
	Source *string `pulumi:"source"`
	// A unique transaction ID for this request. Your service provider might
	// need this value if you report a problem.
	TransId *string `pulumi:"transId"`
}

type ContainerObjectState struct {
	// A unique (within an account) name for the container.
	// The container name must be from 1 to 256 characters long and can start
	// with any character and contain any pattern. Character set must be UTF-8.
	// The container name cannot contain a slash (/) character because this
	// character delimits the container and object name. For example, the path
	// /v1/account/www/pages specifies the www container, not the www/pages container.
	ContainerName pulumi.StringPtrInput
	// A string representing the content of the object. Conflicts with
	// `source` and `copyFrom`.
	Content pulumi.StringPtrInput
	// A string which specifies the override behavior for
	// the browser. For example, this header might specify that the browser use a download
	// program to save this file rather than show the file, which is the default.
	ContentDisposition pulumi.StringPtrInput
	// A string representing the value of the Content-Encoding
	// metadata.
	ContentEncoding pulumi.StringPtrInput
	// If the operation succeeds, this value is zero (0) or the
	// length of informational or error text in the response body.
	ContentLength pulumi.IntPtrInput
	// A string which sets the MIME type for the object.
	ContentType pulumi.StringPtrInput
	// A string representing the name of an object
	// used to create the new object by copying the `copyFrom` object. The value is in form
	// {container}/{object}. You must UTF-8-encode and then URL-encode the names of the
	// container and object before you include them in the header. Conflicts with `source` and
	// `content`.
	CopyFrom pulumi.StringPtrInput
	// The date and time the system responded to the request, using the preferred
	// format of RFC 7231 as shown in this example Thu, 16 Jun 2016 15:10:38 GMT. The
	// time is always in UTC.
	Date pulumi.StringPtrInput
	// An integer representing the number of seconds after which the
	// system removes the object. Internally, the Object Storage system stores this value in
	// the X-Delete-At metadata item.
	DeleteAfter pulumi.IntPtrInput
	// An string representing the date when the system removes the object.
	// For example, "2015-08-26" is equivalent to Mon, Wed, 26 Aug 2015 00:00:00 GMT.
	DeleteAt pulumi.StringPtrInput
	// If set to true, Object Storage guesses the content
	// type based on the file extension and ignores the value sent in the Content-Type
	// header, if present.
	DetectContentType pulumi.BoolPtrInput
	// Used to trigger updates. The only meaningful value is ${md5(file("path/to/file"))}.
	Etag pulumi.StringPtrInput
	// The date and time when the object was last modified. The date and time
	// stamp format is ISO 8601:
	// CCYY-MM-DDThh:mm:ss±hh:mm
	// For example, 2015-08-27T09:49:58-05:00.
	// The ±hh:mm value, if included, is the time zone as an offset from UTC. In the previous
	// example, the offset value is -05:00.
	LastModified pulumi.StringPtrInput
	Metadata     pulumi.MapInput
	// A unique name for the object.
	Name pulumi.StringPtrInput
	// A string set to specify that this is a dynamic large
	// object manifest object. The value is the container and object name prefix of the
	// segment objects in the form container/prefix. You must UTF-8-encode and then
	// URL-encode the names of the container and prefix before you include them in this
	// header.
	ObjectManifest pulumi.StringPtrInput
	// The region in which to create the container. If
	// omitted, the `region` argument of the provider is used. Changing this
	// creates a new container.
	Region pulumi.StringPtrInput
	// A string representing the local path of a file which will be used
	// as the object's content. Conflicts with `source` and `copyFrom`.
	Source pulumi.StringPtrInput
	// A unique transaction ID for this request. Your service provider might
	// need this value if you report a problem.
	TransId pulumi.StringPtrInput
}

func (ContainerObjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*containerObjectState)(nil)).Elem()
}

type containerObjectArgs struct {
	// A unique (within an account) name for the container.
	// The container name must be from 1 to 256 characters long and can start
	// with any character and contain any pattern. Character set must be UTF-8.
	// The container name cannot contain a slash (/) character because this
	// character delimits the container and object name. For example, the path
	// /v1/account/www/pages specifies the www container, not the www/pages container.
	ContainerName string `pulumi:"containerName"`
	// A string representing the content of the object. Conflicts with
	// `source` and `copyFrom`.
	Content *string `pulumi:"content"`
	// A string which specifies the override behavior for
	// the browser. For example, this header might specify that the browser use a download
	// program to save this file rather than show the file, which is the default.
	ContentDisposition *string `pulumi:"contentDisposition"`
	// A string representing the value of the Content-Encoding
	// metadata.
	ContentEncoding *string `pulumi:"contentEncoding"`
	// A string which sets the MIME type for the object.
	ContentType *string `pulumi:"contentType"`
	// A string representing the name of an object
	// used to create the new object by copying the `copyFrom` object. The value is in form
	// {container}/{object}. You must UTF-8-encode and then URL-encode the names of the
	// container and object before you include them in the header. Conflicts with `source` and
	// `content`.
	CopyFrom *string `pulumi:"copyFrom"`
	// An integer representing the number of seconds after which the
	// system removes the object. Internally, the Object Storage system stores this value in
	// the X-Delete-At metadata item.
	DeleteAfter *int `pulumi:"deleteAfter"`
	// An string representing the date when the system removes the object.
	// For example, "2015-08-26" is equivalent to Mon, Wed, 26 Aug 2015 00:00:00 GMT.
	DeleteAt *string `pulumi:"deleteAt"`
	// If set to true, Object Storage guesses the content
	// type based on the file extension and ignores the value sent in the Content-Type
	// header, if present.
	DetectContentType *bool `pulumi:"detectContentType"`
	// Used to trigger updates. The only meaningful value is ${md5(file("path/to/file"))}.
	Etag     *string                `pulumi:"etag"`
	Metadata map[string]interface{} `pulumi:"metadata"`
	// A unique name for the object.
	Name *string `pulumi:"name"`
	// A string set to specify that this is a dynamic large
	// object manifest object. The value is the container and object name prefix of the
	// segment objects in the form container/prefix. You must UTF-8-encode and then
	// URL-encode the names of the container and prefix before you include them in this
	// header.
	ObjectManifest *string `pulumi:"objectManifest"`
	// The region in which to create the container. If
	// omitted, the `region` argument of the provider is used. Changing this
	// creates a new container.
	Region *string `pulumi:"region"`
	// A string representing the local path of a file which will be used
	// as the object's content. Conflicts with `source` and `copyFrom`.
	Source *string `pulumi:"source"`
}

// The set of arguments for constructing a ContainerObject resource.
type ContainerObjectArgs struct {
	// A unique (within an account) name for the container.
	// The container name must be from 1 to 256 characters long and can start
	// with any character and contain any pattern. Character set must be UTF-8.
	// The container name cannot contain a slash (/) character because this
	// character delimits the container and object name. For example, the path
	// /v1/account/www/pages specifies the www container, not the www/pages container.
	ContainerName pulumi.StringInput
	// A string representing the content of the object. Conflicts with
	// `source` and `copyFrom`.
	Content pulumi.StringPtrInput
	// A string which specifies the override behavior for
	// the browser. For example, this header might specify that the browser use a download
	// program to save this file rather than show the file, which is the default.
	ContentDisposition pulumi.StringPtrInput
	// A string representing the value of the Content-Encoding
	// metadata.
	ContentEncoding pulumi.StringPtrInput
	// A string which sets the MIME type for the object.
	ContentType pulumi.StringPtrInput
	// A string representing the name of an object
	// used to create the new object by copying the `copyFrom` object. The value is in form
	// {container}/{object}. You must UTF-8-encode and then URL-encode the names of the
	// container and object before you include them in the header. Conflicts with `source` and
	// `content`.
	CopyFrom pulumi.StringPtrInput
	// An integer representing the number of seconds after which the
	// system removes the object. Internally, the Object Storage system stores this value in
	// the X-Delete-At metadata item.
	DeleteAfter pulumi.IntPtrInput
	// An string representing the date when the system removes the object.
	// For example, "2015-08-26" is equivalent to Mon, Wed, 26 Aug 2015 00:00:00 GMT.
	DeleteAt pulumi.StringPtrInput
	// If set to true, Object Storage guesses the content
	// type based on the file extension and ignores the value sent in the Content-Type
	// header, if present.
	DetectContentType pulumi.BoolPtrInput
	// Used to trigger updates. The only meaningful value is ${md5(file("path/to/file"))}.
	Etag     pulumi.StringPtrInput
	Metadata pulumi.MapInput
	// A unique name for the object.
	Name pulumi.StringPtrInput
	// A string set to specify that this is a dynamic large
	// object manifest object. The value is the container and object name prefix of the
	// segment objects in the form container/prefix. You must UTF-8-encode and then
	// URL-encode the names of the container and prefix before you include them in this
	// header.
	ObjectManifest pulumi.StringPtrInput
	// The region in which to create the container. If
	// omitted, the `region` argument of the provider is used. Changing this
	// creates a new container.
	Region pulumi.StringPtrInput
	// A string representing the local path of a file which will be used
	// as the object's content. Conflicts with `source` and `copyFrom`.
	Source pulumi.StringPtrInput
}

func (ContainerObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*containerObjectArgs)(nil)).Elem()
}
