// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package openstack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-openstack/sdk/v5/go/openstack/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the ID of an available workflow.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-openstack/sdk/v5/go/openstack"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := openstack.WorkflowWorkflowV2(ctx, &openstack.WorkflowWorkflowV2Args{
//				Name: pulumi.StringRef("workflow_1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func WorkflowWorkflowV2(ctx *pulumi.Context, args *WorkflowWorkflowV2Args, opts ...pulumi.InvokeOption) (*WorkflowWorkflowV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv WorkflowWorkflowV2Result
	err := ctx.Invoke("openstack:index/workflowWorkflowV2:WorkflowWorkflowV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking WorkflowWorkflowV2.
type WorkflowWorkflowV2Args struct {
	// The name of the workflow.
	Name *string `pulumi:"name"`
	// The namespace of the workflow.
	Namespace *string `pulumi:"namespace"`
	// The id of the project to retrieve the workflow.
	// Requires admin privileges.
	ProjectId *string `pulumi:"projectId"`
	// The region in which to obtain the V2 Workflow client.
	Region *string `pulumi:"region"`
}

// A collection of values returned by WorkflowWorkflowV2.
type WorkflowWorkflowV2Result struct {
	// The date the workflow was created.
	CreatedAt string `pulumi:"createdAt"`
	// The workflow definition in Mistral v2 DSL.
	Definition string `pulumi:"definition"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A set of input parameters required for workflow execution.
	Input string `pulumi:"input"`
	// See Argument Reference above.
	Name string `pulumi:"name"`
	// See Argument Reference above.
	Namespace string `pulumi:"namespace"`
	// See Argument Reference above.
	ProjectId string `pulumi:"projectId"`
	// See Argument Reference above.
	Region string `pulumi:"region"`
	// Scope (private or public).
	Scope string `pulumi:"scope"`
	// A set of string tags for the workflow.
	Tags []string `pulumi:"tags"`
}

func WorkflowWorkflowV2Output(ctx *pulumi.Context, args WorkflowWorkflowV2OutputArgs, opts ...pulumi.InvokeOption) WorkflowWorkflowV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (WorkflowWorkflowV2ResultOutput, error) {
			args := v.(WorkflowWorkflowV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("openstack:index/workflowWorkflowV2:WorkflowWorkflowV2", args, WorkflowWorkflowV2ResultOutput{}, options).(WorkflowWorkflowV2ResultOutput), nil
		}).(WorkflowWorkflowV2ResultOutput)
}

// A collection of arguments for invoking WorkflowWorkflowV2.
type WorkflowWorkflowV2OutputArgs struct {
	// The name of the workflow.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The namespace of the workflow.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The id of the project to retrieve the workflow.
	// Requires admin privileges.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// The region in which to obtain the V2 Workflow client.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (WorkflowWorkflowV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowWorkflowV2Args)(nil)).Elem()
}

// A collection of values returned by WorkflowWorkflowV2.
type WorkflowWorkflowV2ResultOutput struct{ *pulumi.OutputState }

func (WorkflowWorkflowV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowWorkflowV2Result)(nil)).Elem()
}

func (o WorkflowWorkflowV2ResultOutput) ToWorkflowWorkflowV2ResultOutput() WorkflowWorkflowV2ResultOutput {
	return o
}

func (o WorkflowWorkflowV2ResultOutput) ToWorkflowWorkflowV2ResultOutputWithContext(ctx context.Context) WorkflowWorkflowV2ResultOutput {
	return o
}

// The date the workflow was created.
func (o WorkflowWorkflowV2ResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowWorkflowV2Result) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The workflow definition in Mistral v2 DSL.
func (o WorkflowWorkflowV2ResultOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowWorkflowV2Result) string { return v.Definition }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o WorkflowWorkflowV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowWorkflowV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// A set of input parameters required for workflow execution.
func (o WorkflowWorkflowV2ResultOutput) Input() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowWorkflowV2Result) string { return v.Input }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o WorkflowWorkflowV2ResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowWorkflowV2Result) string { return v.Name }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o WorkflowWorkflowV2ResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowWorkflowV2Result) string { return v.Namespace }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o WorkflowWorkflowV2ResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowWorkflowV2Result) string { return v.ProjectId }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o WorkflowWorkflowV2ResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowWorkflowV2Result) string { return v.Region }).(pulumi.StringOutput)
}

// Scope (private or public).
func (o WorkflowWorkflowV2ResultOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowWorkflowV2Result) string { return v.Scope }).(pulumi.StringOutput)
}

// A set of string tags for the workflow.
func (o WorkflowWorkflowV2ResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowWorkflowV2Result) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(WorkflowWorkflowV2ResultOutput{})
}
