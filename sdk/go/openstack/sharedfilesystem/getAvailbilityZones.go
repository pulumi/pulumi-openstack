// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sharedfilesystem

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-openstack/sdk/v5/go/openstack/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get a list of Shared File System availability zones
// from OpenStack
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-openstack/sdk/v5/go/openstack/sharedfilesystem"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sharedfilesystem.GetAvailbilityZones(ctx, &sharedfilesystem.GetAvailbilityZonesArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAvailbilityZones(ctx *pulumi.Context, args *GetAvailbilityZonesArgs, opts ...pulumi.InvokeOption) (*GetAvailbilityZonesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAvailbilityZonesResult
	err := ctx.Invoke("openstack:sharedfilesystem/getAvailbilityZones:getAvailbilityZones", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAvailbilityZones.
type GetAvailbilityZonesArgs struct {
	// The region in which to obtain the V2 Shared File System
	// client. If omitted, the `region` argument of the provider is used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getAvailbilityZones.
type GetAvailbilityZonesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The names of the availability zones, ordered alphanumerically.
	Names []string `pulumi:"names"`
	// See Argument Reference above.
	Region string `pulumi:"region"`
}

func GetAvailbilityZonesOutput(ctx *pulumi.Context, args GetAvailbilityZonesOutputArgs, opts ...pulumi.InvokeOption) GetAvailbilityZonesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAvailbilityZonesResultOutput, error) {
			args := v.(GetAvailbilityZonesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetAvailbilityZonesResult
			secret, err := ctx.InvokePackageRaw("openstack:sharedfilesystem/getAvailbilityZones:getAvailbilityZones", args, &rv, "", opts...)
			if err != nil {
				return GetAvailbilityZonesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetAvailbilityZonesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetAvailbilityZonesResultOutput), nil
			}
			return output, nil
		}).(GetAvailbilityZonesResultOutput)
}

// A collection of arguments for invoking getAvailbilityZones.
type GetAvailbilityZonesOutputArgs struct {
	// The region in which to obtain the V2 Shared File System
	// client. If omitted, the `region` argument of the provider is used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetAvailbilityZonesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailbilityZonesArgs)(nil)).Elem()
}

// A collection of values returned by getAvailbilityZones.
type GetAvailbilityZonesResultOutput struct{ *pulumi.OutputState }

func (GetAvailbilityZonesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailbilityZonesResult)(nil)).Elem()
}

func (o GetAvailbilityZonesResultOutput) ToGetAvailbilityZonesResultOutput() GetAvailbilityZonesResultOutput {
	return o
}

func (o GetAvailbilityZonesResultOutput) ToGetAvailbilityZonesResultOutputWithContext(ctx context.Context) GetAvailbilityZonesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetAvailbilityZonesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailbilityZonesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The names of the availability zones, ordered alphanumerically.
func (o GetAvailbilityZonesResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAvailbilityZonesResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

// See Argument Reference above.
func (o GetAvailbilityZonesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailbilityZonesResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAvailbilityZonesResultOutput{})
}
