// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to get the ID of an available Shared File System snapshot.
 */
export function getSnapshot(args?: GetSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<GetSnapshotResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("openstack:sharedfilesystem/getSnapshot:getSnapshot", {
        "description": args.description,
        "name": args.name,
        "region": args.region,
        "shareId": args.shareId,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getSnapshot.
 */
export interface GetSnapshotArgs {
    /**
     * The human-readable description of the snapshot.
     */
    description?: string;
    /**
     * The name of the snapshot.
     */
    name?: string;
    /**
     * The region in which to obtain the V2 Shared File System client.
     */
    region?: string;
    /**
     * The UUID of the source share that was used to create the snapshot.
     */
    shareId?: string;
    /**
     * A snapshot status filter. A valid value is `available`, `error`,
     * `creating`, `deleting`, `manageStarting`, `manageError`, `unmanageStarting`,
     * `unmanageError` or `errorDeleting`.
     */
    status?: string;
}

/**
 * A collection of values returned by getSnapshot.
 */
export interface GetSnapshotResult {
    /**
     * See Argument Reference above.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * See Argument Reference above.
     */
    readonly name: string;
    /**
     * See Argument Reference above.
     */
    readonly projectId: string;
    readonly region: string;
    /**
     * The UUID of the source share that was used to create the snapshot.
     */
    readonly shareId: string;
    /**
     * The file system protocol of a share snapshot.
     */
    readonly shareProto: string;
    /**
     * The share snapshot size, in GBs.
     */
    readonly shareSize: number;
    /**
     * The snapshot size, in GBs.
     */
    readonly size: number;
    /**
     * See Argument Reference above.
     */
    readonly status: string;
}
/**
 * Use this data source to get the ID of an available Shared File System snapshot.
 */
export function getSnapshotOutput(args?: GetSnapshotOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSnapshotResult> {
    return pulumi.output(args).apply((a: any) => getSnapshot(a, opts))
}

/**
 * A collection of arguments for invoking getSnapshot.
 */
export interface GetSnapshotOutputArgs {
    /**
     * The human-readable description of the snapshot.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the snapshot.
     */
    name?: pulumi.Input<string>;
    /**
     * The region in which to obtain the V2 Shared File System client.
     */
    region?: pulumi.Input<string>;
    /**
     * The UUID of the source share that was used to create the snapshot.
     */
    shareId?: pulumi.Input<string>;
    /**
     * A snapshot status filter. A valid value is `available`, `error`,
     * `creating`, `deleting`, `manageStarting`, `manageError`, `unmanageStarting`,
     * `unmanageError` or `errorDeleting`.
     */
    status?: pulumi.Input<string>;
}
