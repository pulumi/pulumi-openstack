// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a V2 BGP VPN router association resource within OpenStack.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const association1 = new openstack.bgpvpn.RouterAssociateV2("association_1", {
 *     bgpvpnId: "d57d39e1-dc63-44fd-8cbd-a4e1488100c5",
 *     routerId: "423fa80f-e0d7-4d02-a9a5-8b8c05812bf6",
 * });
 * ```
 *
 * ## Import
 *
 * BGP VPN router associations can be imported using the BGP VPN ID and BGP VPN
 *
 * router association ID separated by a slash, e.g.:
 *
 * hcl
 *
 * ```sh
 * $ pulumi import openstack:bgpvpn/routerAssociateV2:RouterAssociateV2 association_1 e26d509e-fc2d-4fb5-8562-619911a9a6bc/3cc9df2d-80db-4536-8ba6-295d1d0f723f
 * ```
 */
export class RouterAssociateV2 extends pulumi.CustomResource {
    /**
     * Get an existing RouterAssociateV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterAssociateV2State, opts?: pulumi.CustomResourceOptions): RouterAssociateV2 {
        return new RouterAssociateV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'openstack:bgpvpn/routerAssociateV2:RouterAssociateV2';

    /**
     * Returns true if the given object is an instance of RouterAssociateV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterAssociateV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterAssociateV2.__pulumiType;
    }

    /**
     * A boolean flag indicating whether extra
     * routes should be advertised. Defaults to true.
     */
    public readonly advertiseExtraRoutes!: pulumi.Output<boolean>;
    /**
     * The ID of the BGP VPN to which the router will be
     * associated. Changing this creates a new BGP VPN router association.
     */
    public readonly bgpvpnId!: pulumi.Output<string>;
    /**
     * The ID of the project that owns the BGP VPN router
     * association. Only administrative and users with `advsvc` role can specify a
     * project ID other than their own. Changing this creates a new BGP VPN router
     * association.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create a BGP VPN router association. If
     * omitted, the `region` argument of the provider is used. Changing this creates
     * a new BGP VPN router association.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The ID of the router to be associated with the BGP
     * VPN. Changing this creates a new BGP VPN router association.
     */
    public readonly routerId!: pulumi.Output<string>;

    /**
     * Create a RouterAssociateV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouterAssociateV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterAssociateV2Args | RouterAssociateV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterAssociateV2State | undefined;
            resourceInputs["advertiseExtraRoutes"] = state ? state.advertiseExtraRoutes : undefined;
            resourceInputs["bgpvpnId"] = state ? state.bgpvpnId : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["routerId"] = state ? state.routerId : undefined;
        } else {
            const args = argsOrState as RouterAssociateV2Args | undefined;
            if ((!args || args.bgpvpnId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bgpvpnId'");
            }
            if ((!args || args.routerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'routerId'");
            }
            resourceInputs["advertiseExtraRoutes"] = args ? args.advertiseExtraRoutes : undefined;
            resourceInputs["bgpvpnId"] = args ? args.bgpvpnId : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["routerId"] = args ? args.routerId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "openstack:index/bgpvpnRouterAssociateV2:BgpvpnRouterAssociateV2" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(RouterAssociateV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RouterAssociateV2 resources.
 */
export interface RouterAssociateV2State {
    /**
     * A boolean flag indicating whether extra
     * routes should be advertised. Defaults to true.
     */
    advertiseExtraRoutes?: pulumi.Input<boolean>;
    /**
     * The ID of the BGP VPN to which the router will be
     * associated. Changing this creates a new BGP VPN router association.
     */
    bgpvpnId?: pulumi.Input<string>;
    /**
     * The ID of the project that owns the BGP VPN router
     * association. Only administrative and users with `advsvc` role can specify a
     * project ID other than their own. Changing this creates a new BGP VPN router
     * association.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create a BGP VPN router association. If
     * omitted, the `region` argument of the provider is used. Changing this creates
     * a new BGP VPN router association.
     */
    region?: pulumi.Input<string>;
    /**
     * The ID of the router to be associated with the BGP
     * VPN. Changing this creates a new BGP VPN router association.
     */
    routerId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RouterAssociateV2 resource.
 */
export interface RouterAssociateV2Args {
    /**
     * A boolean flag indicating whether extra
     * routes should be advertised. Defaults to true.
     */
    advertiseExtraRoutes?: pulumi.Input<boolean>;
    /**
     * The ID of the BGP VPN to which the router will be
     * associated. Changing this creates a new BGP VPN router association.
     */
    bgpvpnId: pulumi.Input<string>;
    /**
     * The ID of the project that owns the BGP VPN router
     * association. Only administrative and users with `advsvc` role can specify a
     * project ID other than their own. Changing this creates a new BGP VPN router
     * association.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create a BGP VPN router association. If
     * omitted, the `region` argument of the provider is used. Changing this creates
     * a new BGP VPN router association.
     */
    region?: pulumi.Input<string>;
    /**
     * The ID of the router to be associated with the BGP
     * VPN. Changing this creates a new BGP VPN router association.
     */
    routerId: pulumi.Input<string>;
}
