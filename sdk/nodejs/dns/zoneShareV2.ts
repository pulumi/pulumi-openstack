// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages the sharing of a DNS zone in the OpenStack DNS Service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const example = new openstack.dns.ZoneShareV2("example", {
 *     zoneId: "00000000-0000-0000-0000-000000000000",
 *     targetProjectId: "11111111-1111-1111-1111-111111111111",
 *     projectId: "22222222-2222-2222-2222-222222222222",
 * });
 * ```
 *
 * ## Import
 *
 * DNS zone share can be imported by specifying the zone ID with share ID and optional project ID:
 *
 * bash
 *
 * ```sh
 * $ pulumi import openstack:dns/zoneShareV2:ZoneShareV2 share_1 60cbdc69-64f9-49ee-b294-352e71e22827/0e1dae51-aee2-4b44-962f-885bb69f3a5c
 * ```
 *
 * ```sh
 * $ pulumi import openstack:dns/zoneShareV2:ZoneShareV2 share_1 60cbdc69-64f9-49ee-b294-352e71e22827/0e1dae51-aee2-4b44-962f-885bb69f3a5c/eb92139f6c054a878852ac9e8cbe612a
 * ```
 */
export class ZoneShareV2 extends pulumi.CustomResource {
    /**
     * Get an existing ZoneShareV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZoneShareV2State, opts?: pulumi.CustomResourceOptions): ZoneShareV2 {
        return new ZoneShareV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'openstack:dns/zoneShareV2:ZoneShareV2';

    /**
     * Returns true if the given object is an instance of ZoneShareV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZoneShareV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZoneShareV2.__pulumiType;
    }

    /**
     * The ID of the project DNS zone is created for, sets
     * `X-Auth-Sudo-Tenant-ID` header (requires an assigned user role in target
     * project).
     */
    declare public readonly projectId: pulumi.Output<string>;
    /**
     * The region in which to obtain the V2 DNS client. If
     * omitted, the `region` argument of the provider is used. Changing this creates
     * a new DNS zone share.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * The ID of the target project with which the
     * DNS zone will be shared.
     */
    declare public readonly targetProjectId: pulumi.Output<string>;
    /**
     * The ID of the DNS zone to be shared.
     */
    declare public readonly zoneId: pulumi.Output<string>;

    /**
     * Create a ZoneShareV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZoneShareV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZoneShareV2Args | ZoneShareV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZoneShareV2State | undefined;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["region"] = state?.region;
            resourceInputs["targetProjectId"] = state?.targetProjectId;
            resourceInputs["zoneId"] = state?.zoneId;
        } else {
            const args = argsOrState as ZoneShareV2Args | undefined;
            if (args?.targetProjectId === undefined && !opts.urn) {
                throw new Error("Missing required property 'targetProjectId'");
            }
            if (args?.zoneId === undefined && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["region"] = args?.region;
            resourceInputs["targetProjectId"] = args?.targetProjectId;
            resourceInputs["zoneId"] = args?.zoneId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ZoneShareV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZoneShareV2 resources.
 */
export interface ZoneShareV2State {
    /**
     * The ID of the project DNS zone is created for, sets
     * `X-Auth-Sudo-Tenant-ID` header (requires an assigned user role in target
     * project).
     */
    projectId?: pulumi.Input<string>;
    /**
     * The region in which to obtain the V2 DNS client. If
     * omitted, the `region` argument of the provider is used. Changing this creates
     * a new DNS zone share.
     */
    region?: pulumi.Input<string>;
    /**
     * The ID of the target project with which the
     * DNS zone will be shared.
     */
    targetProjectId?: pulumi.Input<string>;
    /**
     * The ID of the DNS zone to be shared.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ZoneShareV2 resource.
 */
export interface ZoneShareV2Args {
    /**
     * The ID of the project DNS zone is created for, sets
     * `X-Auth-Sudo-Tenant-ID` header (requires an assigned user role in target
     * project).
     */
    projectId?: pulumi.Input<string>;
    /**
     * The region in which to obtain the V2 DNS client. If
     * omitted, the `region` argument of the provider is used. Changing this creates
     * a new DNS zone share.
     */
    region?: pulumi.Input<string>;
    /**
     * The ID of the target project with which the
     * DNS zone will be shared.
     */
    targetProjectId: pulumi.Input<string>;
    /**
     * The ID of the DNS zone to be shared.
     */
    zoneId: pulumi.Input<string>;
}
