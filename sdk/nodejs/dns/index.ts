// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetDnsZoneArgs, GetDnsZoneResult, GetDnsZoneOutputArgs } from "./getDnsZone";
export const getDnsZone: typeof import("./getDnsZone").getDnsZone = null as any;
export const getDnsZoneOutput: typeof import("./getDnsZone").getDnsZoneOutput = null as any;
utilities.lazyLoad(exports, ["getDnsZone","getDnsZoneOutput"], () => require("./getDnsZone"));

export { RecordSetArgs, RecordSetState } from "./recordSet";
export type RecordSet = import("./recordSet").RecordSet;
export const RecordSet: typeof import("./recordSet").RecordSet = null as any;
utilities.lazyLoad(exports, ["RecordSet"], () => require("./recordSet"));

export { TransferAcceptArgs, TransferAcceptState } from "./transferAccept";
export type TransferAccept = import("./transferAccept").TransferAccept;
export const TransferAccept: typeof import("./transferAccept").TransferAccept = null as any;
utilities.lazyLoad(exports, ["TransferAccept"], () => require("./transferAccept"));

export { TransferRequestArgs, TransferRequestState } from "./transferRequest";
export type TransferRequest = import("./transferRequest").TransferRequest;
export const TransferRequest: typeof import("./transferRequest").TransferRequest = null as any;
utilities.lazyLoad(exports, ["TransferRequest"], () => require("./transferRequest"));

export { ZoneArgs, ZoneState } from "./zone";
export type Zone = import("./zone").Zone;
export const Zone: typeof import("./zone").Zone = null as any;
utilities.lazyLoad(exports, ["Zone"], () => require("./zone"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "openstack:dns/recordSet:RecordSet":
                return new RecordSet(name, <any>undefined, { urn })
            case "openstack:dns/transferAccept:TransferAccept":
                return new TransferAccept(name, <any>undefined, { urn })
            case "openstack:dns/transferRequest:TransferRequest":
                return new TransferRequest(name, <any>undefined, { urn })
            case "openstack:dns/zone:Zone":
                return new Zone(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("openstack", "dns/recordSet", _module)
pulumi.runtime.registerResourceModule("openstack", "dns/transferAccept", _module)
pulumi.runtime.registerResourceModule("openstack", "dns/transferRequest", _module)
pulumi.runtime.registerResourceModule("openstack", "dns/zone", _module)
