// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetGroupV2Args, GetGroupV2Result, GetGroupV2OutputArgs } from "./getGroupV2";
export const getGroupV2: typeof import("./getGroupV2").getGroupV2 = null as any;
export const getGroupV2Output: typeof import("./getGroupV2").getGroupV2Output = null as any;
utilities.lazyLoad(exports, ["getGroupV2","getGroupV2Output"], () => require("./getGroupV2"));

export { GetPolicyV2Args, GetPolicyV2Result, GetPolicyV2OutputArgs } from "./getPolicyV2";
export const getPolicyV2: typeof import("./getPolicyV2").getPolicyV2 = null as any;
export const getPolicyV2Output: typeof import("./getPolicyV2").getPolicyV2Output = null as any;
utilities.lazyLoad(exports, ["getPolicyV2","getPolicyV2Output"], () => require("./getPolicyV2"));

export { GetRuleV2Args, GetRuleV2Result, GetRuleV2OutputArgs } from "./getRuleV2";
export const getRuleV2: typeof import("./getRuleV2").getRuleV2 = null as any;
export const getRuleV2Output: typeof import("./getRuleV2").getRuleV2Output = null as any;
utilities.lazyLoad(exports, ["getRuleV2","getRuleV2Output"], () => require("./getRuleV2"));

export { GroupV2Args, GroupV2State } from "./groupV2";
export type GroupV2 = import("./groupV2").GroupV2;
export const GroupV2: typeof import("./groupV2").GroupV2 = null as any;
utilities.lazyLoad(exports, ["GroupV2"], () => require("./groupV2"));

export { PolicyV2Args, PolicyV2State } from "./policyV2";
export type PolicyV2 = import("./policyV2").PolicyV2;
export const PolicyV2: typeof import("./policyV2").PolicyV2 = null as any;
utilities.lazyLoad(exports, ["PolicyV2"], () => require("./policyV2"));

export { RuleV2Args, RuleV2State } from "./ruleV2";
export type RuleV2 = import("./ruleV2").RuleV2;
export const RuleV2: typeof import("./ruleV2").RuleV2 = null as any;
utilities.lazyLoad(exports, ["RuleV2"], () => require("./ruleV2"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "openstack:firewall/groupV2:GroupV2":
                return new GroupV2(name, <any>undefined, { urn })
            case "openstack:firewall/policyV2:PolicyV2":
                return new PolicyV2(name, <any>undefined, { urn })
            case "openstack:firewall/ruleV2:RuleV2":
                return new RuleV2(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("openstack", "firewall/groupV2", _module)
pulumi.runtime.registerResourceModule("openstack", "firewall/policyV2", _module)
pulumi.runtime.registerResourceModule("openstack", "firewall/ruleV2", _module)
