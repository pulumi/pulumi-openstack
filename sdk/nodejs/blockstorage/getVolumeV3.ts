// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to get information about an existing volume.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const volume1 = pulumi.output(openstack.blockstorage.getVolumeV3({
 *     name: "volume_1",
 * }, { async: true }));
 * ```
 */
export function getVolumeV3(args?: GetVolumeV3Args, opts?: pulumi.InvokeOptions): Promise<GetVolumeV3Result> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("openstack:blockstorage/getVolumeV3:getVolumeV3", {
        "bootable": args.bootable,
        "metadata": args.metadata,
        "name": args.name,
        "region": args.region,
        "status": args.status,
        "volumeType": args.volumeType,
    }, opts);
}

/**
 * A collection of arguments for invoking getVolumeV3.
 */
export interface GetVolumeV3Args {
    /**
     * Indicates if the volume is bootable.
     */
    readonly bootable?: string;
    /**
     * Metadata key/value pairs associated with the volume.
     */
    readonly metadata?: {[key: string]: any};
    /**
     * The name of the volume.
     */
    readonly name?: string;
    /**
     * The region in which to obtain the V3 Block Storage
     * client. If omitted, the `region` argument of the provider is used.
     */
    readonly region?: string;
    /**
     * The status of the volume.
     */
    readonly status?: string;
    /**
     * The type of the volume.
     */
    readonly volumeType?: string;
}

/**
 * A collection of values returned by getVolumeV3.
 */
export interface GetVolumeV3Result {
    /**
     * Indicates if the volume is bootable.
     */
    readonly bootable: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * See Argument Reference above.
     */
    readonly metadata: {[key: string]: any};
    /**
     * Indicates if the volume can be attached to more then one server.
     */
    readonly multiattach: boolean;
    /**
     * See Argument Reference above.
     */
    readonly name: string;
    /**
     * See Argument Reference above.
     */
    readonly region: string;
    /**
     * The size of the volume in GBs.
     */
    readonly size: number;
    /**
     * The ID of the volume from which the current volume was created.
     */
    readonly sourceVolumeId: string;
    /**
     * See Argument Reference above.
     */
    readonly status: string;
    /**
     * The type of the volume.
     */
    readonly volumeType: string;
}
