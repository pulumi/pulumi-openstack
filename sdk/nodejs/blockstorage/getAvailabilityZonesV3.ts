// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to get a list of Block Storage availability zones from OpenStack
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const zones = pulumi.output(openstack.blockstorage.getAvailabilityZonesV3({ async: true }));
 * ```
 */
export function getAvailabilityZonesV3(args?: GetAvailabilityZonesV3Args, opts?: pulumi.InvokeOptions): Promise<GetAvailabilityZonesV3Result> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("openstack:blockstorage/getAvailabilityZonesV3:getAvailabilityZonesV3", {
        "region": args.region,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getAvailabilityZonesV3.
 */
export interface GetAvailabilityZonesV3Args {
    /**
     * The region in which to obtain the Block Storage client.
     * If omitted, the `region` argument of the provider is used.
     */
    readonly region?: string;
    /**
     * The `state` of the availability zones to match. Can
     * either be `available` or `unavailable`. Default is `available`.
     */
    readonly state?: string;
}

/**
 * A collection of values returned by getAvailabilityZonesV3.
 */
export interface GetAvailabilityZonesV3Result {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The names of the availability zones, ordered alphanumerically, that
     * match the queried `state`.
     */
    readonly names: string[];
    /**
     * See Argument Reference above.
     */
    readonly region: string;
    /**
     * See Argument Reference above.
     */
    readonly state?: string;
}
