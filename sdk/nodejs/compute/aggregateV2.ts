// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Host Aggregate within Openstack Nova.
 *
 * ## Example Usage
 * ### Full example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const dellServers = new openstack.compute.AggregateV2("dell_servers", {
 *     hosts: [
 *         "myhost01.example.com",
 *         "myhost02.example.com",
 *     ],
 *     metadata: {
 *         cpus: "56",
 *     },
 *     region: "RegionOne",
 *     zone: "nova",
 * });
 * ```
 * ### Minimum required example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const test = new openstack.compute.AggregateV2("test", {});
 * ```
 *
 * ## Import
 *
 * You can import an existing Host Aggregate by their ID.
 *
 * ```sh
 *  $ pulumi import openstack:compute/aggregateV2:AggregateV2 myaggregate 24
 * ```
 *
 *  The ID can be obtained with an openstack command$ openstack aggregate list +----+------+-------------------+ | ID | Name | Availability Zone | +----+------+-------------------+ | 59 | test | None
 *
 * | +----+------+-------------------+
 */
export class AggregateV2 extends pulumi.CustomResource {
    /**
     * Get an existing AggregateV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AggregateV2State, opts?: pulumi.CustomResourceOptions): AggregateV2 {
        return new AggregateV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'openstack:compute/aggregateV2:AggregateV2';

    /**
     * Returns true if the given object is an instance of AggregateV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AggregateV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AggregateV2.__pulumiType;
    }

    /**
     * The list of hosts contained in the Host Aggregate. The hosts must be added
     * to Openstack and visible in the web interface, or the provider will fail to add them to the host
     * aggregate.
     */
    public readonly hosts!: pulumi.Output<string[] | undefined>;
    /**
     * The metadata of the Host Aggregate. Can be useful to indicate scheduler hints.
     */
    public readonly metadata!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The name of the Host Aggregate
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The region in which to create the Host Aggregate. If
     * omitted, the `region` argument of the provider is used. Changing this
     * creates a new Host Aggregate.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The name of the Availability Zone to use. If ommited, it will take the default
     * availability zone.
     */
    public readonly zone!: pulumi.Output<string | undefined>;

    /**
     * Create a AggregateV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AggregateV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AggregateV2Args | AggregateV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AggregateV2State | undefined;
            resourceInputs["hosts"] = state ? state.hosts : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as AggregateV2Args | undefined;
            resourceInputs["hosts"] = args ? args.hosts : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AggregateV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AggregateV2 resources.
 */
export interface AggregateV2State {
    /**
     * The list of hosts contained in the Host Aggregate. The hosts must be added
     * to Openstack and visible in the web interface, or the provider will fail to add them to the host
     * aggregate.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The metadata of the Host Aggregate. Can be useful to indicate scheduler hints.
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the Host Aggregate
     */
    name?: pulumi.Input<string>;
    /**
     * The region in which to create the Host Aggregate. If
     * omitted, the `region` argument of the provider is used. Changing this
     * creates a new Host Aggregate.
     */
    region?: pulumi.Input<string>;
    /**
     * The name of the Availability Zone to use. If ommited, it will take the default
     * availability zone.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AggregateV2 resource.
 */
export interface AggregateV2Args {
    /**
     * The list of hosts contained in the Host Aggregate. The hosts must be added
     * to Openstack and visible in the web interface, or the provider will fail to add them to the host
     * aggregate.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The metadata of the Host Aggregate. Can be useful to indicate scheduler hints.
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the Host Aggregate
     */
    name?: pulumi.Input<string>;
    /**
     * The region in which to create the Host Aggregate. If
     * omitted, the `region` argument of the provider is used. Changing this
     * creates a new Host Aggregate.
     */
    region?: pulumi.Input<string>;
    /**
     * The name of the Availability Zone to use. If ommited, it will take the default
     * availability zone.
     */
    zone?: pulumi.Input<string>;
}
