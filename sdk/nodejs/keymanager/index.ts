// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ContainerV1Args, ContainerV1State } from "./containerV1";
export type ContainerV1 = import("./containerV1").ContainerV1;
export const ContainerV1: typeof import("./containerV1").ContainerV1 = null as any;
utilities.lazyLoad(exports, ["ContainerV1"], () => require("./containerV1"));

export { GetContainerArgs, GetContainerResult, GetContainerOutputArgs } from "./getContainer";
export const getContainer: typeof import("./getContainer").getContainer = null as any;
export const getContainerOutput: typeof import("./getContainer").getContainerOutput = null as any;
utilities.lazyLoad(exports, ["getContainer","getContainerOutput"], () => require("./getContainer"));

export { GetSecretArgs, GetSecretResult, GetSecretOutputArgs } from "./getSecret";
export const getSecret: typeof import("./getSecret").getSecret = null as any;
export const getSecretOutput: typeof import("./getSecret").getSecretOutput = null as any;
utilities.lazyLoad(exports, ["getSecret","getSecretOutput"], () => require("./getSecret"));

export { OrderV1Args, OrderV1State } from "./orderV1";
export type OrderV1 = import("./orderV1").OrderV1;
export const OrderV1: typeof import("./orderV1").OrderV1 = null as any;
utilities.lazyLoad(exports, ["OrderV1"], () => require("./orderV1"));

export { SecretV1Args, SecretV1State } from "./secretV1";
export type SecretV1 = import("./secretV1").SecretV1;
export const SecretV1: typeof import("./secretV1").SecretV1 = null as any;
utilities.lazyLoad(exports, ["SecretV1"], () => require("./secretV1"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "openstack:keymanager/containerV1:ContainerV1":
                return new ContainerV1(name, <any>undefined, { urn })
            case "openstack:keymanager/orderV1:OrderV1":
                return new OrderV1(name, <any>undefined, { urn })
            case "openstack:keymanager/secretV1:SecretV1":
                return new SecretV1(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("openstack", "keymanager/containerV1", _module)
pulumi.runtime.registerResourceModule("openstack", "keymanager/orderV1", _module)
pulumi.runtime.registerResourceModule("openstack", "keymanager/secretV1", _module)
