// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to get the ID of an OpenStack Load Balancer flavorprofile.
 *
 * > **Note:** This usually requires admin privileges.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const fp1 = openstack.loadbalancer.getFlavorprofileV2({
 *     name: "flavorprofile_1",
 * });
 * ```
 */
export function getFlavorprofileV2(args?: GetFlavorprofileV2Args, opts?: pulumi.InvokeOptions): Promise<GetFlavorprofileV2Result> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("openstack:loadbalancer/getFlavorprofileV2:getFlavorprofileV2", {
        "flavorprofileId": args.flavorprofileId,
        "name": args.name,
        "providerName": args.providerName,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlavorprofileV2.
 */
export interface GetFlavorprofileV2Args {
    /**
     * The ID of the flavorprofile. Conflicts with `name` and
     * `providerName`.
     */
    flavorprofileId?: string;
    /**
     * The name of the flavorprofile. Conflicts with `flavorprofileId`.
     */
    name?: string;
    /**
     * The name of the provider that the flavorprofile uses. Conflicts
     * with `flavorprofileId`.
     */
    providerName?: string;
    /**
     * The region in which to obtain the V2 Load Balancer client.
     * If omitted, the `region` argument of the provider is used.
     */
    region?: string;
}

/**
 * A collection of values returned by getFlavorprofileV2.
 */
export interface GetFlavorprofileV2Result {
    /**
     * Extra data of the flavorprofile depending on the provider.
     */
    readonly flavorData: string;
    readonly flavorprofileId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the flavorprofile.
     */
    readonly name: string;
    /**
     * The name of the provider that the flavorprofile uses.
     */
    readonly providerName: string;
    readonly region: string;
}
/**
 * Use this data source to get the ID of an OpenStack Load Balancer flavorprofile.
 *
 * > **Note:** This usually requires admin privileges.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const fp1 = openstack.loadbalancer.getFlavorprofileV2({
 *     name: "flavorprofile_1",
 * });
 * ```
 */
export function getFlavorprofileV2Output(args?: GetFlavorprofileV2OutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFlavorprofileV2Result> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("openstack:loadbalancer/getFlavorprofileV2:getFlavorprofileV2", {
        "flavorprofileId": args.flavorprofileId,
        "name": args.name,
        "providerName": args.providerName,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlavorprofileV2.
 */
export interface GetFlavorprofileV2OutputArgs {
    /**
     * The ID of the flavorprofile. Conflicts with `name` and
     * `providerName`.
     */
    flavorprofileId?: pulumi.Input<string>;
    /**
     * The name of the flavorprofile. Conflicts with `flavorprofileId`.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the provider that the flavorprofile uses. Conflicts
     * with `flavorprofileId`.
     */
    providerName?: pulumi.Input<string>;
    /**
     * The region in which to obtain the V2 Load Balancer client.
     * If omitted, the `region` argument of the provider is used.
     */
    region?: pulumi.Input<string>;
}
