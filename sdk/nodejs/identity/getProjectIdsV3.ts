// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to get a list of OpenStack Project IDs matching the
 * specified criteria.
 *
 * > **Note:** You _must_ have domain admin or cloud admin privileges in your OpenStack cloud to use
 * this datasource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const projects = openstack.identity.getProjectIdsV3({
 *     nameRegex: "^prod.*",
 * });
 * ```
 */
export function getProjectIdsV3(args?: GetProjectIdsV3Args, opts?: pulumi.InvokeOptions): Promise<GetProjectIdsV3Result> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("openstack:identity/getProjectIdsV3:getProjectIdsV3", {
        "domainId": args.domainId,
        "enabled": args.enabled,
        "isDomain": args.isDomain,
        "name": args.name,
        "nameRegex": args.nameRegex,
        "parentId": args.parentId,
        "region": args.region,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getProjectIdsV3.
 */
export interface GetProjectIdsV3Args {
    /**
     * The domain projects belongs to.
     */
    domainId?: string;
    /**
     * Whether the project is enabled or disabled. Valid
     * values are `true` and `false`. Default is `true`.
     */
    enabled?: boolean;
    isDomain?: boolean;
    /**
     * The name of the project.
     */
    name?: string;
    /**
     * The regular expression of the name of the project.
     * Cannot be used simultaneously with `name`. Unlike filtering by `name` the
     * `nameRegex` filtering does by client on the result of OpenStack search
     * query.
     */
    nameRegex?: string;
    /**
     * The parent of the project.
     */
    parentId?: string;
    region?: string;
    /**
     * Tags for the project.
     */
    tags?: string[];
}

/**
 * A collection of values returned by getProjectIdsV3.
 */
export interface GetProjectIdsV3Result {
    readonly description: string;
    readonly domainId: string;
    readonly enabled?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly isDomain?: boolean;
    readonly name?: string;
    readonly nameRegex?: string;
    readonly parentId?: string;
    readonly region: string;
    readonly tags?: string[];
}
/**
 * Use this data source to get a list of OpenStack Project IDs matching the
 * specified criteria.
 *
 * > **Note:** You _must_ have domain admin or cloud admin privileges in your OpenStack cloud to use
 * this datasource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const projects = openstack.identity.getProjectIdsV3({
 *     nameRegex: "^prod.*",
 * });
 * ```
 */
export function getProjectIdsV3Output(args?: GetProjectIdsV3OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectIdsV3Result> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("openstack:identity/getProjectIdsV3:getProjectIdsV3", {
        "domainId": args.domainId,
        "enabled": args.enabled,
        "isDomain": args.isDomain,
        "name": args.name,
        "nameRegex": args.nameRegex,
        "parentId": args.parentId,
        "region": args.region,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getProjectIdsV3.
 */
export interface GetProjectIdsV3OutputArgs {
    /**
     * The domain projects belongs to.
     */
    domainId?: pulumi.Input<string>;
    /**
     * Whether the project is enabled or disabled. Valid
     * values are `true` and `false`. Default is `true`.
     */
    enabled?: pulumi.Input<boolean>;
    isDomain?: pulumi.Input<boolean>;
    /**
     * The name of the project.
     */
    name?: pulumi.Input<string>;
    /**
     * The regular expression of the name of the project.
     * Cannot be used simultaneously with `name`. Unlike filtering by `name` the
     * `nameRegex` filtering does by client on the result of OpenStack search
     * query.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * The parent of the project.
     */
    parentId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    /**
     * Tags for the project.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
