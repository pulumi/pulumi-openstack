// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to get information of an available OpenStack Magnum node group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const nodegroup1 = openstack.containerinfra.getNodeGroup({
 *     clusterId: "cluster_1",
 *     name: "nodegroup_1",
 * });
 * ```
 */
export function getNodeGroup(args: GetNodeGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetNodeGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("openstack:containerinfra/getNodeGroup:getNodeGroup", {
        "clusterId": args.clusterId,
        "name": args.name,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getNodeGroup.
 */
export interface GetNodeGroupArgs {
    /**
     * The name of the OpenStack Magnum cluster.
     */
    clusterId: string;
    /**
     * The name of the node group.
     */
    name?: string;
    /**
     * The region in which to obtain the V1 Container Infra
     * client.
     * If omitted, the `region` argument of the provider is used.
     */
    region?: string;
}

/**
 * A collection of values returned by getNodeGroup.
 */
export interface GetNodeGroupResult {
    readonly clusterId: string;
    /**
     * The time at which the node group was created.
     */
    readonly createdAt: string;
    /**
     * The size (in GB) of the Docker volume.
     */
    readonly dockerVolumeSize: number;
    /**
     * The flavor for the nodes of the node group.
     */
    readonly flavor: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The reference to an image that is used for nodes of the node group.
     */
    readonly image: string;
    /**
     * The list of key value pairs representing additional properties of
     * the node group.
     */
    readonly labels: {[key: string]: string};
    /**
     * The maximum number of nodes for the node group.
     */
    readonly maxNodeCount: number;
    /**
     * The minimum number of nodes for the node group.
     */
    readonly minNodeCount: number;
    /**
     * See Argument Reference above.
     */
    readonly name: string;
    /**
     * The number of nodes for the node group.
     */
    readonly nodeCount: number;
    /**
     * The project of the node group.
     */
    readonly projectId: string;
    /**
     * See Argument Reference above.
     */
    readonly region: string;
    /**
     * The role of the node group.
     */
    readonly role: string;
    /**
     * The time at which the node group was updated.
     */
    readonly updatedAt: string;
}
/**
 * Use this data source to get information of an available OpenStack Magnum node group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const nodegroup1 = openstack.containerinfra.getNodeGroup({
 *     clusterId: "cluster_1",
 *     name: "nodegroup_1",
 * });
 * ```
 */
export function getNodeGroupOutput(args: GetNodeGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNodeGroupResult> {
    return pulumi.output(args).apply((a: any) => getNodeGroup(a, opts))
}

/**
 * A collection of arguments for invoking getNodeGroup.
 */
export interface GetNodeGroupOutputArgs {
    /**
     * The name of the OpenStack Magnum cluster.
     */
    clusterId: pulumi.Input<string>;
    /**
     * The name of the node group.
     */
    name?: pulumi.Input<string>;
    /**
     * The region in which to obtain the V1 Container Infra
     * client.
     * If omitted, the `region` argument of the provider is used.
     */
    region?: pulumi.Input<string>;
}
