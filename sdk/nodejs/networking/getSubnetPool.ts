// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to get the ID of an available OpenStack subnetpool.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const subnetpool1 = openstack.networking.getSubnetPool({
 *     name: "subnetpool_1",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSubnetPool(args?: GetSubnetPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetSubnetPoolResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("openstack:networking/getSubnetPool:getSubnetPool", {
        "addressScopeId": args.addressScopeId,
        "defaultPrefixlen": args.defaultPrefixlen,
        "defaultQuota": args.defaultQuota,
        "description": args.description,
        "ipVersion": args.ipVersion,
        "isDefault": args.isDefault,
        "maxPrefixlen": args.maxPrefixlen,
        "minPrefixlen": args.minPrefixlen,
        "name": args.name,
        "projectId": args.projectId,
        "region": args.region,
        "shared": args.shared,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubnetPool.
 */
export interface GetSubnetPoolArgs {
    /**
     * The Neutron address scope that subnetpools
     * is assigned to.
     */
    addressScopeId?: string;
    /**
     * The size of the subnetpool default prefix
     * length.
     */
    defaultPrefixlen?: number;
    /**
     * The per-project quota on the prefix space that
     * can be allocated from the subnetpool for project subnets.
     */
    defaultQuota?: number;
    /**
     * The human-readable description for the subnetpool.
     */
    description?: string;
    /**
     * The IP protocol version.
     */
    ipVersion?: number;
    /**
     * Whether the subnetpool is default subnetpool or not.
     */
    isDefault?: boolean;
    /**
     * The size of the subnetpool max prefix length.
     */
    maxPrefixlen?: number;
    /**
     * The size of the subnetpool min prefix length.
     */
    minPrefixlen?: number;
    /**
     * The name of the subnetpool.
     */
    name?: string;
    /**
     * The owner of the subnetpool.
     */
    projectId?: string;
    /**
     * The region in which to obtain the V2 Networking client.
     * A Networking client is needed to retrieve a subnetpool id. If omitted, the
     * `region` argument of the provider is used.
     */
    region?: string;
    /**
     * Whether this subnetpool is shared across all projects.
     */
    shared?: boolean;
    /**
     * The list of subnetpool tags to filter.
     */
    tags?: string[];
}

/**
 * A collection of values returned by getSubnetPool.
 */
export interface GetSubnetPoolResult {
    /**
     * See Argument Reference above.
     */
    readonly addressScopeId: string;
    /**
     * The set of string tags applied on the subnetpool.
     */
    readonly allTags: string[];
    /**
     * The time at which subnetpool was created.
     */
    readonly createdAt: string;
    /**
     * See Argument Reference above.
     */
    readonly defaultPrefixlen: number;
    /**
     * See Argument Reference above.
     */
    readonly defaultQuota: number;
    /**
     * See Argument Reference above.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The IP protocol version.
     */
    readonly ipVersion: number;
    /**
     * See Argument Reference above.
     */
    readonly isDefault: boolean;
    /**
     * See Argument Reference above.
     */
    readonly maxPrefixlen: number;
    /**
     * See Argument Reference above.
     */
    readonly minPrefixlen: number;
    /**
     * See Argument Reference above.
     */
    readonly name: string;
    /**
     * See Argument Reference above.
     */
    readonly prefixes: string[];
    /**
     * See Argument Reference above.
     */
    readonly projectId: string;
    /**
     * See Argument Reference above.
     */
    readonly region: string;
    /**
     * The revision number of the subnetpool.
     */
    readonly revisionNumber: number;
    /**
     * See Argument Reference above.
     */
    readonly shared: boolean;
    readonly tags?: string[];
    /**
     * The time at which subnetpool was created.
     */
    readonly updatedAt: string;
}
/**
 * Use this data source to get the ID of an available OpenStack subnetpool.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const subnetpool1 = openstack.networking.getSubnetPool({
 *     name: "subnetpool_1",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSubnetPoolOutput(args?: GetSubnetPoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubnetPoolResult> {
    return pulumi.output(args).apply((a: any) => getSubnetPool(a, opts))
}

/**
 * A collection of arguments for invoking getSubnetPool.
 */
export interface GetSubnetPoolOutputArgs {
    /**
     * The Neutron address scope that subnetpools
     * is assigned to.
     */
    addressScopeId?: pulumi.Input<string>;
    /**
     * The size of the subnetpool default prefix
     * length.
     */
    defaultPrefixlen?: pulumi.Input<number>;
    /**
     * The per-project quota on the prefix space that
     * can be allocated from the subnetpool for project subnets.
     */
    defaultQuota?: pulumi.Input<number>;
    /**
     * The human-readable description for the subnetpool.
     */
    description?: pulumi.Input<string>;
    /**
     * The IP protocol version.
     */
    ipVersion?: pulumi.Input<number>;
    /**
     * Whether the subnetpool is default subnetpool or not.
     */
    isDefault?: pulumi.Input<boolean>;
    /**
     * The size of the subnetpool max prefix length.
     */
    maxPrefixlen?: pulumi.Input<number>;
    /**
     * The size of the subnetpool min prefix length.
     */
    minPrefixlen?: pulumi.Input<number>;
    /**
     * The name of the subnetpool.
     */
    name?: pulumi.Input<string>;
    /**
     * The owner of the subnetpool.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The region in which to obtain the V2 Networking client.
     * A Networking client is needed to retrieve a subnetpool id. If omitted, the
     * `region` argument of the provider is used.
     */
    region?: pulumi.Input<string>;
    /**
     * Whether this subnetpool is shared across all projects.
     */
    shared?: pulumi.Input<boolean>;
    /**
     * The list of subnetpool tags to filter.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
