// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a V2 Neutron network resource within OpenStack.
 */
export class Network extends pulumi.CustomResource {
    /**
     * Get an existing Network resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkState): Network {
        return new Network(name, <any>state, { id });
    }

    /**
     * The administrative state of the network.
     * Acceptable values are "true" and "false". Changing this value updates the
     * state of the existing network.
     */
    public readonly adminStateUp: pulumi.Output<string>;
    /**
     * An availability zone is used to make
     * network resources highly available. Used for resources with high availability
     * so that they are scheduled on different availability zones. Changing this
     * creates a new network.
     */
    public readonly availabilityZoneHints: pulumi.Output<string[]>;
    /**
     * Specifies whether the network resource has the
     * external routing facility. Valid values are true and false. Defaults to
     * false. Changing this updates the external attribute of the existing network.
     */
    public readonly external: pulumi.Output<boolean>;
    /**
     * The name of the network. Changing this updates the name of
     * the existing network.
     */
    public readonly name: pulumi.Output<string>;
    /**
     * The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create a Neutron network. If omitted, the
     * `region` argument of the provider is used. Changing this creates a new
     * network.
     */
    public readonly region: pulumi.Output<string>;
    /**
     * An array of one or more provider segment objects.
     */
    public readonly segments: pulumi.Output<{ networkType?: string, physicalNetwork?: string, segmentationId?: number }[] | undefined>;
    /**
     * Specifies whether the network resource can be accessed
     * by any tenant or not. Changing this updates the sharing capabalities of the
     * existing network.
     */
    public readonly shared: pulumi.Output<string>;
    /**
     * The owner of the network. Required if admin wants to
     * create a network for another tenant. Changing this creates a new network.
     */
    public readonly tenantId: pulumi.Output<string>;
    /**
     * Map of additional options.
     */
    public readonly valueSpecs: pulumi.Output<{[key: string]: any} | undefined>;

    /**
     * Create a Network resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkArgs | NetworkState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: NetworkState = argsOrState as NetworkState | undefined;
            inputs["adminStateUp"] = state ? state.adminStateUp : undefined;
            inputs["availabilityZoneHints"] = state ? state.availabilityZoneHints : undefined;
            inputs["external"] = state ? state.external : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["region"] = state ? state.region : undefined;
            inputs["segments"] = state ? state.segments : undefined;
            inputs["shared"] = state ? state.shared : undefined;
            inputs["tenantId"] = state ? state.tenantId : undefined;
            inputs["valueSpecs"] = state ? state.valueSpecs : undefined;
        } else {
            const args = argsOrState as NetworkArgs | undefined;
            inputs["adminStateUp"] = args ? args.adminStateUp : undefined;
            inputs["availabilityZoneHints"] = args ? args.availabilityZoneHints : undefined;
            inputs["external"] = args ? args.external : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["segments"] = args ? args.segments : undefined;
            inputs["shared"] = args ? args.shared : undefined;
            inputs["tenantId"] = args ? args.tenantId : undefined;
            inputs["valueSpecs"] = args ? args.valueSpecs : undefined;
        }
        super("openstack:networking/network:Network", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Network resources.
 */
export interface NetworkState {
    /**
     * The administrative state of the network.
     * Acceptable values are "true" and "false". Changing this value updates the
     * state of the existing network.
     */
    readonly adminStateUp?: pulumi.Input<string>;
    /**
     * An availability zone is used to make
     * network resources highly available. Used for resources with high availability
     * so that they are scheduled on different availability zones. Changing this
     * creates a new network.
     */
    readonly availabilityZoneHints?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether the network resource has the
     * external routing facility. Valid values are true and false. Defaults to
     * false. Changing this updates the external attribute of the existing network.
     */
    readonly external?: pulumi.Input<boolean>;
    /**
     * The name of the network. Changing this updates the name of
     * the existing network.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create a Neutron network. If omitted, the
     * `region` argument of the provider is used. Changing this creates a new
     * network.
     */
    readonly region?: pulumi.Input<string>;
    /**
     * An array of one or more provider segment objects.
     */
    readonly segments?: pulumi.Input<pulumi.Input<{ networkType?: pulumi.Input<string>, physicalNetwork?: pulumi.Input<string>, segmentationId?: pulumi.Input<number> }>[]>;
    /**
     * Specifies whether the network resource can be accessed
     * by any tenant or not. Changing this updates the sharing capabalities of the
     * existing network.
     */
    readonly shared?: pulumi.Input<string>;
    /**
     * The owner of the network. Required if admin wants to
     * create a network for another tenant. Changing this creates a new network.
     */
    readonly tenantId?: pulumi.Input<string>;
    /**
     * Map of additional options.
     */
    readonly valueSpecs?: pulumi.Input<{[key: string]: any}>;
}

/**
 * The set of arguments for constructing a Network resource.
 */
export interface NetworkArgs {
    /**
     * The administrative state of the network.
     * Acceptable values are "true" and "false". Changing this value updates the
     * state of the existing network.
     */
    readonly adminStateUp?: pulumi.Input<string>;
    /**
     * An availability zone is used to make
     * network resources highly available. Used for resources with high availability
     * so that they are scheduled on different availability zones. Changing this
     * creates a new network.
     */
    readonly availabilityZoneHints?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether the network resource has the
     * external routing facility. Valid values are true and false. Defaults to
     * false. Changing this updates the external attribute of the existing network.
     */
    readonly external?: pulumi.Input<boolean>;
    /**
     * The name of the network. Changing this updates the name of
     * the existing network.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create a Neutron network. If omitted, the
     * `region` argument of the provider is used. Changing this creates a new
     * network.
     */
    readonly region?: pulumi.Input<string>;
    /**
     * An array of one or more provider segment objects.
     */
    readonly segments?: pulumi.Input<pulumi.Input<{ networkType?: pulumi.Input<string>, physicalNetwork?: pulumi.Input<string>, segmentationId?: pulumi.Input<number> }>[]>;
    /**
     * Specifies whether the network resource can be accessed
     * by any tenant or not. Changing this updates the sharing capabalities of the
     * existing network.
     */
    readonly shared?: pulumi.Input<string>;
    /**
     * The owner of the network. Required if admin wants to
     * create a network for another tenant. Changing this creates a new network.
     */
    readonly tenantId?: pulumi.Input<string>;
    /**
     * Map of additional options.
     */
    readonly valueSpecs?: pulumi.Input<{[key: string]: any}>;
}
