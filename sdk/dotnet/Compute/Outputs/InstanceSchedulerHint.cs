// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.OpenStack.Compute.Outputs
{

    [OutputType]
    public sealed class InstanceSchedulerHint
    {
        /// <summary>
        /// Arbitrary key/value pairs of additional
        /// properties to pass to the scheduler.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? AdditionalProperties;
        /// <summary>
        /// An IP Address in CIDR form. The instance
        /// will be placed on a compute node that is in the same subnet.
        /// </summary>
        public readonly string? BuildNearHostIp;
        /// <summary>
        /// A list of instance UUIDs. The instance will
        /// be scheduled on a different host than all other instances.
        /// </summary>
        public readonly ImmutableArray<string> DifferentHosts;
        /// <summary>
        /// A UUID of a Server Group. The instance will be placed
        /// into that group.
        /// </summary>
        public readonly string? Group;
        /// <summary>
        /// A conditional query that a compute node must pass in
        /// order to host an instance. The query must use the `JsonFilter` syntax
        /// which is described
        /// [here](https://docs.openstack.org/nova/latest/admin/configuration/schedulers.html#jsonfilter).
        /// At this time, only simple queries are supported. Compound queries using
        /// `and`, `or`, or `not` are not supported. An example of a simple query is:
        /// </summary>
        public readonly ImmutableArray<string> Queries;
        /// <summary>
        /// A list of instance UUIDs. The instance will be
        /// scheduled on the same host of those specified.
        /// </summary>
        public readonly ImmutableArray<string> SameHosts;
        /// <summary>
        /// The name of a cell to host the instance.
        /// </summary>
        public readonly string? TargetCell;

        [OutputConstructor]
        private InstanceSchedulerHint(
            ImmutableDictionary<string, object>? additionalProperties,

            string? buildNearHostIp,

            ImmutableArray<string> differentHosts,

            string? group,

            ImmutableArray<string> queries,

            ImmutableArray<string> sameHosts,

            string? targetCell)
        {
            AdditionalProperties = additionalProperties;
            BuildNearHostIp = buildNearHostIp;
            DifferentHosts = differentHosts;
            Group = group;
            Queries = queries;
            SameHosts = sameHosts;
            TargetCell = targetCell;
        }
    }
}
