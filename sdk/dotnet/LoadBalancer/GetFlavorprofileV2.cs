// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.OpenStack.LoadBalancer
{
    public static class GetFlavorprofileV2
    {
        /// <summary>
        /// Use this data source to get the ID of an OpenStack Load Balancer flavorprofile.
        /// 
        /// &gt; **Note:** This usually requires admin privileges.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using OpenStack = Pulumi.OpenStack;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fp1 = OpenStack.LoadBalancer.GetFlavorprofileV2.Invoke(new()
        ///     {
        ///         Name = "flavorprofile_1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetFlavorprofileV2Result> InvokeAsync(GetFlavorprofileV2Args? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFlavorprofileV2Result>("openstack:loadbalancer/getFlavorprofileV2:getFlavorprofileV2", args ?? new GetFlavorprofileV2Args(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get the ID of an OpenStack Load Balancer flavorprofile.
        /// 
        /// &gt; **Note:** This usually requires admin privileges.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using OpenStack = Pulumi.OpenStack;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fp1 = OpenStack.LoadBalancer.GetFlavorprofileV2.Invoke(new()
        ///     {
        ///         Name = "flavorprofile_1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFlavorprofileV2Result> Invoke(GetFlavorprofileV2InvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFlavorprofileV2Result>("openstack:loadbalancer/getFlavorprofileV2:getFlavorprofileV2", args ?? new GetFlavorprofileV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get the ID of an OpenStack Load Balancer flavorprofile.
        /// 
        /// &gt; **Note:** This usually requires admin privileges.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using OpenStack = Pulumi.OpenStack;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fp1 = OpenStack.LoadBalancer.GetFlavorprofileV2.Invoke(new()
        ///     {
        ///         Name = "flavorprofile_1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFlavorprofileV2Result> Invoke(GetFlavorprofileV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFlavorprofileV2Result>("openstack:loadbalancer/getFlavorprofileV2:getFlavorprofileV2", args ?? new GetFlavorprofileV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFlavorprofileV2Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the flavorprofile. Conflicts with `Name` and
        /// `ProviderName`.
        /// </summary>
        [Input("flavorprofileId")]
        public string? FlavorprofileId { get; set; }

        /// <summary>
        /// The name of the flavorprofile. Conflicts with `FlavorprofileId`.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The name of the provider that the flavorprofile uses. Conflicts
        /// with `FlavorprofileId`.
        /// </summary>
        [Input("providerName")]
        public string? ProviderName { get; set; }

        /// <summary>
        /// The region in which to obtain the V2 Load Balancer client.
        /// If omitted, the `Region` argument of the provider is used.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetFlavorprofileV2Args()
        {
        }
        public static new GetFlavorprofileV2Args Empty => new GetFlavorprofileV2Args();
    }

    public sealed class GetFlavorprofileV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the flavorprofile. Conflicts with `Name` and
        /// `ProviderName`.
        /// </summary>
        [Input("flavorprofileId")]
        public Input<string>? FlavorprofileId { get; set; }

        /// <summary>
        /// The name of the flavorprofile. Conflicts with `FlavorprofileId`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the provider that the flavorprofile uses. Conflicts
        /// with `FlavorprofileId`.
        /// </summary>
        [Input("providerName")]
        public Input<string>? ProviderName { get; set; }

        /// <summary>
        /// The region in which to obtain the V2 Load Balancer client.
        /// If omitted, the `Region` argument of the provider is used.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetFlavorprofileV2InvokeArgs()
        {
        }
        public static new GetFlavorprofileV2InvokeArgs Empty => new GetFlavorprofileV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetFlavorprofileV2Result
    {
        /// <summary>
        /// Extra data of the flavorprofile depending on the provider.
        /// </summary>
        public readonly string FlavorData;
        public readonly string FlavorprofileId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the flavorprofile.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The name of the provider that the flavorprofile uses.
        /// </summary>
        public readonly string ProviderName;
        public readonly string Region;

        [OutputConstructor]
        private GetFlavorprofileV2Result(
            string flavorData,

            string flavorprofileId,

            string id,

            string name,

            string providerName,

            string region)
        {
            FlavorData = flavorData;
            FlavorprofileId = flavorprofileId;
            Id = id;
            Name = name;
            ProviderName = providerName;
            Region = region;
        }
    }
}
