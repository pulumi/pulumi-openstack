// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.OpenStack.LoadBalancer
{
    /// <summary>
    /// Manages a V2 load balancer quota resource within OpenStack.
    /// 
    /// &gt; **Note:** This usually requires admin privileges.
    /// 
    /// &gt; **Note:** This resource is only available for Octavia.
    /// 
    /// &gt; **Note:** This resource has a no-op deletion so no actual actions will be done against the OpenStack
    ///    API in case of delete call.
    /// 
    /// &gt; **Note:** This resource has all-in creation so all optional quota arguments that were not specified are
    ///    created with zero value.
    /// 
    /// &gt; **Note:** This resource has attributes that depend on octavia minor versions.
    /// Please ensure your Openstack cloud supports the required minor version.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using OpenStack = Pulumi.OpenStack;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var project1 = new OpenStack.Identity.Project("project1");
    /// 
    ///     var quota1 = new OpenStack.LoadBalancer.Quota("quota1", new()
    ///     {
    ///         ProjectId = project1.Id,
    ///         Loadbalancer = 6,
    ///         Listener = 7,
    ///         Member = 8,
    ///         Pool = 9,
    ///         HealthMonitor = 10,
    ///         L7Policy = 11,
    ///         L7Rule = 12,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Quotas can be imported using the `project_id/region_name`, where region_name is the
    /// one defined is the Openstack credentials that are in use. E.g.
    /// 
    /// ```sh
    /// $ pulumi import openstack:loadbalancer/quota:Quota quota_1 2a0f2240-c5e6-41de-896d-e80d97428d6b/region_1
    /// ```
    /// </summary>
    [OpenStackResourceType("openstack:loadbalancer/quota:Quota")]
    public partial class Quota : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Quota value for health_monitors. Changing
        /// this updates the existing quota. Omitting it sets it to 0.
        /// </summary>
        [Output("healthMonitor")]
        public Output<int> HealthMonitor { get; private set; } = null!;

        /// <summary>
        /// Quota value for l7_policies. Changing this
        /// updates the existing quota. Omitting it sets it to 0. Available in
        /// **Octavia minor version 2.19**.
        /// </summary>
        [Output("l7Policy")]
        public Output<int> L7Policy { get; private set; } = null!;

        /// <summary>
        /// Quota value for l7_rules. Changing this
        /// updates the existing quota. Omitting it sets it to 0. Available in
        /// **Octavia minor version 2.19**.
        /// </summary>
        [Output("l7Rule")]
        public Output<int> L7Rule { get; private set; } = null!;

        /// <summary>
        /// Quota value for listeners. Changing this updates
        /// the existing quota. Omitting it sets it to 0.
        /// </summary>
        [Output("listener")]
        public Output<int> Listener { get; private set; } = null!;

        /// <summary>
        /// Quota value for loadbalancers. Changing this
        /// updates the existing quota. Omitting it sets it to 0.
        /// </summary>
        [Output("loadbalancer")]
        public Output<int> Loadbalancer { get; private set; } = null!;

        /// <summary>
        /// Quota value for members. Changing this updates
        /// the existing quota. Omitting it sets it to 0.
        /// </summary>
        [Output("member")]
        public Output<int> Member { get; private set; } = null!;

        /// <summary>
        /// Quota value for pools. Changing this updates the
        /// the existing quota. Omitting it sets it to 0.
        /// </summary>
        [Output("pool")]
        public Output<int> Pool { get; private set; } = null!;

        /// <summary>
        /// ID of the project to manage quotas. Changing this
        /// creates a new quota.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// Region in which to manage quotas. Changing this
        /// creates a new quota. If ommited, the region of the credentials is used.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;


        /// <summary>
        /// Create a Quota resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Quota(string name, QuotaArgs args, CustomResourceOptions? options = null)
            : base("openstack:loadbalancer/quota:Quota", name, args ?? new QuotaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Quota(string name, Input<string> id, QuotaState? state = null, CustomResourceOptions? options = null)
            : base("openstack:loadbalancer/quota:Quota", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Quota resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Quota Get(string name, Input<string> id, QuotaState? state = null, CustomResourceOptions? options = null)
        {
            return new Quota(name, id, state, options);
        }
    }

    public sealed class QuotaArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Quota value for health_monitors. Changing
        /// this updates the existing quota. Omitting it sets it to 0.
        /// </summary>
        [Input("healthMonitor")]
        public Input<int>? HealthMonitor { get; set; }

        /// <summary>
        /// Quota value for l7_policies. Changing this
        /// updates the existing quota. Omitting it sets it to 0. Available in
        /// **Octavia minor version 2.19**.
        /// </summary>
        [Input("l7Policy")]
        public Input<int>? L7Policy { get; set; }

        /// <summary>
        /// Quota value for l7_rules. Changing this
        /// updates the existing quota. Omitting it sets it to 0. Available in
        /// **Octavia minor version 2.19**.
        /// </summary>
        [Input("l7Rule")]
        public Input<int>? L7Rule { get; set; }

        /// <summary>
        /// Quota value for listeners. Changing this updates
        /// the existing quota. Omitting it sets it to 0.
        /// </summary>
        [Input("listener")]
        public Input<int>? Listener { get; set; }

        /// <summary>
        /// Quota value for loadbalancers. Changing this
        /// updates the existing quota. Omitting it sets it to 0.
        /// </summary>
        [Input("loadbalancer")]
        public Input<int>? Loadbalancer { get; set; }

        /// <summary>
        /// Quota value for members. Changing this updates
        /// the existing quota. Omitting it sets it to 0.
        /// </summary>
        [Input("member")]
        public Input<int>? Member { get; set; }

        /// <summary>
        /// Quota value for pools. Changing this updates the
        /// the existing quota. Omitting it sets it to 0.
        /// </summary>
        [Input("pool")]
        public Input<int>? Pool { get; set; }

        /// <summary>
        /// ID of the project to manage quotas. Changing this
        /// creates a new quota.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// Region in which to manage quotas. Changing this
        /// creates a new quota. If ommited, the region of the credentials is used.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public QuotaArgs()
        {
        }
        public static new QuotaArgs Empty => new QuotaArgs();
    }

    public sealed class QuotaState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Quota value for health_monitors. Changing
        /// this updates the existing quota. Omitting it sets it to 0.
        /// </summary>
        [Input("healthMonitor")]
        public Input<int>? HealthMonitor { get; set; }

        /// <summary>
        /// Quota value for l7_policies. Changing this
        /// updates the existing quota. Omitting it sets it to 0. Available in
        /// **Octavia minor version 2.19**.
        /// </summary>
        [Input("l7Policy")]
        public Input<int>? L7Policy { get; set; }

        /// <summary>
        /// Quota value for l7_rules. Changing this
        /// updates the existing quota. Omitting it sets it to 0. Available in
        /// **Octavia minor version 2.19**.
        /// </summary>
        [Input("l7Rule")]
        public Input<int>? L7Rule { get; set; }

        /// <summary>
        /// Quota value for listeners. Changing this updates
        /// the existing quota. Omitting it sets it to 0.
        /// </summary>
        [Input("listener")]
        public Input<int>? Listener { get; set; }

        /// <summary>
        /// Quota value for loadbalancers. Changing this
        /// updates the existing quota. Omitting it sets it to 0.
        /// </summary>
        [Input("loadbalancer")]
        public Input<int>? Loadbalancer { get; set; }

        /// <summary>
        /// Quota value for members. Changing this updates
        /// the existing quota. Omitting it sets it to 0.
        /// </summary>
        [Input("member")]
        public Input<int>? Member { get; set; }

        /// <summary>
        /// Quota value for pools. Changing this updates the
        /// the existing quota. Omitting it sets it to 0.
        /// </summary>
        [Input("pool")]
        public Input<int>? Pool { get; set; }

        /// <summary>
        /// ID of the project to manage quotas. Changing this
        /// creates a new quota.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// Region in which to manage quotas. Changing this
        /// creates a new quota. If ommited, the region of the credentials is used.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public QuotaState()
        {
        }
        public static new QuotaState Empty => new QuotaState();
    }
}
