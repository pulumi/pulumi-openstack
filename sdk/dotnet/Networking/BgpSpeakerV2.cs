// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.OpenStack.Networking
{
    /// <summary>
    /// Manages a V2 Neutron BGP Speaker resource within OpenStack.
    /// 
    /// This resource allows you to configure a BGP speaker that can be associated with
    /// a BGP peer to exchange routing information.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using OpenStack = Pulumi.OpenStack;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var network1 = new OpenStack.Networking.Network("network1", new()
    ///     {
    ///         Name = "network1",
    ///     });
    /// 
    ///     var peer1 = new OpenStack.Networking.BgpPeerV2("peer_1", new()
    ///     {
    ///         Name = "bgp_peer_1",
    ///         PeerIp = "192.0.2.10",
    ///         RemoteAs = 65001,
    ///         AuthType = "md5",
    ///         Password = "supersecret",
    ///     });
    /// 
    ///     var speaker1 = new OpenStack.Networking.BgpSpeakerV2("speaker_1", new()
    ///     {
    ///         Name = "bgp_speaker_1",
    ///         IpVersion = 4,
    ///         LocalAs = 65000,
    ///         Networks = new[]
    ///         {
    ///             network1.Id,
    ///         },
    ///         Peers = new[]
    ///         {
    ///             peer1OpestackNetworkingBgpPeerV2.Id,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// BGP speakers can be imported using their ID:
    /// 
    /// ```sh
    /// $ pulumi import openstack:networking/bgpSpeakerV2:BgpSpeakerV2 speaker_1 8a2ad402-b805-46bf-a60b-008573ca2844
    /// ```
    /// </summary>
    [OpenStackResourceType("openstack:networking/bgpSpeakerV2:BgpSpeakerV2")]
    public partial class BgpSpeakerV2 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A boolean value indicating
        /// whether to advertise floating IP host routes. Defaults to `True`.
        /// </summary>
        [Output("advertiseFloatingIpHostRoutes")]
        public Output<bool> AdvertiseFloatingIpHostRoutes { get; private set; } = null!;

        /// <summary>
        /// A boolean value indicating whether to
        /// advertise tenant networks. Defaults to `True`.
        /// </summary>
        [Output("advertiseTenantNetworks")]
        public Output<bool> AdvertiseTenantNetworks { get; private set; } = null!;

        /// <summary>
        /// A list of dictionaries containing the `Destination` and
        /// `NextHop` for each route advertised by the BGP speaker. This attribute is
        /// only populated after the BGP speaker has been created and has established BGP
        /// sessions with its peers.
        /// </summary>
        [Output("advertisedRoutes")]
        public Output<ImmutableArray<Outputs.BgpSpeakerV2AdvertisedRoute>> AdvertisedRoutes { get; private set; } = null!;

        /// <summary>
        /// The IP version of the BGP speaker. Valid values are
        /// `4` or `6`. Defaults to `4`. Changing this creates a new BGP speaker.
        /// </summary>
        [Output("ipVersion")]
        public Output<int?> IpVersion { get; private set; } = null!;

        /// <summary>
        /// The local autonomous system number (ASN) for the BGP
        /// speaker. This is a mandatory field and must be specified. Changing this
        /// creates a new BGP speaker.
        /// </summary>
        [Output("localAs")]
        public Output<int> LocalAs { get; private set; } = null!;

        /// <summary>
        /// A name for the BGP speaker.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A list of network IDs to associate with the BGP speaker.
        /// </summary>
        [Output("networks")]
        public Output<ImmutableArray<string>> Networks { get; private set; } = null!;

        /// <summary>
        /// A list of BGP peer IDs to associate with the BGP speaker.
        /// </summary>
        [Output("peers")]
        public Output<ImmutableArray<string>> Peers { get; private set; } = null!;

        /// <summary>
        /// The region in which to obtain the V2 Networking client.
        /// A Networking client is needed to create a Neutron network. If omitted, the
        /// `Region` argument of the provider is used. Changing this creates a new BGP
        /// speaker.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The tenant/project ID. Required if admin privileges
        /// are used. Changing this creates a new BGP speaker.
        /// </summary>
        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;


        /// <summary>
        /// Create a BgpSpeakerV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BgpSpeakerV2(string name, BgpSpeakerV2Args args, CustomResourceOptions? options = null)
            : base("openstack:networking/bgpSpeakerV2:BgpSpeakerV2", name, args ?? new BgpSpeakerV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private BgpSpeakerV2(string name, Input<string> id, BgpSpeakerV2State? state = null, CustomResourceOptions? options = null)
            : base("openstack:networking/bgpSpeakerV2:BgpSpeakerV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BgpSpeakerV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BgpSpeakerV2 Get(string name, Input<string> id, BgpSpeakerV2State? state = null, CustomResourceOptions? options = null)
        {
            return new BgpSpeakerV2(name, id, state, options);
        }
    }

    public sealed class BgpSpeakerV2Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A boolean value indicating
        /// whether to advertise floating IP host routes. Defaults to `True`.
        /// </summary>
        [Input("advertiseFloatingIpHostRoutes")]
        public Input<bool>? AdvertiseFloatingIpHostRoutes { get; set; }

        /// <summary>
        /// A boolean value indicating whether to
        /// advertise tenant networks. Defaults to `True`.
        /// </summary>
        [Input("advertiseTenantNetworks")]
        public Input<bool>? AdvertiseTenantNetworks { get; set; }

        /// <summary>
        /// The IP version of the BGP speaker. Valid values are
        /// `4` or `6`. Defaults to `4`. Changing this creates a new BGP speaker.
        /// </summary>
        [Input("ipVersion")]
        public Input<int>? IpVersion { get; set; }

        /// <summary>
        /// The local autonomous system number (ASN) for the BGP
        /// speaker. This is a mandatory field and must be specified. Changing this
        /// creates a new BGP speaker.
        /// </summary>
        [Input("localAs", required: true)]
        public Input<int> LocalAs { get; set; } = null!;

        /// <summary>
        /// A name for the BGP speaker.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networks")]
        private InputList<string>? _networks;

        /// <summary>
        /// A list of network IDs to associate with the BGP speaker.
        /// </summary>
        public InputList<string> Networks
        {
            get => _networks ?? (_networks = new InputList<string>());
            set => _networks = value;
        }

        [Input("peers")]
        private InputList<string>? _peers;

        /// <summary>
        /// A list of BGP peer IDs to associate with the BGP speaker.
        /// </summary>
        public InputList<string> Peers
        {
            get => _peers ?? (_peers = new InputList<string>());
            set => _peers = value;
        }

        /// <summary>
        /// The region in which to obtain the V2 Networking client.
        /// A Networking client is needed to create a Neutron network. If omitted, the
        /// `Region` argument of the provider is used. Changing this creates a new BGP
        /// speaker.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The tenant/project ID. Required if admin privileges
        /// are used. Changing this creates a new BGP speaker.
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        public BgpSpeakerV2Args()
        {
        }
        public static new BgpSpeakerV2Args Empty => new BgpSpeakerV2Args();
    }

    public sealed class BgpSpeakerV2State : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A boolean value indicating
        /// whether to advertise floating IP host routes. Defaults to `True`.
        /// </summary>
        [Input("advertiseFloatingIpHostRoutes")]
        public Input<bool>? AdvertiseFloatingIpHostRoutes { get; set; }

        /// <summary>
        /// A boolean value indicating whether to
        /// advertise tenant networks. Defaults to `True`.
        /// </summary>
        [Input("advertiseTenantNetworks")]
        public Input<bool>? AdvertiseTenantNetworks { get; set; }

        [Input("advertisedRoutes")]
        private InputList<Inputs.BgpSpeakerV2AdvertisedRouteGetArgs>? _advertisedRoutes;

        /// <summary>
        /// A list of dictionaries containing the `Destination` and
        /// `NextHop` for each route advertised by the BGP speaker. This attribute is
        /// only populated after the BGP speaker has been created and has established BGP
        /// sessions with its peers.
        /// </summary>
        public InputList<Inputs.BgpSpeakerV2AdvertisedRouteGetArgs> AdvertisedRoutes
        {
            get => _advertisedRoutes ?? (_advertisedRoutes = new InputList<Inputs.BgpSpeakerV2AdvertisedRouteGetArgs>());
            set => _advertisedRoutes = value;
        }

        /// <summary>
        /// The IP version of the BGP speaker. Valid values are
        /// `4` or `6`. Defaults to `4`. Changing this creates a new BGP speaker.
        /// </summary>
        [Input("ipVersion")]
        public Input<int>? IpVersion { get; set; }

        /// <summary>
        /// The local autonomous system number (ASN) for the BGP
        /// speaker. This is a mandatory field and must be specified. Changing this
        /// creates a new BGP speaker.
        /// </summary>
        [Input("localAs")]
        public Input<int>? LocalAs { get; set; }

        /// <summary>
        /// A name for the BGP speaker.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networks")]
        private InputList<string>? _networks;

        /// <summary>
        /// A list of network IDs to associate with the BGP speaker.
        /// </summary>
        public InputList<string> Networks
        {
            get => _networks ?? (_networks = new InputList<string>());
            set => _networks = value;
        }

        [Input("peers")]
        private InputList<string>? _peers;

        /// <summary>
        /// A list of BGP peer IDs to associate with the BGP speaker.
        /// </summary>
        public InputList<string> Peers
        {
            get => _peers ?? (_peers = new InputList<string>());
            set => _peers = value;
        }

        /// <summary>
        /// The region in which to obtain the V2 Networking client.
        /// A Networking client is needed to create a Neutron network. If omitted, the
        /// `Region` argument of the provider is used. Changing this creates a new BGP
        /// speaker.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The tenant/project ID. Required if admin privileges
        /// are used. Changing this creates a new BGP speaker.
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        public BgpSpeakerV2State()
        {
        }
        public static new BgpSpeakerV2State Empty => new BgpSpeakerV2State();
    }
}
