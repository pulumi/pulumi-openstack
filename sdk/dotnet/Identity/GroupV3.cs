// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.OpenStack.Identity
{
    /// <summary>
    /// Manages a V3 group resource within OpenStack Keystone.
    /// 
    /// &gt; **Note:** You _must_ have admin privileges in your OpenStack cloud to use
    /// this resource.
    /// 
    /// ## Import
    /// 
    /// groups can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import openstack:identity/groupV3:GroupV3 group_1 89c60255-9bd6-460c-822a-e2b959ede9d2
    /// ```
    /// </summary>
    [OpenStackResourceType("openstack:identity/groupV3:GroupV3")]
    public partial class GroupV3 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A description of the group.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The domain the group belongs to.
        /// </summary>
        [Output("domainId")]
        public Output<string> DomainId { get; private set; } = null!;

        /// <summary>
        /// The name of the group.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The region in which to obtain the V3 Keystone client.
        /// If omitted, the `region` argument of the provider is used. Changing this
        /// creates a new group.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;


        /// <summary>
        /// Create a GroupV3 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GroupV3(string name, GroupV3Args? args = null, CustomResourceOptions? options = null)
            : base("openstack:identity/groupV3:GroupV3", name, args ?? new GroupV3Args(), MakeResourceOptions(options, ""))
        {
        }

        private GroupV3(string name, Input<string> id, GroupV3State? state = null, CustomResourceOptions? options = null)
            : base("openstack:identity/groupV3:GroupV3", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GroupV3 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GroupV3 Get(string name, Input<string> id, GroupV3State? state = null, CustomResourceOptions? options = null)
        {
            return new GroupV3(name, id, state, options);
        }
    }

    public sealed class GroupV3Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the group.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The domain the group belongs to.
        /// </summary>
        [Input("domainId")]
        public Input<string>? DomainId { get; set; }

        /// <summary>
        /// The name of the group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The region in which to obtain the V3 Keystone client.
        /// If omitted, the `region` argument of the provider is used. Changing this
        /// creates a new group.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GroupV3Args()
        {
        }
        public static new GroupV3Args Empty => new GroupV3Args();
    }

    public sealed class GroupV3State : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the group.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The domain the group belongs to.
        /// </summary>
        [Input("domainId")]
        public Input<string>? DomainId { get; set; }

        /// <summary>
        /// The name of the group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The region in which to obtain the V3 Keystone client.
        /// If omitted, the `region` argument of the provider is used. Changing this
        /// creates a new group.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GroupV3State()
        {
        }
        public static new GroupV3State Empty => new GroupV3State();
    }
}
