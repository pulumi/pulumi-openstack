// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.OpenStack.Identity
{
    /// <summary>
    /// Manages a V3 Limit resource within OpenStack Keystone.
    /// 
    /// &gt; **Note:** You _must_ have admin privileges in your OpenStack cloud to use
    /// this resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using OpenStack = Pulumi.OpenStack;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var glance = OpenStack.Identity.GetService.Invoke(new()
    ///     {
    ///         Name = "glance",
    ///     });
    /// 
    ///     var project1 = new OpenStack.Identity.Project("project_1", new()
    ///     {
    ///         Name = "project_1",
    ///     });
    /// 
    ///     var limit1 = new OpenStack.Identity.LimitV3("limit_1", new()
    ///     {
    ///         ProjectId = project1.Id,
    ///         ServiceId = glance.Apply(getServiceResult =&gt; getServiceResult.Id),
    ///         ResourceName = "image_count_total",
    ///         ResourceLimit = 10,
    ///         Description = "foo",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Limits can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import openstack:identity/limitV3:LimitV3 limit_1 89c60255-9bd6-460c-822a-e2b959ede9d2
    /// ```
    /// </summary>
    [OpenStackResourceType("openstack:identity/limitV3:LimitV3")]
    public partial class LimitV3 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Description of the limit.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The domain the limit applies to. Changing this
        /// creates a new Limit.
        /// </summary>
        [Output("domainId")]
        public Output<string> DomainId { get; private set; } = null!;

        /// <summary>
        /// The project the limit applies to. Changing this
        /// creates a new Limit.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The region in which to obtain the V3 Keystone client.
        /// If omitted, the `region` argument of the provider is used. Changing this
        /// creates a new Limit.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Integer for the actual limit.
        /// </summary>
        [Output("resourceLimit")]
        public Output<int> ResourceLimit { get; private set; } = null!;

        /// <summary>
        /// The resource that the limit applies to. Changing
        /// this creates a new Limit.
        /// </summary>
        [Output("resourceName")]
        public Output<string> ResourceName { get; private set; } = null!;

        /// <summary>
        /// The service the limit applies to. Changing this
        /// creates a new Limit.
        /// </summary>
        [Output("serviceId")]
        public Output<string> ServiceId { get; private set; } = null!;


        /// <summary>
        /// Create a LimitV3 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LimitV3(string name, LimitV3Args args, CustomResourceOptions? options = null)
            : base("openstack:identity/limitV3:LimitV3", name, args ?? new LimitV3Args(), MakeResourceOptions(options, ""))
        {
        }

        private LimitV3(string name, Input<string> id, LimitV3State? state = null, CustomResourceOptions? options = null)
            : base("openstack:identity/limitV3:LimitV3", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LimitV3 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LimitV3 Get(string name, Input<string> id, LimitV3State? state = null, CustomResourceOptions? options = null)
        {
            return new LimitV3(name, id, state, options);
        }
    }

    public sealed class LimitV3Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the limit.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The domain the limit applies to. Changing this
        /// creates a new Limit.
        /// </summary>
        [Input("domainId")]
        public Input<string>? DomainId { get; set; }

        /// <summary>
        /// The project the limit applies to. Changing this
        /// creates a new Limit.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The region in which to obtain the V3 Keystone client.
        /// If omitted, the `region` argument of the provider is used. Changing this
        /// creates a new Limit.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Integer for the actual limit.
        /// </summary>
        [Input("resourceLimit", required: true)]
        public Input<int> ResourceLimit { get; set; } = null!;

        /// <summary>
        /// The resource that the limit applies to. Changing
        /// this creates a new Limit.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        /// <summary>
        /// The service the limit applies to. Changing this
        /// creates a new Limit.
        /// </summary>
        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        public LimitV3Args()
        {
        }
        public static new LimitV3Args Empty => new LimitV3Args();
    }

    public sealed class LimitV3State : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the limit.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The domain the limit applies to. Changing this
        /// creates a new Limit.
        /// </summary>
        [Input("domainId")]
        public Input<string>? DomainId { get; set; }

        /// <summary>
        /// The project the limit applies to. Changing this
        /// creates a new Limit.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The region in which to obtain the V3 Keystone client.
        /// If omitted, the `region` argument of the provider is used. Changing this
        /// creates a new Limit.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Integer for the actual limit.
        /// </summary>
        [Input("resourceLimit")]
        public Input<int>? ResourceLimit { get; set; }

        /// <summary>
        /// The resource that the limit applies to. Changing
        /// this creates a new Limit.
        /// </summary>
        [Input("resourceName")]
        public Input<string>? ResourceName { get; set; }

        /// <summary>
        /// The service the limit applies to. Changing this
        /// creates a new Limit.
        /// </summary>
        [Input("serviceId")]
        public Input<string>? ServiceId { get; set; }

        public LimitV3State()
        {
        }
        public static new LimitV3State Empty => new LimitV3State();
    }
}
