// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.OpenStack.Firewall
{
    public static partial class Invokes
    {
        /// <summary>
        /// Use this data source to get firewall policy information of an available OpenStack firewall policy.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-openstack/blob/master/website/docs/d/fw_policy_v1.html.markdown.
        /// </summary>
        public static Task<GetPolicyResult> GetPolicy(GetPolicyArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPolicyResult>("openstack:firewall/getPolicy:getPolicy", args ?? ResourceArgs.Empty, options.WithVersion());
    }

    public sealed class GetPolicyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the firewall policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the firewall policy.
        /// </summary>
        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        /// <summary>
        /// The region in which to obtain the V2 Neutron client.
        /// A Neutron client is needed to retrieve firewall policy ids. If omitted, the
        /// `region` argument of the provider is used.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The owner of the firewall policy.
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        public GetPolicyArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetPolicyResult
    {
        /// <summary>
        /// The audit status of the firewall policy.
        /// </summary>
        public readonly bool Audited;
        /// <summary>
        /// The description of the firewall policy.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// See Argument Reference above.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// See Argument Reference above.
        /// </summary>
        public readonly string? PolicyId;
        /// <summary>
        /// See Argument Reference above.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// The array of one or more firewall rules that comprise the policy.
        /// </summary>
        public readonly ImmutableArray<string> Rules;
        /// <summary>
        /// The sharing status of the firewall policy.
        /// </summary>
        public readonly bool Shared;
        /// <summary>
        /// See Argument Reference above.
        /// </summary>
        public readonly string TenantId;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetPolicyResult(
            bool audited,
            string description,
            string? name,
            string? policyId,
            string region,
            ImmutableArray<string> rules,
            bool shared,
            string tenantId,
            string id)
        {
            Audited = audited;
            Description = description;
            Name = name;
            PolicyId = policyId;
            Region = region;
            Rules = rules;
            Shared = shared;
            TenantId = tenantId;
            Id = id;
        }
    }
}
