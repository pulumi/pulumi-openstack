// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.OpenStack.Dns
{
    /// <summary>
    /// Manages the sharing of a DNS zone in the OpenStack DNS Service.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using OpenStack = Pulumi.OpenStack;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new OpenStack.Dns.ZoneShareV2("example", new()
    ///     {
    ///         ZoneId = "00000000-0000-0000-0000-000000000000",
    ///         TargetProjectId = "11111111-1111-1111-1111-111111111111",
    ///         ProjectId = "22222222-2222-2222-2222-222222222222",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// DNS zone share can be imported by specifying the zone ID with share ID and optional project ID:
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import openstack:dns/zoneShareV2:ZoneShareV2 share_1 60cbdc69-64f9-49ee-b294-352e71e22827/0e1dae51-aee2-4b44-962f-885bb69f3a5c
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import openstack:dns/zoneShareV2:ZoneShareV2 share_1 60cbdc69-64f9-49ee-b294-352e71e22827/0e1dae51-aee2-4b44-962f-885bb69f3a5c/eb92139f6c054a878852ac9e8cbe612a
    /// ```
    /// </summary>
    [OpenStackResourceType("openstack:dns/zoneShareV2:ZoneShareV2")]
    public partial class ZoneShareV2 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the project DNS zone is created for, sets
        /// `X-Auth-Sudo-Tenant-ID` header (requires an assigned user role in target
        /// project).
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The region in which to obtain the V2 DNS client. If
        /// omitted, the `region` argument of the provider is used. Changing this creates
        /// a new DNS zone share.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The ID of the target project with which the
        /// DNS zone will be shared.
        /// </summary>
        [Output("targetProjectId")]
        public Output<string> TargetProjectId { get; private set; } = null!;

        /// <summary>
        /// The ID of the DNS zone to be shared.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a ZoneShareV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ZoneShareV2(string name, ZoneShareV2Args args, CustomResourceOptions? options = null)
            : base("openstack:dns/zoneShareV2:ZoneShareV2", name, args ?? new ZoneShareV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private ZoneShareV2(string name, Input<string> id, ZoneShareV2State? state = null, CustomResourceOptions? options = null)
            : base("openstack:dns/zoneShareV2:ZoneShareV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ZoneShareV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ZoneShareV2 Get(string name, Input<string> id, ZoneShareV2State? state = null, CustomResourceOptions? options = null)
        {
            return new ZoneShareV2(name, id, state, options);
        }
    }

    public sealed class ZoneShareV2Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the project DNS zone is created for, sets
        /// `X-Auth-Sudo-Tenant-ID` header (requires an assigned user role in target
        /// project).
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The region in which to obtain the V2 DNS client. If
        /// omitted, the `region` argument of the provider is used. Changing this creates
        /// a new DNS zone share.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The ID of the target project with which the
        /// DNS zone will be shared.
        /// </summary>
        [Input("targetProjectId", required: true)]
        public Input<string> TargetProjectId { get; set; } = null!;

        /// <summary>
        /// The ID of the DNS zone to be shared.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public ZoneShareV2Args()
        {
        }
        public static new ZoneShareV2Args Empty => new ZoneShareV2Args();
    }

    public sealed class ZoneShareV2State : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the project DNS zone is created for, sets
        /// `X-Auth-Sudo-Tenant-ID` header (requires an assigned user role in target
        /// project).
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The region in which to obtain the V2 DNS client. If
        /// omitted, the `region` argument of the provider is used. Changing this creates
        /// a new DNS zone share.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The ID of the target project with which the
        /// DNS zone will be shared.
        /// </summary>
        [Input("targetProjectId")]
        public Input<string>? TargetProjectId { get; set; }

        /// <summary>
        /// The ID of the DNS zone to be shared.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public ZoneShareV2State()
        {
        }
        public static new ZoneShareV2State Empty => new ZoneShareV2State();
    }
}
