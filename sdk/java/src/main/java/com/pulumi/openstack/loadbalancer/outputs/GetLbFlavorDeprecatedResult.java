// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.loadbalancer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLbFlavorDeprecatedResult {
    /**
     * @return The description of the flavor.
     * 
     */
    private String description;
    /**
     * @return Is the flavor enabled.
     * 
     */
    private Boolean enabled;
    /**
     * @return The ID of the flavor.
     * 
     */
    private String flavorId;
    /**
     * @return The ID of the flavor profile.
     * 
     */
    private String flavorProfileId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The name of the flavor.
     * 
     */
    private String name;
    private String region;

    private GetLbFlavorDeprecatedResult() {}
    /**
     * @return The description of the flavor.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Is the flavor enabled.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return The ID of the flavor.
     * 
     */
    public String flavorId() {
        return this.flavorId;
    }
    /**
     * @return The ID of the flavor profile.
     * 
     */
    public String flavorProfileId() {
        return this.flavorProfileId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the flavor.
     * 
     */
    public String name() {
        return this.name;
    }
    public String region() {
        return this.region;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLbFlavorDeprecatedResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private Boolean enabled;
        private String flavorId;
        private String flavorProfileId;
        private String id;
        private String name;
        private String region;
        public Builder() {}
        public Builder(GetLbFlavorDeprecatedResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.enabled = defaults.enabled;
    	      this.flavorId = defaults.flavorId;
    	      this.flavorProfileId = defaults.flavorProfileId;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.region = defaults.region;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetLbFlavorDeprecatedResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetLbFlavorDeprecatedResult", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder flavorId(String flavorId) {
            if (flavorId == null) {
              throw new MissingRequiredPropertyException("GetLbFlavorDeprecatedResult", "flavorId");
            }
            this.flavorId = flavorId;
            return this;
        }
        @CustomType.Setter
        public Builder flavorProfileId(String flavorProfileId) {
            if (flavorProfileId == null) {
              throw new MissingRequiredPropertyException("GetLbFlavorDeprecatedResult", "flavorProfileId");
            }
            this.flavorProfileId = flavorProfileId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLbFlavorDeprecatedResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetLbFlavorDeprecatedResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetLbFlavorDeprecatedResult", "region");
            }
            this.region = region;
            return this;
        }
        public GetLbFlavorDeprecatedResult build() {
            final var _resultValue = new GetLbFlavorDeprecatedResult();
            _resultValue.description = description;
            _resultValue.enabled = enabled;
            _resultValue.flavorId = flavorId;
            _resultValue.flavorProfileId = flavorProfileId;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.region = region;
            return _resultValue;
        }
    }
}
