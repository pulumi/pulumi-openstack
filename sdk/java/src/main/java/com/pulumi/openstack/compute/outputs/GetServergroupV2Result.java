// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.openstack.compute.outputs.GetServergroupV2Rule;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetServergroupV2Result {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The instances that are part of this server group.
     * 
     */
    private List<String> members;
    /**
     * @return Metadata of the server group.
     * 
     */
    private Map<String,String> metadata;
    /**
     * @return See Argument Reference above.
     * 
     */
    private String name;
    /**
     * @return Policy name associated with the server group.
     * 
     */
    private List<String> policies;
    /**
     * @return Project ID of the server group.
     * 
     */
    private String projectId;
    private String region;
    /**
     * @return Rules which are applied to specified policy.
     * 
     */
    private List<GetServergroupV2Rule> rules;
    /**
     * @return User ID of the server group.
     * 
     */
    private String userId;

    private GetServergroupV2Result() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The instances that are part of this server group.
     * 
     */
    public List<String> members() {
        return this.members;
    }
    /**
     * @return Metadata of the server group.
     * 
     */
    public Map<String,String> metadata() {
        return this.metadata;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Policy name associated with the server group.
     * 
     */
    public List<String> policies() {
        return this.policies;
    }
    /**
     * @return Project ID of the server group.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    public String region() {
        return this.region;
    }
    /**
     * @return Rules which are applied to specified policy.
     * 
     */
    public List<GetServergroupV2Rule> rules() {
        return this.rules;
    }
    /**
     * @return User ID of the server group.
     * 
     */
    public String userId() {
        return this.userId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServergroupV2Result defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<String> members;
        private Map<String,String> metadata;
        private String name;
        private List<String> policies;
        private String projectId;
        private String region;
        private List<GetServergroupV2Rule> rules;
        private String userId;
        public Builder() {}
        public Builder(GetServergroupV2Result defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.members = defaults.members;
    	      this.metadata = defaults.metadata;
    	      this.name = defaults.name;
    	      this.policies = defaults.policies;
    	      this.projectId = defaults.projectId;
    	      this.region = defaults.region;
    	      this.rules = defaults.rules;
    	      this.userId = defaults.userId;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetServergroupV2Result", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder members(List<String> members) {
            if (members == null) {
              throw new MissingRequiredPropertyException("GetServergroupV2Result", "members");
            }
            this.members = members;
            return this;
        }
        public Builder members(String... members) {
            return members(List.of(members));
        }
        @CustomType.Setter
        public Builder metadata(Map<String,String> metadata) {
            if (metadata == null) {
              throw new MissingRequiredPropertyException("GetServergroupV2Result", "metadata");
            }
            this.metadata = metadata;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetServergroupV2Result", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder policies(List<String> policies) {
            if (policies == null) {
              throw new MissingRequiredPropertyException("GetServergroupV2Result", "policies");
            }
            this.policies = policies;
            return this;
        }
        public Builder policies(String... policies) {
            return policies(List.of(policies));
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetServergroupV2Result", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetServergroupV2Result", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder rules(List<GetServergroupV2Rule> rules) {
            if (rules == null) {
              throw new MissingRequiredPropertyException("GetServergroupV2Result", "rules");
            }
            this.rules = rules;
            return this;
        }
        public Builder rules(GetServergroupV2Rule... rules) {
            return rules(List.of(rules));
        }
        @CustomType.Setter
        public Builder userId(String userId) {
            if (userId == null) {
              throw new MissingRequiredPropertyException("GetServergroupV2Result", "userId");
            }
            this.userId = userId;
            return this;
        }
        public GetServergroupV2Result build() {
            final var _resultValue = new GetServergroupV2Result();
            _resultValue.id = id;
            _resultValue.members = members;
            _resultValue.metadata = metadata;
            _resultValue.name = name;
            _resultValue.policies = policies;
            _resultValue.projectId = projectId;
            _resultValue.region = region;
            _resultValue.rules = rules;
            _resultValue.userId = userId;
            return _resultValue;
        }
    }
}
