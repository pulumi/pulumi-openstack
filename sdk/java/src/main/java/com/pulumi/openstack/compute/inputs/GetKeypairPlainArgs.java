// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.compute.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetKeypairPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetKeypairPlainArgs Empty = new GetKeypairPlainArgs();

    /**
     * The unique name of the keypair.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The unique name of the keypair.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The region in which to obtain the V2 Compute client.
     * If omitted, the `region` argument of the provider is used.
     * 
     */
    @Import(name="region")
    private @Nullable String region;

    /**
     * @return The region in which to obtain the V2 Compute client.
     * If omitted, the `region` argument of the provider is used.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The user id of the owner of the key pair.
     * This parameter can be specified only if the provider is configured to use
     * the credentials of an OpenStack administrator.
     * 
     */
    @Import(name="userId")
    private @Nullable String userId;

    /**
     * @return The user id of the owner of the key pair.
     * This parameter can be specified only if the provider is configured to use
     * the credentials of an OpenStack administrator.
     * 
     */
    public Optional<String> userId() {
        return Optional.ofNullable(this.userId);
    }

    private GetKeypairPlainArgs() {}

    private GetKeypairPlainArgs(GetKeypairPlainArgs $) {
        this.name = $.name;
        this.region = $.region;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetKeypairPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetKeypairPlainArgs $;

        public Builder() {
            $ = new GetKeypairPlainArgs();
        }

        public Builder(GetKeypairPlainArgs defaults) {
            $ = new GetKeypairPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The unique name of the keypair.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param region The region in which to obtain the V2 Compute client.
         * If omitted, the `region` argument of the provider is used.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable String region) {
            $.region = region;
            return this;
        }

        /**
         * @param userId The user id of the owner of the key pair.
         * This parameter can be specified only if the provider is configured to use
         * the credentials of an OpenStack administrator.
         * 
         * @return builder
         * 
         */
        public Builder userId(@Nullable String userId) {
            $.userId = userId;
            return this;
        }

        public GetKeypairPlainArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
