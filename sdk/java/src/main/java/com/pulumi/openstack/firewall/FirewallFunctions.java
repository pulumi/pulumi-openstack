// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.firewall;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.openstack.Utilities;
import com.pulumi.openstack.firewall.inputs.GetGroupV2Args;
import com.pulumi.openstack.firewall.inputs.GetGroupV2PlainArgs;
import com.pulumi.openstack.firewall.inputs.GetPolicyV2Args;
import com.pulumi.openstack.firewall.inputs.GetPolicyV2PlainArgs;
import com.pulumi.openstack.firewall.inputs.GetRuleV2Args;
import com.pulumi.openstack.firewall.inputs.GetRuleV2PlainArgs;
import com.pulumi.openstack.firewall.outputs.GetGroupV2Result;
import com.pulumi.openstack.firewall.outputs.GetPolicyV2Result;
import com.pulumi.openstack.firewall.outputs.GetRuleV2Result;
import java.util.concurrent.CompletableFuture;

public final class FirewallFunctions {
    /**
     * Use this data source to get information of an available OpenStack firewall group v2.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.openstack.firewall.FirewallFunctions;
     * import com.pulumi.openstack.firewall.inputs.GetGroupV2Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var group = FirewallFunctions.getGroupV2(GetGroupV2Args.builder()
     *             .name("tf_test_group")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGroupV2Result> getGroupV2() {
        return getGroupV2(GetGroupV2Args.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of an available OpenStack firewall group v2.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.openstack.firewall.FirewallFunctions;
     * import com.pulumi.openstack.firewall.inputs.GetGroupV2Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var group = FirewallFunctions.getGroupV2(GetGroupV2Args.builder()
     *             .name("tf_test_group")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetGroupV2Result> getGroupV2Plain() {
        return getGroupV2Plain(GetGroupV2PlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of an available OpenStack firewall group v2.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.openstack.firewall.FirewallFunctions;
     * import com.pulumi.openstack.firewall.inputs.GetGroupV2Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var group = FirewallFunctions.getGroupV2(GetGroupV2Args.builder()
     *             .name("tf_test_group")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGroupV2Result> getGroupV2(GetGroupV2Args args) {
        return getGroupV2(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of an available OpenStack firewall group v2.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.openstack.firewall.FirewallFunctions;
     * import com.pulumi.openstack.firewall.inputs.GetGroupV2Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var group = FirewallFunctions.getGroupV2(GetGroupV2Args.builder()
     *             .name("tf_test_group")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetGroupV2Result> getGroupV2Plain(GetGroupV2PlainArgs args) {
        return getGroupV2Plain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of an available OpenStack firewall group v2.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.openstack.firewall.FirewallFunctions;
     * import com.pulumi.openstack.firewall.inputs.GetGroupV2Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var group = FirewallFunctions.getGroupV2(GetGroupV2Args.builder()
     *             .name("tf_test_group")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGroupV2Result> getGroupV2(GetGroupV2Args args, InvokeOptions options) {
        return Deployment.getInstance().invoke("openstack:firewall/getGroupV2:getGroupV2", TypeShape.of(GetGroupV2Result.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information of an available OpenStack firewall group v2.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.openstack.firewall.FirewallFunctions;
     * import com.pulumi.openstack.firewall.inputs.GetGroupV2Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var group = FirewallFunctions.getGroupV2(GetGroupV2Args.builder()
     *             .name("tf_test_group")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGroupV2Result> getGroupV2(GetGroupV2Args args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("openstack:firewall/getGroupV2:getGroupV2", TypeShape.of(GetGroupV2Result.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information of an available OpenStack firewall group v2.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.openstack.firewall.FirewallFunctions;
     * import com.pulumi.openstack.firewall.inputs.GetGroupV2Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var group = FirewallFunctions.getGroupV2(GetGroupV2Args.builder()
     *             .name("tf_test_group")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetGroupV2Result> getGroupV2Plain(GetGroupV2PlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("openstack:firewall/getGroupV2:getGroupV2", TypeShape.of(GetGroupV2Result.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information of an available OpenStack firewall policy v2.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.openstack.firewall.FirewallFunctions;
     * import com.pulumi.openstack.firewall.inputs.GetPolicyV2Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = FirewallFunctions.getPolicyV2(GetPolicyV2Args.builder()
     *             .name("tf_test_policy")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPolicyV2Result> getPolicyV2() {
        return getPolicyV2(GetPolicyV2Args.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of an available OpenStack firewall policy v2.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.openstack.firewall.FirewallFunctions;
     * import com.pulumi.openstack.firewall.inputs.GetPolicyV2Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = FirewallFunctions.getPolicyV2(GetPolicyV2Args.builder()
     *             .name("tf_test_policy")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPolicyV2Result> getPolicyV2Plain() {
        return getPolicyV2Plain(GetPolicyV2PlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of an available OpenStack firewall policy v2.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.openstack.firewall.FirewallFunctions;
     * import com.pulumi.openstack.firewall.inputs.GetPolicyV2Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = FirewallFunctions.getPolicyV2(GetPolicyV2Args.builder()
     *             .name("tf_test_policy")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPolicyV2Result> getPolicyV2(GetPolicyV2Args args) {
        return getPolicyV2(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of an available OpenStack firewall policy v2.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.openstack.firewall.FirewallFunctions;
     * import com.pulumi.openstack.firewall.inputs.GetPolicyV2Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = FirewallFunctions.getPolicyV2(GetPolicyV2Args.builder()
     *             .name("tf_test_policy")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPolicyV2Result> getPolicyV2Plain(GetPolicyV2PlainArgs args) {
        return getPolicyV2Plain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of an available OpenStack firewall policy v2.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.openstack.firewall.FirewallFunctions;
     * import com.pulumi.openstack.firewall.inputs.GetPolicyV2Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = FirewallFunctions.getPolicyV2(GetPolicyV2Args.builder()
     *             .name("tf_test_policy")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPolicyV2Result> getPolicyV2(GetPolicyV2Args args, InvokeOptions options) {
        return Deployment.getInstance().invoke("openstack:firewall/getPolicyV2:getPolicyV2", TypeShape.of(GetPolicyV2Result.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information of an available OpenStack firewall policy v2.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.openstack.firewall.FirewallFunctions;
     * import com.pulumi.openstack.firewall.inputs.GetPolicyV2Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = FirewallFunctions.getPolicyV2(GetPolicyV2Args.builder()
     *             .name("tf_test_policy")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPolicyV2Result> getPolicyV2(GetPolicyV2Args args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("openstack:firewall/getPolicyV2:getPolicyV2", TypeShape.of(GetPolicyV2Result.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information of an available OpenStack firewall policy v2.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.openstack.firewall.FirewallFunctions;
     * import com.pulumi.openstack.firewall.inputs.GetPolicyV2Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = FirewallFunctions.getPolicyV2(GetPolicyV2Args.builder()
     *             .name("tf_test_policy")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPolicyV2Result> getPolicyV2Plain(GetPolicyV2PlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("openstack:firewall/getPolicyV2:getPolicyV2", TypeShape.of(GetPolicyV2Result.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information of an available OpenStack firewall rule v2.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.openstack.firewall.FirewallFunctions;
     * import com.pulumi.openstack.firewall.inputs.GetRuleV2Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var rule = FirewallFunctions.getRuleV2(GetRuleV2Args.builder()
     *             .name("tf_test_rule")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRuleV2Result> getRuleV2() {
        return getRuleV2(GetRuleV2Args.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of an available OpenStack firewall rule v2.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.openstack.firewall.FirewallFunctions;
     * import com.pulumi.openstack.firewall.inputs.GetRuleV2Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var rule = FirewallFunctions.getRuleV2(GetRuleV2Args.builder()
     *             .name("tf_test_rule")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRuleV2Result> getRuleV2Plain() {
        return getRuleV2Plain(GetRuleV2PlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of an available OpenStack firewall rule v2.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.openstack.firewall.FirewallFunctions;
     * import com.pulumi.openstack.firewall.inputs.GetRuleV2Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var rule = FirewallFunctions.getRuleV2(GetRuleV2Args.builder()
     *             .name("tf_test_rule")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRuleV2Result> getRuleV2(GetRuleV2Args args) {
        return getRuleV2(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of an available OpenStack firewall rule v2.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.openstack.firewall.FirewallFunctions;
     * import com.pulumi.openstack.firewall.inputs.GetRuleV2Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var rule = FirewallFunctions.getRuleV2(GetRuleV2Args.builder()
     *             .name("tf_test_rule")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRuleV2Result> getRuleV2Plain(GetRuleV2PlainArgs args) {
        return getRuleV2Plain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of an available OpenStack firewall rule v2.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.openstack.firewall.FirewallFunctions;
     * import com.pulumi.openstack.firewall.inputs.GetRuleV2Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var rule = FirewallFunctions.getRuleV2(GetRuleV2Args.builder()
     *             .name("tf_test_rule")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRuleV2Result> getRuleV2(GetRuleV2Args args, InvokeOptions options) {
        return Deployment.getInstance().invoke("openstack:firewall/getRuleV2:getRuleV2", TypeShape.of(GetRuleV2Result.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information of an available OpenStack firewall rule v2.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.openstack.firewall.FirewallFunctions;
     * import com.pulumi.openstack.firewall.inputs.GetRuleV2Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var rule = FirewallFunctions.getRuleV2(GetRuleV2Args.builder()
     *             .name("tf_test_rule")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRuleV2Result> getRuleV2(GetRuleV2Args args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("openstack:firewall/getRuleV2:getRuleV2", TypeShape.of(GetRuleV2Result.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information of an available OpenStack firewall rule v2.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.openstack.firewall.FirewallFunctions;
     * import com.pulumi.openstack.firewall.inputs.GetRuleV2Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var rule = FirewallFunctions.getRuleV2(GetRuleV2Args.builder()
     *             .name("tf_test_rule")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRuleV2Result> getRuleV2Plain(GetRuleV2PlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("openstack:firewall/getRuleV2:getRuleV2", TypeShape.of(GetRuleV2Result.class), args, Utilities.withVersion(options));
    }
}
