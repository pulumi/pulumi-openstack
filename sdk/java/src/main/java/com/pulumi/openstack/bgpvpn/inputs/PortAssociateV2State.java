// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.bgpvpn.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.openstack.bgpvpn.inputs.PortAssociateV2RouteArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PortAssociateV2State extends com.pulumi.resources.ResourceArgs {

    public static final PortAssociateV2State Empty = new PortAssociateV2State();

    /**
     * A boolean flag indicating whether fixed
     * IPs should be advertised. Defaults to true.
     * 
     */
    @Import(name="advertiseFixedIps")
    private @Nullable Output<Boolean> advertiseFixedIps;

    /**
     * @return A boolean flag indicating whether fixed
     * IPs should be advertised. Defaults to true.
     * 
     */
    public Optional<Output<Boolean>> advertiseFixedIps() {
        return Optional.ofNullable(this.advertiseFixedIps);
    }

    /**
     * The ID of the BGP VPN to which the port will be
     * associated. Changing this creates a new BGP VPN port association.
     * 
     */
    @Import(name="bgpvpnId")
    private @Nullable Output<String> bgpvpnId;

    /**
     * @return The ID of the BGP VPN to which the port will be
     * associated. Changing this creates a new BGP VPN port association.
     * 
     */
    public Optional<Output<String>> bgpvpnId() {
        return Optional.ofNullable(this.bgpvpnId);
    }

    /**
     * The ID of the port to be associated with the BGP VPN.
     * Changing this creates a new BGP VPN port association.
     * 
     */
    @Import(name="portId")
    private @Nullable Output<String> portId;

    /**
     * @return The ID of the port to be associated with the BGP VPN.
     * Changing this creates a new BGP VPN port association.
     * 
     */
    public Optional<Output<String>> portId() {
        return Optional.ofNullable(this.portId);
    }

    /**
     * The ID of the project that owns the port
     * association. Only administrative and users with `advsvc` role can specify a
     * project ID other than their own. Changing this creates a new BGP VPN port
     * association.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return The ID of the project that owns the port
     * association. Only administrative and users with `advsvc` role can specify a
     * project ID other than their own. Changing this creates a new BGP VPN port
     * association.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create a BGP VPN port association. If
     * omitted, the `region` argument of the provider is used. Changing this creates
     * a new BGP VPN port association.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create a BGP VPN port association. If
     * omitted, the `region` argument of the provider is used. Changing this creates
     * a new BGP VPN port association.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * A list of dictionaries containing the following keys:
     * 
     */
    @Import(name="routes")
    private @Nullable Output<List<PortAssociateV2RouteArgs>> routes;

    /**
     * @return A list of dictionaries containing the following keys:
     * 
     */
    public Optional<Output<List<PortAssociateV2RouteArgs>>> routes() {
        return Optional.ofNullable(this.routes);
    }

    private PortAssociateV2State() {}

    private PortAssociateV2State(PortAssociateV2State $) {
        this.advertiseFixedIps = $.advertiseFixedIps;
        this.bgpvpnId = $.bgpvpnId;
        this.portId = $.portId;
        this.projectId = $.projectId;
        this.region = $.region;
        this.routes = $.routes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PortAssociateV2State defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PortAssociateV2State $;

        public Builder() {
            $ = new PortAssociateV2State();
        }

        public Builder(PortAssociateV2State defaults) {
            $ = new PortAssociateV2State(Objects.requireNonNull(defaults));
        }

        /**
         * @param advertiseFixedIps A boolean flag indicating whether fixed
         * IPs should be advertised. Defaults to true.
         * 
         * @return builder
         * 
         */
        public Builder advertiseFixedIps(@Nullable Output<Boolean> advertiseFixedIps) {
            $.advertiseFixedIps = advertiseFixedIps;
            return this;
        }

        /**
         * @param advertiseFixedIps A boolean flag indicating whether fixed
         * IPs should be advertised. Defaults to true.
         * 
         * @return builder
         * 
         */
        public Builder advertiseFixedIps(Boolean advertiseFixedIps) {
            return advertiseFixedIps(Output.of(advertiseFixedIps));
        }

        /**
         * @param bgpvpnId The ID of the BGP VPN to which the port will be
         * associated. Changing this creates a new BGP VPN port association.
         * 
         * @return builder
         * 
         */
        public Builder bgpvpnId(@Nullable Output<String> bgpvpnId) {
            $.bgpvpnId = bgpvpnId;
            return this;
        }

        /**
         * @param bgpvpnId The ID of the BGP VPN to which the port will be
         * associated. Changing this creates a new BGP VPN port association.
         * 
         * @return builder
         * 
         */
        public Builder bgpvpnId(String bgpvpnId) {
            return bgpvpnId(Output.of(bgpvpnId));
        }

        /**
         * @param portId The ID of the port to be associated with the BGP VPN.
         * Changing this creates a new BGP VPN port association.
         * 
         * @return builder
         * 
         */
        public Builder portId(@Nullable Output<String> portId) {
            $.portId = portId;
            return this;
        }

        /**
         * @param portId The ID of the port to be associated with the BGP VPN.
         * Changing this creates a new BGP VPN port association.
         * 
         * @return builder
         * 
         */
        public Builder portId(String portId) {
            return portId(Output.of(portId));
        }

        /**
         * @param projectId The ID of the project that owns the port
         * association. Only administrative and users with `advsvc` role can specify a
         * project ID other than their own. Changing this creates a new BGP VPN port
         * association.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The ID of the project that owns the port
         * association. Only administrative and users with `advsvc` role can specify a
         * project ID other than their own. Changing this creates a new BGP VPN port
         * association.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param region The region in which to obtain the V2 Networking client.
         * A Networking client is needed to create a BGP VPN port association. If
         * omitted, the `region` argument of the provider is used. Changing this creates
         * a new BGP VPN port association.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region in which to obtain the V2 Networking client.
         * A Networking client is needed to create a BGP VPN port association. If
         * omitted, the `region` argument of the provider is used. Changing this creates
         * a new BGP VPN port association.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param routes A list of dictionaries containing the following keys:
         * 
         * @return builder
         * 
         */
        public Builder routes(@Nullable Output<List<PortAssociateV2RouteArgs>> routes) {
            $.routes = routes;
            return this;
        }

        /**
         * @param routes A list of dictionaries containing the following keys:
         * 
         * @return builder
         * 
         */
        public Builder routes(List<PortAssociateV2RouteArgs> routes) {
            return routes(Output.of(routes));
        }

        /**
         * @param routes A list of dictionaries containing the following keys:
         * 
         * @return builder
         * 
         */
        public Builder routes(PortAssociateV2RouteArgs... routes) {
            return routes(List.of(routes));
        }

        public PortAssociateV2State build() {
            return $;
        }
    }

}
