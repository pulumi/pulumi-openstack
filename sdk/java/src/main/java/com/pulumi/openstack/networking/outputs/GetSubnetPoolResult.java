// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.networking.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetSubnetPoolResult {
    /**
     * @return See Argument Reference above.
     * 
     */
    private String addressScopeId;
    /**
     * @return The set of string tags applied on the subnetpool.
     * 
     */
    private List<String> allTags;
    /**
     * @return The time at which subnetpool was created.
     * 
     */
    private String createdAt;
    /**
     * @return See Argument Reference above.
     * 
     */
    private Integer defaultPrefixlen;
    /**
     * @return See Argument Reference above.
     * 
     */
    private Integer defaultQuota;
    /**
     * @return See Argument Reference above.
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The IP protocol version.
     * 
     */
    private Integer ipVersion;
    /**
     * @return See Argument Reference above.
     * 
     */
    private Boolean isDefault;
    /**
     * @return See Argument Reference above.
     * 
     */
    private Integer maxPrefixlen;
    /**
     * @return See Argument Reference above.
     * 
     */
    private Integer minPrefixlen;
    /**
     * @return See Argument Reference above.
     * 
     */
    private String name;
    /**
     * @return See Argument Reference above.
     * 
     */
    private List<String> prefixes;
    /**
     * @return See Argument Reference above.
     * 
     */
    private String projectId;
    /**
     * @return See Argument Reference above.
     * 
     */
    private String region;
    /**
     * @return The revision number of the subnetpool.
     * 
     */
    private Integer revisionNumber;
    /**
     * @return See Argument Reference above.
     * 
     */
    private Boolean shared;
    private @Nullable List<String> tags;
    /**
     * @return The time at which subnetpool was created.
     * 
     */
    private String updatedAt;

    private GetSubnetPoolResult() {}
    /**
     * @return See Argument Reference above.
     * 
     */
    public String addressScopeId() {
        return this.addressScopeId;
    }
    /**
     * @return The set of string tags applied on the subnetpool.
     * 
     */
    public List<String> allTags() {
        return this.allTags;
    }
    /**
     * @return The time at which subnetpool was created.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public Integer defaultPrefixlen() {
        return this.defaultPrefixlen;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public Integer defaultQuota() {
        return this.defaultQuota;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The IP protocol version.
     * 
     */
    public Integer ipVersion() {
        return this.ipVersion;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public Boolean isDefault() {
        return this.isDefault;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public Integer maxPrefixlen() {
        return this.maxPrefixlen;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public Integer minPrefixlen() {
        return this.minPrefixlen;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public List<String> prefixes() {
        return this.prefixes;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return The revision number of the subnetpool.
     * 
     */
    public Integer revisionNumber() {
        return this.revisionNumber;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public Boolean shared() {
        return this.shared;
    }
    public List<String> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return The time at which subnetpool was created.
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubnetPoolResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String addressScopeId;
        private List<String> allTags;
        private String createdAt;
        private Integer defaultPrefixlen;
        private Integer defaultQuota;
        private String description;
        private String id;
        private Integer ipVersion;
        private Boolean isDefault;
        private Integer maxPrefixlen;
        private Integer minPrefixlen;
        private String name;
        private List<String> prefixes;
        private String projectId;
        private String region;
        private Integer revisionNumber;
        private Boolean shared;
        private @Nullable List<String> tags;
        private String updatedAt;
        public Builder() {}
        public Builder(GetSubnetPoolResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressScopeId = defaults.addressScopeId;
    	      this.allTags = defaults.allTags;
    	      this.createdAt = defaults.createdAt;
    	      this.defaultPrefixlen = defaults.defaultPrefixlen;
    	      this.defaultQuota = defaults.defaultQuota;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.ipVersion = defaults.ipVersion;
    	      this.isDefault = defaults.isDefault;
    	      this.maxPrefixlen = defaults.maxPrefixlen;
    	      this.minPrefixlen = defaults.minPrefixlen;
    	      this.name = defaults.name;
    	      this.prefixes = defaults.prefixes;
    	      this.projectId = defaults.projectId;
    	      this.region = defaults.region;
    	      this.revisionNumber = defaults.revisionNumber;
    	      this.shared = defaults.shared;
    	      this.tags = defaults.tags;
    	      this.updatedAt = defaults.updatedAt;
        }

        @CustomType.Setter
        public Builder addressScopeId(String addressScopeId) {
            this.addressScopeId = Objects.requireNonNull(addressScopeId);
            return this;
        }
        @CustomType.Setter
        public Builder allTags(List<String> allTags) {
            this.allTags = Objects.requireNonNull(allTags);
            return this;
        }
        public Builder allTags(String... allTags) {
            return allTags(List.of(allTags));
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        @CustomType.Setter
        public Builder defaultPrefixlen(Integer defaultPrefixlen) {
            this.defaultPrefixlen = Objects.requireNonNull(defaultPrefixlen);
            return this;
        }
        @CustomType.Setter
        public Builder defaultQuota(Integer defaultQuota) {
            this.defaultQuota = Objects.requireNonNull(defaultQuota);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ipVersion(Integer ipVersion) {
            this.ipVersion = Objects.requireNonNull(ipVersion);
            return this;
        }
        @CustomType.Setter
        public Builder isDefault(Boolean isDefault) {
            this.isDefault = Objects.requireNonNull(isDefault);
            return this;
        }
        @CustomType.Setter
        public Builder maxPrefixlen(Integer maxPrefixlen) {
            this.maxPrefixlen = Objects.requireNonNull(maxPrefixlen);
            return this;
        }
        @CustomType.Setter
        public Builder minPrefixlen(Integer minPrefixlen) {
            this.minPrefixlen = Objects.requireNonNull(minPrefixlen);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder prefixes(List<String> prefixes) {
            this.prefixes = Objects.requireNonNull(prefixes);
            return this;
        }
        public Builder prefixes(String... prefixes) {
            return prefixes(List.of(prefixes));
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        @CustomType.Setter
        public Builder revisionNumber(Integer revisionNumber) {
            this.revisionNumber = Objects.requireNonNull(revisionNumber);
            return this;
        }
        @CustomType.Setter
        public Builder shared(Boolean shared) {
            this.shared = Objects.requireNonNull(shared);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            this.updatedAt = Objects.requireNonNull(updatedAt);
            return this;
        }
        public GetSubnetPoolResult build() {
            final var _resultValue = new GetSubnetPoolResult();
            _resultValue.addressScopeId = addressScopeId;
            _resultValue.allTags = allTags;
            _resultValue.createdAt = createdAt;
            _resultValue.defaultPrefixlen = defaultPrefixlen;
            _resultValue.defaultQuota = defaultQuota;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.ipVersion = ipVersion;
            _resultValue.isDefault = isDefault;
            _resultValue.maxPrefixlen = maxPrefixlen;
            _resultValue.minPrefixlen = minPrefixlen;
            _resultValue.name = name;
            _resultValue.prefixes = prefixes;
            _resultValue.projectId = projectId;
            _resultValue.region = region;
            _resultValue.revisionNumber = revisionNumber;
            _resultValue.shared = shared;
            _resultValue.tags = tags;
            _resultValue.updatedAt = updatedAt;
            return _resultValue;
        }
    }
}
