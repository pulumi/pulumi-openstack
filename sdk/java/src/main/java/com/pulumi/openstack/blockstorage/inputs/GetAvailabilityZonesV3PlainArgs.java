// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.blockstorage.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAvailabilityZonesV3PlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAvailabilityZonesV3PlainArgs Empty = new GetAvailabilityZonesV3PlainArgs();

    /**
     * The region in which to obtain the Block Storage client.
     * If omitted, the `region` argument of the provider is used.
     * 
     */
    @Import(name="region")
    private @Nullable String region;

    /**
     * @return The region in which to obtain the Block Storage client.
     * If omitted, the `region` argument of the provider is used.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The `state` of the availability zones to match. Can
     * either be `available` or `unavailable`. Default is `available`.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return The `state` of the availability zones to match. Can
     * either be `available` or `unavailable`. Default is `available`.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private GetAvailabilityZonesV3PlainArgs() {}

    private GetAvailabilityZonesV3PlainArgs(GetAvailabilityZonesV3PlainArgs $) {
        this.region = $.region;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAvailabilityZonesV3PlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAvailabilityZonesV3PlainArgs $;

        public Builder() {
            $ = new GetAvailabilityZonesV3PlainArgs();
        }

        public Builder(GetAvailabilityZonesV3PlainArgs defaults) {
            $ = new GetAvailabilityZonesV3PlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param region The region in which to obtain the Block Storage client.
         * If omitted, the `region` argument of the provider is used.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable String region) {
            $.region = region;
            return this;
        }

        /**
         * @param state The `state` of the availability zones to match. Can
         * either be `available` or `unavailable`. Default is `available`.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public GetAvailabilityZonesV3PlainArgs build() {
            return $;
        }
    }

}
