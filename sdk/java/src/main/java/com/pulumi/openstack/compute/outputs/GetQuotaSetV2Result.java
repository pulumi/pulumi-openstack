// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetQuotaSetV2Result {
    /**
     * @return The number of allowed server cores.
     * 
     */
    private Integer cores;
    /**
     * @return The number of allowed fixed IP addresses. Available until version 2.35.
     * 
     */
    private Integer fixedIps;
    /**
     * @return The number of allowed floating IP addresses. Available until version 2.35.
     * 
     */
    private Integer floatingIps;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The number of allowed bytes of content for each injected file. Available until version 2.56.
     * 
     */
    private Integer injectedFileContentBytes;
    /**
     * @return The number of allowed bytes for each injected file path. Available until version 2.56.
     * 
     */
    private Integer injectedFilePathBytes;
    /**
     * @return The number of allowed injected files. Available until version 2.56.
     * 
     */
    private Integer injectedFiles;
    /**
     * @return The number of allowed servers.
     * 
     */
    private Integer instances;
    /**
     * @return The number of allowed key pairs for each user.
     * 
     */
    private Integer keyPairs;
    /**
     * @return The number of allowed metadata items for each server.
     * 
     */
    private Integer metadataItems;
    /**
     * @return See Argument Reference above.
     * 
     */
    private String projectId;
    /**
     * @return The amount of allowed server RAM, in MiB.
     * 
     */
    private Integer ram;
    /**
     * @return See Argument Reference above.
     * 
     */
    private String region;
    /**
     * @return The number of allowed rules for each security group. Available until version 2.35.
     * 
     */
    private Integer securityGroupRules;
    /**
     * @return The number of allowed security groups. Available until version 2.35.
     * 
     */
    private Integer securityGroups;
    /**
     * @return The number of allowed members for each server group.
     * 
     */
    private Integer serverGroupMembers;
    /**
     * @return The number of allowed server groups.
     * 
     */
    private Integer serverGroups;

    private GetQuotaSetV2Result() {}
    /**
     * @return The number of allowed server cores.
     * 
     */
    public Integer cores() {
        return this.cores;
    }
    /**
     * @return The number of allowed fixed IP addresses. Available until version 2.35.
     * 
     */
    public Integer fixedIps() {
        return this.fixedIps;
    }
    /**
     * @return The number of allowed floating IP addresses. Available until version 2.35.
     * 
     */
    public Integer floatingIps() {
        return this.floatingIps;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The number of allowed bytes of content for each injected file. Available until version 2.56.
     * 
     */
    public Integer injectedFileContentBytes() {
        return this.injectedFileContentBytes;
    }
    /**
     * @return The number of allowed bytes for each injected file path. Available until version 2.56.
     * 
     */
    public Integer injectedFilePathBytes() {
        return this.injectedFilePathBytes;
    }
    /**
     * @return The number of allowed injected files. Available until version 2.56.
     * 
     */
    public Integer injectedFiles() {
        return this.injectedFiles;
    }
    /**
     * @return The number of allowed servers.
     * 
     */
    public Integer instances() {
        return this.instances;
    }
    /**
     * @return The number of allowed key pairs for each user.
     * 
     */
    public Integer keyPairs() {
        return this.keyPairs;
    }
    /**
     * @return The number of allowed metadata items for each server.
     * 
     */
    public Integer metadataItems() {
        return this.metadataItems;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return The amount of allowed server RAM, in MiB.
     * 
     */
    public Integer ram() {
        return this.ram;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return The number of allowed rules for each security group. Available until version 2.35.
     * 
     */
    public Integer securityGroupRules() {
        return this.securityGroupRules;
    }
    /**
     * @return The number of allowed security groups. Available until version 2.35.
     * 
     */
    public Integer securityGroups() {
        return this.securityGroups;
    }
    /**
     * @return The number of allowed members for each server group.
     * 
     */
    public Integer serverGroupMembers() {
        return this.serverGroupMembers;
    }
    /**
     * @return The number of allowed server groups.
     * 
     */
    public Integer serverGroups() {
        return this.serverGroups;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetQuotaSetV2Result defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer cores;
        private Integer fixedIps;
        private Integer floatingIps;
        private String id;
        private Integer injectedFileContentBytes;
        private Integer injectedFilePathBytes;
        private Integer injectedFiles;
        private Integer instances;
        private Integer keyPairs;
        private Integer metadataItems;
        private String projectId;
        private Integer ram;
        private String region;
        private Integer securityGroupRules;
        private Integer securityGroups;
        private Integer serverGroupMembers;
        private Integer serverGroups;
        public Builder() {}
        public Builder(GetQuotaSetV2Result defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cores = defaults.cores;
    	      this.fixedIps = defaults.fixedIps;
    	      this.floatingIps = defaults.floatingIps;
    	      this.id = defaults.id;
    	      this.injectedFileContentBytes = defaults.injectedFileContentBytes;
    	      this.injectedFilePathBytes = defaults.injectedFilePathBytes;
    	      this.injectedFiles = defaults.injectedFiles;
    	      this.instances = defaults.instances;
    	      this.keyPairs = defaults.keyPairs;
    	      this.metadataItems = defaults.metadataItems;
    	      this.projectId = defaults.projectId;
    	      this.ram = defaults.ram;
    	      this.region = defaults.region;
    	      this.securityGroupRules = defaults.securityGroupRules;
    	      this.securityGroups = defaults.securityGroups;
    	      this.serverGroupMembers = defaults.serverGroupMembers;
    	      this.serverGroups = defaults.serverGroups;
        }

        @CustomType.Setter
        public Builder cores(Integer cores) {
            this.cores = Objects.requireNonNull(cores);
            return this;
        }
        @CustomType.Setter
        public Builder fixedIps(Integer fixedIps) {
            this.fixedIps = Objects.requireNonNull(fixedIps);
            return this;
        }
        @CustomType.Setter
        public Builder floatingIps(Integer floatingIps) {
            this.floatingIps = Objects.requireNonNull(floatingIps);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder injectedFileContentBytes(Integer injectedFileContentBytes) {
            this.injectedFileContentBytes = Objects.requireNonNull(injectedFileContentBytes);
            return this;
        }
        @CustomType.Setter
        public Builder injectedFilePathBytes(Integer injectedFilePathBytes) {
            this.injectedFilePathBytes = Objects.requireNonNull(injectedFilePathBytes);
            return this;
        }
        @CustomType.Setter
        public Builder injectedFiles(Integer injectedFiles) {
            this.injectedFiles = Objects.requireNonNull(injectedFiles);
            return this;
        }
        @CustomType.Setter
        public Builder instances(Integer instances) {
            this.instances = Objects.requireNonNull(instances);
            return this;
        }
        @CustomType.Setter
        public Builder keyPairs(Integer keyPairs) {
            this.keyPairs = Objects.requireNonNull(keyPairs);
            return this;
        }
        @CustomType.Setter
        public Builder metadataItems(Integer metadataItems) {
            this.metadataItems = Objects.requireNonNull(metadataItems);
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder ram(Integer ram) {
            this.ram = Objects.requireNonNull(ram);
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupRules(Integer securityGroupRules) {
            this.securityGroupRules = Objects.requireNonNull(securityGroupRules);
            return this;
        }
        @CustomType.Setter
        public Builder securityGroups(Integer securityGroups) {
            this.securityGroups = Objects.requireNonNull(securityGroups);
            return this;
        }
        @CustomType.Setter
        public Builder serverGroupMembers(Integer serverGroupMembers) {
            this.serverGroupMembers = Objects.requireNonNull(serverGroupMembers);
            return this;
        }
        @CustomType.Setter
        public Builder serverGroups(Integer serverGroups) {
            this.serverGroups = Objects.requireNonNull(serverGroups);
            return this;
        }
        public GetQuotaSetV2Result build() {
            final var _resultValue = new GetQuotaSetV2Result();
            _resultValue.cores = cores;
            _resultValue.fixedIps = fixedIps;
            _resultValue.floatingIps = floatingIps;
            _resultValue.id = id;
            _resultValue.injectedFileContentBytes = injectedFileContentBytes;
            _resultValue.injectedFilePathBytes = injectedFilePathBytes;
            _resultValue.injectedFiles = injectedFiles;
            _resultValue.instances = instances;
            _resultValue.keyPairs = keyPairs;
            _resultValue.metadataItems = metadataItems;
            _resultValue.projectId = projectId;
            _resultValue.ram = ram;
            _resultValue.region = region;
            _resultValue.securityGroupRules = securityGroupRules;
            _resultValue.securityGroups = securityGroups;
            _resultValue.serverGroupMembers = serverGroupMembers;
            _resultValue.serverGroups = serverGroups;
            return _resultValue;
        }
    }
}
