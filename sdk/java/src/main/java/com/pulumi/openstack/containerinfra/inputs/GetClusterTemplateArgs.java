// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.containerinfra.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetClusterTemplateArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetClusterTemplateArgs Empty = new GetClusterTemplateArgs();

    /**
     * The name of the cluster template.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the cluster template.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The region in which to obtain the V1 Container Infra
     * client.
     * If omitted, the `region` argument of the provider is used.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region in which to obtain the V1 Container Infra
     * client.
     * If omitted, the `region` argument of the provider is used.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private GetClusterTemplateArgs() {}

    private GetClusterTemplateArgs(GetClusterTemplateArgs $) {
        this.name = $.name;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetClusterTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetClusterTemplateArgs $;

        public Builder() {
            $ = new GetClusterTemplateArgs();
        }

        public Builder(GetClusterTemplateArgs defaults) {
            $ = new GetClusterTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the cluster template.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the cluster template.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param region The region in which to obtain the V1 Container Infra
         * client.
         * If omitted, the `region` argument of the provider is used.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region in which to obtain the V1 Container Infra
         * client.
         * If omitted, the `region` argument of the provider is used.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public GetClusterTemplateArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetClusterTemplateArgs", "name");
            }
            return $;
        }
    }

}
