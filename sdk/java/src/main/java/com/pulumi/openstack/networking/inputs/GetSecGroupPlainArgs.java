// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.networking.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSecGroupPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSecGroupPlainArgs Empty = new GetSecGroupPlainArgs();

    /**
     * Human-readable description the the subnet.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return Human-readable description the the subnet.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the security group.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The name of the security group.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The region in which to obtain the V2 Neutron client.
     * A Neutron client is needed to retrieve security groups ids. If omitted, the
     * `region` argument of the provider is used.
     * 
     */
    @Import(name="region")
    private @Nullable String region;

    /**
     * @return The region in which to obtain the V2 Neutron client.
     * A Neutron client is needed to retrieve security groups ids. If omitted, the
     * `region` argument of the provider is used.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The ID of the security group.
     * 
     */
    @Import(name="secgroupId")
    private @Nullable String secgroupId;

    /**
     * @return The ID of the security group.
     * 
     */
    public Optional<String> secgroupId() {
        return Optional.ofNullable(this.secgroupId);
    }

    /**
     * Whether the security group is stateful or not.
     * 
     */
    @Import(name="stateful")
    private @Nullable Boolean stateful;

    /**
     * @return Whether the security group is stateful or not.
     * 
     */
    public Optional<Boolean> stateful() {
        return Optional.ofNullable(this.stateful);
    }

    /**
     * The list of security group tags to filter.
     * 
     */
    @Import(name="tags")
    private @Nullable List<String> tags;

    /**
     * @return The list of security group tags to filter.
     * 
     */
    public Optional<List<String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The owner of the security group.
     * 
     */
    @Import(name="tenantId")
    private @Nullable String tenantId;

    /**
     * @return The owner of the security group.
     * 
     */
    public Optional<String> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    private GetSecGroupPlainArgs() {}

    private GetSecGroupPlainArgs(GetSecGroupPlainArgs $) {
        this.description = $.description;
        this.name = $.name;
        this.region = $.region;
        this.secgroupId = $.secgroupId;
        this.stateful = $.stateful;
        this.tags = $.tags;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecGroupPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecGroupPlainArgs $;

        public Builder() {
            $ = new GetSecGroupPlainArgs();
        }

        public Builder(GetSecGroupPlainArgs defaults) {
            $ = new GetSecGroupPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Human-readable description the the subnet.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param name The name of the security group.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param region The region in which to obtain the V2 Neutron client.
         * A Neutron client is needed to retrieve security groups ids. If omitted, the
         * `region` argument of the provider is used.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable String region) {
            $.region = region;
            return this;
        }

        /**
         * @param secgroupId The ID of the security group.
         * 
         * @return builder
         * 
         */
        public Builder secgroupId(@Nullable String secgroupId) {
            $.secgroupId = secgroupId;
            return this;
        }

        /**
         * @param stateful Whether the security group is stateful or not.
         * 
         * @return builder
         * 
         */
        public Builder stateful(@Nullable Boolean stateful) {
            $.stateful = stateful;
            return this;
        }

        /**
         * @param tags The list of security group tags to filter.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable List<String> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The list of security group tags to filter.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param tenantId The owner of the security group.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable String tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        public GetSecGroupPlainArgs build() {
            return $;
        }
    }

}
