// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.networking.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PortSecGroupAssociateState extends com.pulumi.resources.ResourceArgs {

    public static final PortSecGroupAssociateState Empty = new PortSecGroupAssociateState();

    /**
     * The collection of Security Group IDs on the port
     * which have been explicitly and implicitly added.
     * 
     */
    @Import(name="allSecurityGroupIds")
    private @Nullable Output<List<String>> allSecurityGroupIds;

    /**
     * @return The collection of Security Group IDs on the port
     * which have been explicitly and implicitly added.
     * 
     */
    public Optional<Output<List<String>>> allSecurityGroupIds() {
        return Optional.ofNullable(this.allSecurityGroupIds);
    }

    /**
     * Whether to replace or append the list of security
     * groups, specified in the `security_group_ids`. Defaults to `false`.
     * 
     */
    @Import(name="enforce")
    private @Nullable Output<Boolean> enforce;

    /**
     * @return Whether to replace or append the list of security
     * groups, specified in the `security_group_ids`. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> enforce() {
        return Optional.ofNullable(this.enforce);
    }

    /**
     * An UUID of the port to apply security groups to.
     * 
     */
    @Import(name="portId")
    private @Nullable Output<String> portId;

    /**
     * @return An UUID of the port to apply security groups to.
     * 
     */
    public Optional<Output<String>> portId() {
        return Optional.ofNullable(this.portId);
    }

    /**
     * The region in which to obtain the V2 networking client.
     * A networking client is needed to manage a port. If omitted, the
     * `region` argument of the provider is used. Changing this creates a new
     * resource.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region in which to obtain the V2 networking client.
     * A networking client is needed to manage a port. If omitted, the
     * `region` argument of the provider is used. Changing this creates a new
     * resource.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * A list of security group IDs to apply to
     * the port. The security groups must be specified by ID and not name (as
     * opposed to how they are configured with the Compute Instance).
     * 
     */
    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    /**
     * @return A list of security group IDs to apply to
     * the port. The security groups must be specified by ID and not name (as
     * opposed to how they are configured with the Compute Instance).
     * 
     */
    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    private PortSecGroupAssociateState() {}

    private PortSecGroupAssociateState(PortSecGroupAssociateState $) {
        this.allSecurityGroupIds = $.allSecurityGroupIds;
        this.enforce = $.enforce;
        this.portId = $.portId;
        this.region = $.region;
        this.securityGroupIds = $.securityGroupIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PortSecGroupAssociateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PortSecGroupAssociateState $;

        public Builder() {
            $ = new PortSecGroupAssociateState();
        }

        public Builder(PortSecGroupAssociateState defaults) {
            $ = new PortSecGroupAssociateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param allSecurityGroupIds The collection of Security Group IDs on the port
         * which have been explicitly and implicitly added.
         * 
         * @return builder
         * 
         */
        public Builder allSecurityGroupIds(@Nullable Output<List<String>> allSecurityGroupIds) {
            $.allSecurityGroupIds = allSecurityGroupIds;
            return this;
        }

        /**
         * @param allSecurityGroupIds The collection of Security Group IDs on the port
         * which have been explicitly and implicitly added.
         * 
         * @return builder
         * 
         */
        public Builder allSecurityGroupIds(List<String> allSecurityGroupIds) {
            return allSecurityGroupIds(Output.of(allSecurityGroupIds));
        }

        /**
         * @param allSecurityGroupIds The collection of Security Group IDs on the port
         * which have been explicitly and implicitly added.
         * 
         * @return builder
         * 
         */
        public Builder allSecurityGroupIds(String... allSecurityGroupIds) {
            return allSecurityGroupIds(List.of(allSecurityGroupIds));
        }

        /**
         * @param enforce Whether to replace or append the list of security
         * groups, specified in the `security_group_ids`. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder enforce(@Nullable Output<Boolean> enforce) {
            $.enforce = enforce;
            return this;
        }

        /**
         * @param enforce Whether to replace or append the list of security
         * groups, specified in the `security_group_ids`. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder enforce(Boolean enforce) {
            return enforce(Output.of(enforce));
        }

        /**
         * @param portId An UUID of the port to apply security groups to.
         * 
         * @return builder
         * 
         */
        public Builder portId(@Nullable Output<String> portId) {
            $.portId = portId;
            return this;
        }

        /**
         * @param portId An UUID of the port to apply security groups to.
         * 
         * @return builder
         * 
         */
        public Builder portId(String portId) {
            return portId(Output.of(portId));
        }

        /**
         * @param region The region in which to obtain the V2 networking client.
         * A networking client is needed to manage a port. If omitted, the
         * `region` argument of the provider is used. Changing this creates a new
         * resource.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region in which to obtain the V2 networking client.
         * A networking client is needed to manage a port. If omitted, the
         * `region` argument of the provider is used. Changing this creates a new
         * resource.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param securityGroupIds A list of security group IDs to apply to
         * the port. The security groups must be specified by ID and not name (as
         * opposed to how they are configured with the Compute Instance).
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        /**
         * @param securityGroupIds A list of security group IDs to apply to
         * the port. The security groups must be specified by ID and not name (as
         * opposed to how they are configured with the Compute Instance).
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        /**
         * @param securityGroupIds A list of security group IDs to apply to
         * the port. The security groups must be specified by ID and not name (as
         * opposed to how they are configured with the Compute Instance).
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        public PortSecGroupAssociateState build() {
            return $;
        }
    }

}
