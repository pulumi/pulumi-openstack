// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAvailabilityZonesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAvailabilityZonesArgs Empty = new GetAvailabilityZonesArgs();

    /**
     * The `region` to fetch availability zones from, defaults to the provider&#39;s `region`
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The `region` to fetch availability zones from, defaults to the provider&#39;s `region`
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The `state` of the availability zones to match, default (&#34;available&#34;).
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The `state` of the availability zones to match, default (&#34;available&#34;).
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private GetAvailabilityZonesArgs() {}

    private GetAvailabilityZonesArgs(GetAvailabilityZonesArgs $) {
        this.region = $.region;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAvailabilityZonesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAvailabilityZonesArgs $;

        public Builder() {
            $ = new GetAvailabilityZonesArgs();
        }

        public Builder(GetAvailabilityZonesArgs defaults) {
            $ = new GetAvailabilityZonesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param region The `region` to fetch availability zones from, defaults to the provider&#39;s `region`
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The `region` to fetch availability zones from, defaults to the provider&#39;s `region`
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param state The `state` of the availability zones to match, default (&#34;available&#34;).
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The `state` of the availability zones to match, default (&#34;available&#34;).
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public GetAvailabilityZonesArgs build() {
            return $;
        }
    }

}
