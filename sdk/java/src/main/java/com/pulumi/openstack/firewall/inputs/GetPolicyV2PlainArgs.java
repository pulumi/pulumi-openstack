// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.firewall.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPolicyV2PlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPolicyV2PlainArgs Empty = new GetPolicyV2PlainArgs();

    /**
     * Whether this policy has been audited.
     * 
     */
    @Import(name="audited")
    private @Nullable Boolean audited;

    /**
     * @return Whether this policy has been audited.
     * 
     */
    public Optional<Boolean> audited() {
        return Optional.ofNullable(this.audited);
    }

    /**
     * Human-readable description of the policy.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return Human-readable description of the policy.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the firewall policy.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The name of the firewall policy.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the firewall policy.
     * 
     */
    @Import(name="policyId")
    private @Nullable String policyId;

    /**
     * @return The ID of the firewall policy.
     * 
     */
    public Optional<String> policyId() {
        return Optional.ofNullable(this.policyId);
    }

    /**
     * This argument conflicts and is interchangeable
     * with `tenant_id`. The owner of the firewall policy.
     * 
     */
    @Import(name="projectId")
    private @Nullable String projectId;

    /**
     * @return This argument conflicts and is interchangeable
     * with `tenant_id`. The owner of the firewall policy.
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * The region in which to obtain the V2 Neutron client.
     * A Neutron client is needed to retrieve firewall policy ids. If omitted, the
     * `region` argument of the provider is used.
     * 
     */
    @Import(name="region")
    private @Nullable String region;

    /**
     * @return The region in which to obtain the V2 Neutron client.
     * A Neutron client is needed to retrieve firewall policy ids. If omitted, the
     * `region` argument of the provider is used.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Whether this policy is shared across all projects.
     * 
     */
    @Import(name="shared")
    private @Nullable Boolean shared;

    /**
     * @return Whether this policy is shared across all projects.
     * 
     */
    public Optional<Boolean> shared() {
        return Optional.ofNullable(this.shared);
    }

    /**
     * This argument conflicts and is interchangeable
     * with `project_id`. The owner of the firewall policy.
     * 
     */
    @Import(name="tenantId")
    private @Nullable String tenantId;

    /**
     * @return This argument conflicts and is interchangeable
     * with `project_id`. The owner of the firewall policy.
     * 
     */
    public Optional<String> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    private GetPolicyV2PlainArgs() {}

    private GetPolicyV2PlainArgs(GetPolicyV2PlainArgs $) {
        this.audited = $.audited;
        this.description = $.description;
        this.name = $.name;
        this.policyId = $.policyId;
        this.projectId = $.projectId;
        this.region = $.region;
        this.shared = $.shared;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPolicyV2PlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPolicyV2PlainArgs $;

        public Builder() {
            $ = new GetPolicyV2PlainArgs();
        }

        public Builder(GetPolicyV2PlainArgs defaults) {
            $ = new GetPolicyV2PlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param audited Whether this policy has been audited.
         * 
         * @return builder
         * 
         */
        public Builder audited(@Nullable Boolean audited) {
            $.audited = audited;
            return this;
        }

        /**
         * @param description Human-readable description of the policy.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param name The name of the firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param policyId The ID of the firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder policyId(@Nullable String policyId) {
            $.policyId = policyId;
            return this;
        }

        /**
         * @param projectId This argument conflicts and is interchangeable
         * with `tenant_id`. The owner of the firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable String projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param region The region in which to obtain the V2 Neutron client.
         * A Neutron client is needed to retrieve firewall policy ids. If omitted, the
         * `region` argument of the provider is used.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable String region) {
            $.region = region;
            return this;
        }

        /**
         * @param shared Whether this policy is shared across all projects.
         * 
         * @return builder
         * 
         */
        public Builder shared(@Nullable Boolean shared) {
            $.shared = shared;
            return this;
        }

        /**
         * @param tenantId This argument conflicts and is interchangeable
         * with `project_id`. The owner of the firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable String tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        public GetPolicyV2PlainArgs build() {
            return $;
        }
    }

}
