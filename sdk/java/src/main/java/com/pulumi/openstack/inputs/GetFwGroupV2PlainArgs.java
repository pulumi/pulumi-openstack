// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFwGroupV2PlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFwGroupV2PlainArgs Empty = new GetFwGroupV2PlainArgs();

    /**
     * Administrative up/down status for the firewall group.
     * 
     */
    @Import(name="adminStateUp")
    private @Nullable Boolean adminStateUp;

    /**
     * @return Administrative up/down status for the firewall group.
     * 
     */
    public Optional<Boolean> adminStateUp() {
        return Optional.ofNullable(this.adminStateUp);
    }

    /**
     * Human-readable description of the firewall group.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return Human-readable description of the firewall group.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The egress policy ID of the firewall group.
     * 
     */
    @Import(name="egressFirewallPolicyId")
    private @Nullable String egressFirewallPolicyId;

    /**
     * @return The egress policy ID of the firewall group.
     * 
     */
    public Optional<String> egressFirewallPolicyId() {
        return Optional.ofNullable(this.egressFirewallPolicyId);
    }

    /**
     * The ID of the firewall group.
     * 
     */
    @Import(name="groupId")
    private @Nullable String groupId;

    /**
     * @return The ID of the firewall group.
     * 
     */
    public Optional<String> groupId() {
        return Optional.ofNullable(this.groupId);
    }

    /**
     * The ingress policy ID of the firewall group.
     * 
     */
    @Import(name="ingressFirewallPolicyId")
    private @Nullable String ingressFirewallPolicyId;

    /**
     * @return The ingress policy ID of the firewall group.
     * 
     */
    public Optional<String> ingressFirewallPolicyId() {
        return Optional.ofNullable(this.ingressFirewallPolicyId);
    }

    /**
     * The name of the firewall group.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The name of the firewall group.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * This argument conflicts and is interchangeable
     * with `tenant_id`. The owner of the firewall group.
     * 
     */
    @Import(name="projectId")
    private @Nullable String projectId;

    /**
     * @return This argument conflicts and is interchangeable
     * with `tenant_id`. The owner of the firewall group.
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * The region in which to obtain the V2 Neutron client.
     * A Neutron client is needed to retrieve firewall group ids. If omitted, the
     * `region` argument of the provider is used.
     * 
     */
    @Import(name="region")
    private @Nullable String region;

    /**
     * @return The region in which to obtain the V2 Neutron client.
     * A Neutron client is needed to retrieve firewall group ids. If omitted, the
     * `region` argument of the provider is used.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The sharing status of the firewall group.
     * 
     */
    @Import(name="shared")
    private @Nullable Boolean shared;

    /**
     * @return The sharing status of the firewall group.
     * 
     */
    public Optional<Boolean> shared() {
        return Optional.ofNullable(this.shared);
    }

    /**
     * Enabled status for the firewall group.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return Enabled status for the firewall group.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * This argument conflicts and is interchangeable
     * with `project_id`. The owner of the firewall group.
     * 
     */
    @Import(name="tenantId")
    private @Nullable String tenantId;

    /**
     * @return This argument conflicts and is interchangeable
     * with `project_id`. The owner of the firewall group.
     * 
     */
    public Optional<String> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    private GetFwGroupV2PlainArgs() {}

    private GetFwGroupV2PlainArgs(GetFwGroupV2PlainArgs $) {
        this.adminStateUp = $.adminStateUp;
        this.description = $.description;
        this.egressFirewallPolicyId = $.egressFirewallPolicyId;
        this.groupId = $.groupId;
        this.ingressFirewallPolicyId = $.ingressFirewallPolicyId;
        this.name = $.name;
        this.projectId = $.projectId;
        this.region = $.region;
        this.shared = $.shared;
        this.status = $.status;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFwGroupV2PlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFwGroupV2PlainArgs $;

        public Builder() {
            $ = new GetFwGroupV2PlainArgs();
        }

        public Builder(GetFwGroupV2PlainArgs defaults) {
            $ = new GetFwGroupV2PlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminStateUp Administrative up/down status for the firewall group.
         * 
         * @return builder
         * 
         */
        public Builder adminStateUp(@Nullable Boolean adminStateUp) {
            $.adminStateUp = adminStateUp;
            return this;
        }

        /**
         * @param description Human-readable description of the firewall group.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param egressFirewallPolicyId The egress policy ID of the firewall group.
         * 
         * @return builder
         * 
         */
        public Builder egressFirewallPolicyId(@Nullable String egressFirewallPolicyId) {
            $.egressFirewallPolicyId = egressFirewallPolicyId;
            return this;
        }

        /**
         * @param groupId The ID of the firewall group.
         * 
         * @return builder
         * 
         */
        public Builder groupId(@Nullable String groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param ingressFirewallPolicyId The ingress policy ID of the firewall group.
         * 
         * @return builder
         * 
         */
        public Builder ingressFirewallPolicyId(@Nullable String ingressFirewallPolicyId) {
            $.ingressFirewallPolicyId = ingressFirewallPolicyId;
            return this;
        }

        /**
         * @param name The name of the firewall group.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param projectId This argument conflicts and is interchangeable
         * with `tenant_id`. The owner of the firewall group.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable String projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param region The region in which to obtain the V2 Neutron client.
         * A Neutron client is needed to retrieve firewall group ids. If omitted, the
         * `region` argument of the provider is used.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable String region) {
            $.region = region;
            return this;
        }

        /**
         * @param shared The sharing status of the firewall group.
         * 
         * @return builder
         * 
         */
        public Builder shared(@Nullable Boolean shared) {
            $.shared = shared;
            return this;
        }

        /**
         * @param status Enabled status for the firewall group.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        /**
         * @param tenantId This argument conflicts and is interchangeable
         * with `project_id`. The owner of the firewall group.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable String tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        public GetFwGroupV2PlainArgs build() {
            return $;
        }
    }

}
