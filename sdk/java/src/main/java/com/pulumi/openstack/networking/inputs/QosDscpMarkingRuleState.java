// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.networking.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class QosDscpMarkingRuleState extends com.pulumi.resources.ResourceArgs {

    public static final QosDscpMarkingRuleState Empty = new QosDscpMarkingRuleState();

    /**
     * The value of DSCP mark. Changing this updates the DSCP mark value existing
     * QoS DSCP marking rule.
     * 
     */
    @Import(name="dscpMark")
    private @Nullable Output<Integer> dscpMark;

    /**
     * @return The value of DSCP mark. Changing this updates the DSCP mark value existing
     * QoS DSCP marking rule.
     * 
     */
    public Optional<Output<Integer>> dscpMark() {
        return Optional.ofNullable(this.dscpMark);
    }

    /**
     * The QoS policy reference. Changing this creates a new QoS DSCP marking rule.
     * 
     */
    @Import(name="qosPolicyId")
    private @Nullable Output<String> qosPolicyId;

    /**
     * @return The QoS policy reference. Changing this creates a new QoS DSCP marking rule.
     * 
     */
    public Optional<Output<String>> qosPolicyId() {
        return Optional.ofNullable(this.qosPolicyId);
    }

    /**
     * The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create a Neutron QoS DSCP marking rule. If omitted, the
     * `region` argument of the provider is used. Changing this creates a new QoS DSCP marking rule.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create a Neutron QoS DSCP marking rule. If omitted, the
     * `region` argument of the provider is used. Changing this creates a new QoS DSCP marking rule.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private QosDscpMarkingRuleState() {}

    private QosDscpMarkingRuleState(QosDscpMarkingRuleState $) {
        this.dscpMark = $.dscpMark;
        this.qosPolicyId = $.qosPolicyId;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QosDscpMarkingRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QosDscpMarkingRuleState $;

        public Builder() {
            $ = new QosDscpMarkingRuleState();
        }

        public Builder(QosDscpMarkingRuleState defaults) {
            $ = new QosDscpMarkingRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param dscpMark The value of DSCP mark. Changing this updates the DSCP mark value existing
         * QoS DSCP marking rule.
         * 
         * @return builder
         * 
         */
        public Builder dscpMark(@Nullable Output<Integer> dscpMark) {
            $.dscpMark = dscpMark;
            return this;
        }

        /**
         * @param dscpMark The value of DSCP mark. Changing this updates the DSCP mark value existing
         * QoS DSCP marking rule.
         * 
         * @return builder
         * 
         */
        public Builder dscpMark(Integer dscpMark) {
            return dscpMark(Output.of(dscpMark));
        }

        /**
         * @param qosPolicyId The QoS policy reference. Changing this creates a new QoS DSCP marking rule.
         * 
         * @return builder
         * 
         */
        public Builder qosPolicyId(@Nullable Output<String> qosPolicyId) {
            $.qosPolicyId = qosPolicyId;
            return this;
        }

        /**
         * @param qosPolicyId The QoS policy reference. Changing this creates a new QoS DSCP marking rule.
         * 
         * @return builder
         * 
         */
        public Builder qosPolicyId(String qosPolicyId) {
            return qosPolicyId(Output.of(qosPolicyId));
        }

        /**
         * @param region The region in which to obtain the V2 Networking client.
         * A Networking client is needed to create a Neutron QoS DSCP marking rule. If omitted, the
         * `region` argument of the provider is used. Changing this creates a new QoS DSCP marking rule.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region in which to obtain the V2 Networking client.
         * A Networking client is needed to create a Neutron QoS DSCP marking rule. If omitted, the
         * `region` argument of the provider is used. Changing this creates a new QoS DSCP marking rule.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public QosDscpMarkingRuleState build() {
            return $;
        }
    }

}
