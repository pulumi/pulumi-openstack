// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.networking.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PortBinding {
    /**
     * @return The ID of the host to allocate port on.
     * 
     */
    private @Nullable String hostId;
    /**
     * @return Custom data to be passed as `binding:profile`. Data
     * must be passed as JSON.
     * 
     */
    private @Nullable String profile;
    /**
     * @return A map of JSON strings containing additional
     * details for this specific binding.
     * 
     */
    private @Nullable Map<String,Object> vifDetails;
    /**
     * @return The VNIC type of the port binding.
     * 
     */
    private @Nullable String vifType;
    /**
     * @return VNIC type for the port. Can either be `direct`,
     * `direct-physical`, `macvtap`, `normal`, `baremetal` or `virtio-forwarder`.
     * Default value is `normal`.
     * 
     */
    private @Nullable String vnicType;

    private PortBinding() {}
    /**
     * @return The ID of the host to allocate port on.
     * 
     */
    public Optional<String> hostId() {
        return Optional.ofNullable(this.hostId);
    }
    /**
     * @return Custom data to be passed as `binding:profile`. Data
     * must be passed as JSON.
     * 
     */
    public Optional<String> profile() {
        return Optional.ofNullable(this.profile);
    }
    /**
     * @return A map of JSON strings containing additional
     * details for this specific binding.
     * 
     */
    public Map<String,Object> vifDetails() {
        return this.vifDetails == null ? Map.of() : this.vifDetails;
    }
    /**
     * @return The VNIC type of the port binding.
     * 
     */
    public Optional<String> vifType() {
        return Optional.ofNullable(this.vifType);
    }
    /**
     * @return VNIC type for the port. Can either be `direct`,
     * `direct-physical`, `macvtap`, `normal`, `baremetal` or `virtio-forwarder`.
     * Default value is `normal`.
     * 
     */
    public Optional<String> vnicType() {
        return Optional.ofNullable(this.vnicType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PortBinding defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String hostId;
        private @Nullable String profile;
        private @Nullable Map<String,Object> vifDetails;
        private @Nullable String vifType;
        private @Nullable String vnicType;
        public Builder() {}
        public Builder(PortBinding defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostId = defaults.hostId;
    	      this.profile = defaults.profile;
    	      this.vifDetails = defaults.vifDetails;
    	      this.vifType = defaults.vifType;
    	      this.vnicType = defaults.vnicType;
        }

        @CustomType.Setter
        public Builder hostId(@Nullable String hostId) {

            this.hostId = hostId;
            return this;
        }
        @CustomType.Setter
        public Builder profile(@Nullable String profile) {

            this.profile = profile;
            return this;
        }
        @CustomType.Setter
        public Builder vifDetails(@Nullable Map<String,Object> vifDetails) {

            this.vifDetails = vifDetails;
            return this;
        }
        @CustomType.Setter
        public Builder vifType(@Nullable String vifType) {

            this.vifType = vifType;
            return this;
        }
        @CustomType.Setter
        public Builder vnicType(@Nullable String vnicType) {

            this.vnicType = vnicType;
            return this;
        }
        public PortBinding build() {
            final var _resultValue = new PortBinding();
            _resultValue.hostId = hostId;
            _resultValue.profile = profile;
            _resultValue.vifDetails = vifDetails;
            _resultValue.vifType = vifType;
            _resultValue.vnicType = vnicType;
            return _resultValue;
        }
    }
}
