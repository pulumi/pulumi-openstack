// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.dns.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZoneShareV2State extends com.pulumi.resources.ResourceArgs {

    public static final ZoneShareV2State Empty = new ZoneShareV2State();

    /**
     * The ID of the project DNS zone is created for, sets
     * `X-Auth-Sudo-Tenant-ID` header (requires an assigned user role in target
     * project).
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return The ID of the project DNS zone is created for, sets
     * `X-Auth-Sudo-Tenant-ID` header (requires an assigned user role in target
     * project).
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * The region in which to obtain the V2 DNS client. If
     * omitted, the `region` argument of the provider is used. Changing this creates
     * a new DNS zone share.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region in which to obtain the V2 DNS client. If
     * omitted, the `region` argument of the provider is used. Changing this creates
     * a new DNS zone share.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The ID of the target project with which the
     * DNS zone will be shared.
     * 
     */
    @Import(name="targetProjectId")
    private @Nullable Output<String> targetProjectId;

    /**
     * @return The ID of the target project with which the
     * DNS zone will be shared.
     * 
     */
    public Optional<Output<String>> targetProjectId() {
        return Optional.ofNullable(this.targetProjectId);
    }

    /**
     * The ID of the DNS zone to be shared.
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return The ID of the DNS zone to be shared.
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private ZoneShareV2State() {}

    private ZoneShareV2State(ZoneShareV2State $) {
        this.projectId = $.projectId;
        this.region = $.region;
        this.targetProjectId = $.targetProjectId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZoneShareV2State defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZoneShareV2State $;

        public Builder() {
            $ = new ZoneShareV2State();
        }

        public Builder(ZoneShareV2State defaults) {
            $ = new ZoneShareV2State(Objects.requireNonNull(defaults));
        }

        /**
         * @param projectId The ID of the project DNS zone is created for, sets
         * `X-Auth-Sudo-Tenant-ID` header (requires an assigned user role in target
         * project).
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The ID of the project DNS zone is created for, sets
         * `X-Auth-Sudo-Tenant-ID` header (requires an assigned user role in target
         * project).
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param region The region in which to obtain the V2 DNS client. If
         * omitted, the `region` argument of the provider is used. Changing this creates
         * a new DNS zone share.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region in which to obtain the V2 DNS client. If
         * omitted, the `region` argument of the provider is used. Changing this creates
         * a new DNS zone share.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param targetProjectId The ID of the target project with which the
         * DNS zone will be shared.
         * 
         * @return builder
         * 
         */
        public Builder targetProjectId(@Nullable Output<String> targetProjectId) {
            $.targetProjectId = targetProjectId;
            return this;
        }

        /**
         * @param targetProjectId The ID of the target project with which the
         * DNS zone will be shared.
         * 
         * @return builder
         * 
         */
        public Builder targetProjectId(String targetProjectId) {
            return targetProjectId(Output.of(targetProjectId));
        }

        /**
         * @param zoneId The ID of the DNS zone to be shared.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The ID of the DNS zone to be shared.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public ZoneShareV2State build() {
            return $;
        }
    }

}
