// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class UserMultiFactorAuthRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserMultiFactorAuthRuleArgs Empty = new UserMultiFactorAuthRuleArgs();

    /**
     * A list of authentication plugins that the user must
     * authenticate with.
     * 
     */
    @Import(name="rules", required=true)
    private Output<List<String>> rules;

    /**
     * @return A list of authentication plugins that the user must
     * authenticate with.
     * 
     */
    public Output<List<String>> rules() {
        return this.rules;
    }

    private UserMultiFactorAuthRuleArgs() {}

    private UserMultiFactorAuthRuleArgs(UserMultiFactorAuthRuleArgs $) {
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserMultiFactorAuthRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserMultiFactorAuthRuleArgs $;

        public Builder() {
            $ = new UserMultiFactorAuthRuleArgs();
        }

        public Builder(UserMultiFactorAuthRuleArgs defaults) {
            $ = new UserMultiFactorAuthRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param rules A list of authentication plugins that the user must
         * authenticate with.
         * 
         * @return builder
         * 
         */
        public Builder rules(Output<List<String>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules A list of authentication plugins that the user must
         * authenticate with.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<String> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules A list of authentication plugins that the user must
         * authenticate with.
         * 
         * @return builder
         * 
         */
        public Builder rules(String... rules) {
            return rules(List.of(rules));
        }

        public UserMultiFactorAuthRuleArgs build() {
            if ($.rules == null) {
                throw new MissingRequiredPropertyException("UserMultiFactorAuthRuleArgs", "rules");
            }
            return $;
        }
    }

}
