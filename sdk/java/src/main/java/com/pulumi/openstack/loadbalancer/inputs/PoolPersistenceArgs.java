// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.loadbalancer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PoolPersistenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final PoolPersistenceArgs Empty = new PoolPersistenceArgs();

    /**
     * The name of the cookie if persistence mode is set
     * appropriately. Required if `type = APP_COOKIE`.
     * 
     */
    @Import(name="cookieName")
    private @Nullable Output<String> cookieName;

    /**
     * @return The name of the cookie if persistence mode is set
     * appropriately. Required if `type = APP_COOKIE`.
     * 
     */
    public Optional<Output<String>> cookieName() {
        return Optional.ofNullable(this.cookieName);
    }

    /**
     * The type of persistence mode. The current specification
     * supports SOURCE_IP, HTTP_COOKIE, and APP_COOKIE.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of persistence mode. The current specification
     * supports SOURCE_IP, HTTP_COOKIE, and APP_COOKIE.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private PoolPersistenceArgs() {}

    private PoolPersistenceArgs(PoolPersistenceArgs $) {
        this.cookieName = $.cookieName;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PoolPersistenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PoolPersistenceArgs $;

        public Builder() {
            $ = new PoolPersistenceArgs();
        }

        public Builder(PoolPersistenceArgs defaults) {
            $ = new PoolPersistenceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cookieName The name of the cookie if persistence mode is set
         * appropriately. Required if `type = APP_COOKIE`.
         * 
         * @return builder
         * 
         */
        public Builder cookieName(@Nullable Output<String> cookieName) {
            $.cookieName = cookieName;
            return this;
        }

        /**
         * @param cookieName The name of the cookie if persistence mode is set
         * appropriately. Required if `type = APP_COOKIE`.
         * 
         * @return builder
         * 
         */
        public Builder cookieName(String cookieName) {
            return cookieName(Output.of(cookieName));
        }

        /**
         * @param type The type of persistence mode. The current specification
         * supports SOURCE_IP, HTTP_COOKIE, and APP_COOKIE.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of persistence mode. The current specification
         * supports SOURCE_IP, HTTP_COOKIE, and APP_COOKIE.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public PoolPersistenceArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("PoolPersistenceArgs", "type");
            }
            return $;
        }
    }

}
