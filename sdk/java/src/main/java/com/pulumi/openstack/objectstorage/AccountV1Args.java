// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.objectstorage;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountV1Args extends com.pulumi.resources.ResourceArgs {

    public static final AccountV1Args Empty = new AccountV1Args();

    /**
     * A map of custom key/value pairs to associate with the
     * account metadata. Changing the `Quota-Bytes` key value is allowed to be
     * updated only by the cloud administrator.
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<Map<String,String>> metadata;

    /**
     * @return A map of custom key/value pairs to associate with the
     * account metadata. Changing the `Quota-Bytes` key value is allowed to be
     * updated only by the cloud administrator.
     * 
     */
    public Optional<Output<Map<String,String>>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * The project ID of the corresponding account. If
     * omitted, the token&#39;s project ID is used. Changing this creates a new account.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return The project ID of the corresponding account. If
     * omitted, the token&#39;s project ID is used. Changing this creates a new account.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * The region in which to create the account. If omitted,
     * the `region` argument of the provider is used. Changing this creates a new
     * account.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region in which to create the account. If omitted,
     * the `region` argument of the provider is used. Changing this creates a new
     * account.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private AccountV1Args() {}

    private AccountV1Args(AccountV1Args $) {
        this.metadata = $.metadata;
        this.projectId = $.projectId;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountV1Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountV1Args $;

        public Builder() {
            $ = new AccountV1Args();
        }

        public Builder(AccountV1Args defaults) {
            $ = new AccountV1Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param metadata A map of custom key/value pairs to associate with the
         * account metadata. Changing the `Quota-Bytes` key value is allowed to be
         * updated only by the cloud administrator.
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<Map<String,String>> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata A map of custom key/value pairs to associate with the
         * account metadata. Changing the `Quota-Bytes` key value is allowed to be
         * updated only by the cloud administrator.
         * 
         * @return builder
         * 
         */
        public Builder metadata(Map<String,String> metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param projectId The project ID of the corresponding account. If
         * omitted, the token&#39;s project ID is used. Changing this creates a new account.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The project ID of the corresponding account. If
         * omitted, the token&#39;s project ID is used. Changing this creates a new account.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param region The region in which to create the account. If omitted,
         * the `region` argument of the provider is used. Changing this creates a new
         * account.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region in which to create the account. If omitted,
         * the `region` argument of the provider is used. Changing this creates a new
         * account.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public AccountV1Args build() {
            return $;
        }
    }

}
