// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.compute.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLimitsV2PlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLimitsV2PlainArgs Empty = new GetLimitsV2PlainArgs();

    /**
     * The id of the project to retrieve the limits.
     * 
     */
    @Import(name="projectId", required=true)
    private String projectId;

    /**
     * @return The id of the project to retrieve the limits.
     * 
     */
    public String projectId() {
        return this.projectId;
    }

    /**
     * The region in which to obtain the V2 Compute client.
     * If omitted, the `region` argument of the provider is used.
     * 
     */
    @Import(name="region")
    private @Nullable String region;

    /**
     * @return The region in which to obtain the V2 Compute client.
     * If omitted, the `region` argument of the provider is used.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    private GetLimitsV2PlainArgs() {}

    private GetLimitsV2PlainArgs(GetLimitsV2PlainArgs $) {
        this.projectId = $.projectId;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLimitsV2PlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLimitsV2PlainArgs $;

        public Builder() {
            $ = new GetLimitsV2PlainArgs();
        }

        public Builder(GetLimitsV2PlainArgs defaults) {
            $ = new GetLimitsV2PlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param projectId The id of the project to retrieve the limits.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param region The region in which to obtain the V2 Compute client.
         * If omitted, the `region` argument of the provider is used.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable String region) {
            $.region = region;
            return this;
        }

        public GetLimitsV2PlainArgs build() {
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetLimitsV2PlainArgs", "projectId");
            }
            return $;
        }
    }

}
