// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.sharedfilesystem.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSnapshotPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSnapshotPlainArgs Empty = new GetSnapshotPlainArgs();

    /**
     * The human-readable description of the snapshot.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return The human-readable description of the snapshot.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the snapshot.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The name of the snapshot.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The region in which to obtain the V2 Shared File System client.
     * 
     */
    @Import(name="region")
    private @Nullable String region;

    /**
     * @return The region in which to obtain the V2 Shared File System client.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The UUID of the source share that was used to create the snapshot.
     * 
     */
    @Import(name="shareId")
    private @Nullable String shareId;

    /**
     * @return The UUID of the source share that was used to create the snapshot.
     * 
     */
    public Optional<String> shareId() {
        return Optional.ofNullable(this.shareId);
    }

    /**
     * A snapshot status filter. A valid value is `available`, `error`,
     * `creating`, `deleting`, `manageStarting`, `manageError`, `unmanageStarting`,
     * `unmanageError` or `errorDeleting`.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return A snapshot status filter. A valid value is `available`, `error`,
     * `creating`, `deleting`, `manageStarting`, `manageError`, `unmanageStarting`,
     * `unmanageError` or `errorDeleting`.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    private GetSnapshotPlainArgs() {}

    private GetSnapshotPlainArgs(GetSnapshotPlainArgs $) {
        this.description = $.description;
        this.name = $.name;
        this.region = $.region;
        this.shareId = $.shareId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSnapshotPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSnapshotPlainArgs $;

        public Builder() {
            $ = new GetSnapshotPlainArgs();
        }

        public Builder(GetSnapshotPlainArgs defaults) {
            $ = new GetSnapshotPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The human-readable description of the snapshot.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param name The name of the snapshot.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param region The region in which to obtain the V2 Shared File System client.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable String region) {
            $.region = region;
            return this;
        }

        /**
         * @param shareId The UUID of the source share that was used to create the snapshot.
         * 
         * @return builder
         * 
         */
        public Builder shareId(@Nullable String shareId) {
            $.shareId = shareId;
            return this;
        }

        /**
         * @param status A snapshot status filter. A valid value is `available`, `error`,
         * `creating`, `deleting`, `manageStarting`, `manageError`, `unmanageStarting`,
         * `unmanageError` or `errorDeleting`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public GetSnapshotPlainArgs build() {
            return $;
        }
    }

}
