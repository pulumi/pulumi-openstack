// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.bgpvpn;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouterAssociateV2Args extends com.pulumi.resources.ResourceArgs {

    public static final RouterAssociateV2Args Empty = new RouterAssociateV2Args();

    /**
     * A boolean flag indicating whether extra
     * routes should be advertised. Defaults to true.
     * 
     */
    @Import(name="advertiseExtraRoutes")
    private @Nullable Output<Boolean> advertiseExtraRoutes;

    /**
     * @return A boolean flag indicating whether extra
     * routes should be advertised. Defaults to true.
     * 
     */
    public Optional<Output<Boolean>> advertiseExtraRoutes() {
        return Optional.ofNullable(this.advertiseExtraRoutes);
    }

    /**
     * The ID of the BGP VPN to which the router will be
     * associated. Changing this creates a new BGP VPN router association.
     * 
     */
    @Import(name="bgpvpnId", required=true)
    private Output<String> bgpvpnId;

    /**
     * @return The ID of the BGP VPN to which the router will be
     * associated. Changing this creates a new BGP VPN router association.
     * 
     */
    public Output<String> bgpvpnId() {
        return this.bgpvpnId;
    }

    /**
     * The ID of the project that owns the BGP VPN router
     * association. Only administrative and users with `advsvc` role can specify a
     * project ID other than their own. Changing this creates a new BGP VPN router
     * association.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return The ID of the project that owns the BGP VPN router
     * association. Only administrative and users with `advsvc` role can specify a
     * project ID other than their own. Changing this creates a new BGP VPN router
     * association.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create a BGP VPN router association. If
     * omitted, the `region` argument of the provider is used. Changing this creates
     * a new BGP VPN router association.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create a BGP VPN router association. If
     * omitted, the `region` argument of the provider is used. Changing this creates
     * a new BGP VPN router association.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The ID of the router to be associated with the BGP
     * VPN. Changing this creates a new BGP VPN router association.
     * 
     */
    @Import(name="routerId", required=true)
    private Output<String> routerId;

    /**
     * @return The ID of the router to be associated with the BGP
     * VPN. Changing this creates a new BGP VPN router association.
     * 
     */
    public Output<String> routerId() {
        return this.routerId;
    }

    private RouterAssociateV2Args() {}

    private RouterAssociateV2Args(RouterAssociateV2Args $) {
        this.advertiseExtraRoutes = $.advertiseExtraRoutes;
        this.bgpvpnId = $.bgpvpnId;
        this.projectId = $.projectId;
        this.region = $.region;
        this.routerId = $.routerId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouterAssociateV2Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouterAssociateV2Args $;

        public Builder() {
            $ = new RouterAssociateV2Args();
        }

        public Builder(RouterAssociateV2Args defaults) {
            $ = new RouterAssociateV2Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param advertiseExtraRoutes A boolean flag indicating whether extra
         * routes should be advertised. Defaults to true.
         * 
         * @return builder
         * 
         */
        public Builder advertiseExtraRoutes(@Nullable Output<Boolean> advertiseExtraRoutes) {
            $.advertiseExtraRoutes = advertiseExtraRoutes;
            return this;
        }

        /**
         * @param advertiseExtraRoutes A boolean flag indicating whether extra
         * routes should be advertised. Defaults to true.
         * 
         * @return builder
         * 
         */
        public Builder advertiseExtraRoutes(Boolean advertiseExtraRoutes) {
            return advertiseExtraRoutes(Output.of(advertiseExtraRoutes));
        }

        /**
         * @param bgpvpnId The ID of the BGP VPN to which the router will be
         * associated. Changing this creates a new BGP VPN router association.
         * 
         * @return builder
         * 
         */
        public Builder bgpvpnId(Output<String> bgpvpnId) {
            $.bgpvpnId = bgpvpnId;
            return this;
        }

        /**
         * @param bgpvpnId The ID of the BGP VPN to which the router will be
         * associated. Changing this creates a new BGP VPN router association.
         * 
         * @return builder
         * 
         */
        public Builder bgpvpnId(String bgpvpnId) {
            return bgpvpnId(Output.of(bgpvpnId));
        }

        /**
         * @param projectId The ID of the project that owns the BGP VPN router
         * association. Only administrative and users with `advsvc` role can specify a
         * project ID other than their own. Changing this creates a new BGP VPN router
         * association.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The ID of the project that owns the BGP VPN router
         * association. Only administrative and users with `advsvc` role can specify a
         * project ID other than their own. Changing this creates a new BGP VPN router
         * association.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param region The region in which to obtain the V2 Networking client.
         * A Networking client is needed to create a BGP VPN router association. If
         * omitted, the `region` argument of the provider is used. Changing this creates
         * a new BGP VPN router association.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region in which to obtain the V2 Networking client.
         * A Networking client is needed to create a BGP VPN router association. If
         * omitted, the `region` argument of the provider is used. Changing this creates
         * a new BGP VPN router association.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param routerId The ID of the router to be associated with the BGP
         * VPN. Changing this creates a new BGP VPN router association.
         * 
         * @return builder
         * 
         */
        public Builder routerId(Output<String> routerId) {
            $.routerId = routerId;
            return this;
        }

        /**
         * @param routerId The ID of the router to be associated with the BGP
         * VPN. Changing this creates a new BGP VPN router association.
         * 
         * @return builder
         * 
         */
        public Builder routerId(String routerId) {
            return routerId(Output.of(routerId));
        }

        public RouterAssociateV2Args build() {
            if ($.bgpvpnId == null) {
                throw new MissingRequiredPropertyException("RouterAssociateV2Args", "bgpvpnId");
            }
            if ($.routerId == null) {
                throw new MissingRequiredPropertyException("RouterAssociateV2Args", "routerId");
            }
            return $;
        }
    }

}
