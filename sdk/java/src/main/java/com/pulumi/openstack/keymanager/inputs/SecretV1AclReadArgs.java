// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.keymanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecretV1AclReadArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecretV1AclReadArgs Empty = new SecretV1AclReadArgs();

    /**
     * The date the secret was created.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return The date the secret was created.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Whether the secret is accessible project wide.
     * Defaults to `true`.
     * 
     */
    @Import(name="projectAccess")
    private @Nullable Output<Boolean> projectAccess;

    /**
     * @return Whether the secret is accessible project wide.
     * Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> projectAccess() {
        return Optional.ofNullable(this.projectAccess);
    }

    /**
     * The date the secret was last updated.
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return The date the secret was last updated.
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    /**
     * The list of user IDs, which are allowed to access the
     * secret, when `project_access` is set to `false`.
     * 
     */
    @Import(name="users")
    private @Nullable Output<List<String>> users;

    /**
     * @return The list of user IDs, which are allowed to access the
     * secret, when `project_access` is set to `false`.
     * 
     */
    public Optional<Output<List<String>>> users() {
        return Optional.ofNullable(this.users);
    }

    private SecretV1AclReadArgs() {}

    private SecretV1AclReadArgs(SecretV1AclReadArgs $) {
        this.createdAt = $.createdAt;
        this.projectAccess = $.projectAccess;
        this.updatedAt = $.updatedAt;
        this.users = $.users;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretV1AclReadArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretV1AclReadArgs $;

        public Builder() {
            $ = new SecretV1AclReadArgs();
        }

        public Builder(SecretV1AclReadArgs defaults) {
            $ = new SecretV1AclReadArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdAt The date the secret was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt The date the secret was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param projectAccess Whether the secret is accessible project wide.
         * Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder projectAccess(@Nullable Output<Boolean> projectAccess) {
            $.projectAccess = projectAccess;
            return this;
        }

        /**
         * @param projectAccess Whether the secret is accessible project wide.
         * Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder projectAccess(Boolean projectAccess) {
            return projectAccess(Output.of(projectAccess));
        }

        /**
         * @param updatedAt The date the secret was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt The date the secret was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        /**
         * @param users The list of user IDs, which are allowed to access the
         * secret, when `project_access` is set to `false`.
         * 
         * @return builder
         * 
         */
        public Builder users(@Nullable Output<List<String>> users) {
            $.users = users;
            return this;
        }

        /**
         * @param users The list of user IDs, which are allowed to access the
         * secret, when `project_access` is set to `false`.
         * 
         * @return builder
         * 
         */
        public Builder users(List<String> users) {
            return users(Output.of(users));
        }

        /**
         * @param users The list of user IDs, which are allowed to access the
         * secret, when `project_access` is set to `false`.
         * 
         * @return builder
         * 
         */
        public Builder users(String... users) {
            return users(List.of(users));
        }

        public SecretV1AclReadArgs build() {
            return $;
        }
    }

}
