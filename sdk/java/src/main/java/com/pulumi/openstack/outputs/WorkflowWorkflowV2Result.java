// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class WorkflowWorkflowV2Result {
    /**
     * @return The date the workflow was created.
     * 
     */
    private String createdAt;
    /**
     * @return The workflow definition in Mistral v2 DSL.
     * 
     */
    private String definition;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A set of input parameters required for workflow execution.
     * 
     */
    private String input;
    /**
     * @return See Argument Reference above.
     * 
     */
    private String name;
    /**
     * @return See Argument Reference above.
     * 
     */
    private String namespace;
    /**
     * @return See Argument Reference above.
     * 
     */
    private String projectId;
    /**
     * @return See Argument Reference above.
     * 
     */
    private String region;
    /**
     * @return Scope (private or public).
     * 
     */
    private String scope;
    /**
     * @return A set of string tags for the workflow.
     * 
     */
    private List<String> tags;

    private WorkflowWorkflowV2Result() {}
    /**
     * @return The date the workflow was created.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The workflow definition in Mistral v2 DSL.
     * 
     */
    public String definition() {
        return this.definition;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A set of input parameters required for workflow execution.
     * 
     */
    public String input() {
        return this.input;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return Scope (private or public).
     * 
     */
    public String scope() {
        return this.scope;
    }
    /**
     * @return A set of string tags for the workflow.
     * 
     */
    public List<String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkflowWorkflowV2Result defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createdAt;
        private String definition;
        private String id;
        private String input;
        private String name;
        private String namespace;
        private String projectId;
        private String region;
        private String scope;
        private List<String> tags;
        public Builder() {}
        public Builder(WorkflowWorkflowV2Result defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdAt = defaults.createdAt;
    	      this.definition = defaults.definition;
    	      this.id = defaults.id;
    	      this.input = defaults.input;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.projectId = defaults.projectId;
    	      this.region = defaults.region;
    	      this.scope = defaults.scope;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("WorkflowWorkflowV2Result", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder definition(String definition) {
            if (definition == null) {
              throw new MissingRequiredPropertyException("WorkflowWorkflowV2Result", "definition");
            }
            this.definition = definition;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("WorkflowWorkflowV2Result", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder input(String input) {
            if (input == null) {
              throw new MissingRequiredPropertyException("WorkflowWorkflowV2Result", "input");
            }
            this.input = input;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("WorkflowWorkflowV2Result", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("WorkflowWorkflowV2Result", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("WorkflowWorkflowV2Result", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("WorkflowWorkflowV2Result", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder scope(String scope) {
            if (scope == null) {
              throw new MissingRequiredPropertyException("WorkflowWorkflowV2Result", "scope");
            }
            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("WorkflowWorkflowV2Result", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public WorkflowWorkflowV2Result build() {
            final var _resultValue = new WorkflowWorkflowV2Result();
            _resultValue.createdAt = createdAt;
            _resultValue.definition = definition;
            _resultValue.id = id;
            _resultValue.input = input;
            _resultValue.name = name;
            _resultValue.namespace = namespace;
            _resultValue.projectId = projectId;
            _resultValue.region = region;
            _resultValue.scope = scope;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
