// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.networking;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.openstack.Utilities;
import com.pulumi.openstack.networking.SegmentV2Args;
import com.pulumi.openstack.networking.inputs.SegmentV2State;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Neutron network segment resource within OpenStack.
 * 
 * &gt; **Note:** This resource is only available if the Neutron service is
 * configured with the `segments` extension.
 * 
 * &gt; **Note:** This ussually requires admin privileges to create or manage
 * segments.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.openstack.networking.Network;
 * import com.pulumi.openstack.networking.NetworkArgs;
 * import com.pulumi.openstack.networking.SegmentV2;
 * import com.pulumi.openstack.networking.SegmentV2Args;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var net1 = new Network("net1", NetworkArgs.builder()
 *             .name("demo-net")
 *             .build());
 * 
 *         var segment1 = new SegmentV2("segment1", SegmentV2Args.builder()
 *             .name("flat-segment")
 *             .description("Example flat segment")
 *             .networkId(net1.id())
 *             .networkType("flat")
 *             .physicalNetwork("public")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * This resource can be imported by specifying the segment ID:
 * 
 * ```sh
 * $ pulumi import openstack:networking/segmentV2:SegmentV2 segment1 a5e3a494-26ee-4fde-ad26-2d846c47072e
 * ```
 * 
 */
@ResourceType(type="openstack:networking/segmentV2:SegmentV2")
public class SegmentV2 extends com.pulumi.resources.CustomResource {
    /**
     * Creation timestamp (RFC3339 format).
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return Creation timestamp (RFC3339 format).
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * A description for the segment.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A description for the segment.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * A name for the segment.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return A name for the segment.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The UUID of the network this segment belongs to.
     * Changing this will create a new segment.
     * 
     */
    @Export(name="networkId", refs={String.class}, tree="[0]")
    private Output<String> networkId;

    /**
     * @return The UUID of the network this segment belongs to.
     * Changing this will create a new segment.
     * 
     */
    public Output<String> networkId() {
        return this.networkId;
    }
    /**
     * The network type. Valid values depend on the
     * backend (e.g., `vlan`, `vxlan`, `flat`, `gre`, `geneve`, `local`). Changing
     * this will create a new segment.
     * 
     */
    @Export(name="networkType", refs={String.class}, tree="[0]")
    private Output<String> networkType;

    /**
     * @return The network type. Valid values depend on the
     * backend (e.g., `vlan`, `vxlan`, `flat`, `gre`, `geneve`, `local`). Changing
     * this will create a new segment.
     * 
     */
    public Output<String> networkType() {
        return this.networkType;
    }
    /**
     * The name of the physical network. Changing this
     * will create a new segment.
     * 
     */
    @Export(name="physicalNetwork", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> physicalNetwork;

    /**
     * @return The name of the physical network. Changing this
     * will create a new segment.
     * 
     */
    public Output<Optional<String>> physicalNetwork() {
        return Codegen.optional(this.physicalNetwork);
    }
    /**
     * The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create a Neutron network. If omitted, the
     * `region` argument of the provider is used. Changing this creates a new
     * segment.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create a Neutron network. If omitted, the
     * `region` argument of the provider is used. Changing this creates a new
     * segment.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * The revision number of the segment.
     * 
     */
    @Export(name="revisionNumber", refs={Integer.class}, tree="[0]")
    private Output<Integer> revisionNumber;

    /**
     * @return The revision number of the segment.
     * 
     */
    public Output<Integer> revisionNumber() {
        return this.revisionNumber;
    }
    /**
     * A segmentation identifier. Changing is allowed
     * only for `vlan`.
     * 
     */
    @Export(name="segmentationId", refs={Integer.class}, tree="[0]")
    private Output<Integer> segmentationId;

    /**
     * @return A segmentation identifier. Changing is allowed
     * only for `vlan`.
     * 
     */
    public Output<Integer> segmentationId() {
        return this.segmentationId;
    }
    /**
     * Last update timestamp (RFC3339 format).
     * 
     */
    @Export(name="updatedAt", refs={String.class}, tree="[0]")
    private Output<String> updatedAt;

    /**
     * @return Last update timestamp (RFC3339 format).
     * 
     */
    public Output<String> updatedAt() {
        return this.updatedAt;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SegmentV2(java.lang.String name) {
        this(name, SegmentV2Args.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SegmentV2(java.lang.String name, SegmentV2Args args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SegmentV2(java.lang.String name, SegmentV2Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("openstack:networking/segmentV2:SegmentV2", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SegmentV2(java.lang.String name, Output<java.lang.String> id, @Nullable SegmentV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("openstack:networking/segmentV2:SegmentV2", name, state, makeResourceOptions(options, id), false);
    }

    private static SegmentV2Args makeArgs(SegmentV2Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SegmentV2Args.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SegmentV2 get(java.lang.String name, Output<java.lang.String> id, @Nullable SegmentV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SegmentV2(name, id, state, options);
    }
}
