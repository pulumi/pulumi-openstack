// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.dns.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetZoneShareV2Result {
    /**
     * @return See Argument Reference above.
     * 
     */
    private @Nullable String allProjects;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return See Argument Reference above.
     * 
     */
    private @Nullable String projectId;
    /**
     * @return See Argument Reference above.
     * 
     */
    private String region;
    /**
     * @return The ID of the zone share.
     * 
     */
    private String shareId;
    /**
     * @return See Argument Reference above.
     * 
     */
    private @Nullable String targetProjectId;
    /**
     * @return See Argument Reference above.
     * 
     */
    private String zoneId;

    private GetZoneShareV2Result() {}
    /**
     * @return See Argument Reference above.
     * 
     */
    public Optional<String> allProjects() {
        return Optional.ofNullable(this.allProjects);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return The ID of the zone share.
     * 
     */
    public String shareId() {
        return this.shareId;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public Optional<String> targetProjectId() {
        return Optional.ofNullable(this.targetProjectId);
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZoneShareV2Result defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String allProjects;
        private String id;
        private @Nullable String projectId;
        private String region;
        private String shareId;
        private @Nullable String targetProjectId;
        private String zoneId;
        public Builder() {}
        public Builder(GetZoneShareV2Result defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allProjects = defaults.allProjects;
    	      this.id = defaults.id;
    	      this.projectId = defaults.projectId;
    	      this.region = defaults.region;
    	      this.shareId = defaults.shareId;
    	      this.targetProjectId = defaults.targetProjectId;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder allProjects(@Nullable String allProjects) {

            this.allProjects = allProjects;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetZoneShareV2Result", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(@Nullable String projectId) {

            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetZoneShareV2Result", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder shareId(String shareId) {
            if (shareId == null) {
              throw new MissingRequiredPropertyException("GetZoneShareV2Result", "shareId");
            }
            this.shareId = shareId;
            return this;
        }
        @CustomType.Setter
        public Builder targetProjectId(@Nullable String targetProjectId) {

            this.targetProjectId = targetProjectId;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetZoneShareV2Result", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetZoneShareV2Result build() {
            final var _resultValue = new GetZoneShareV2Result();
            _resultValue.allProjects = allProjects;
            _resultValue.id = id;
            _resultValue.projectId = projectId;
            _resultValue.region = region;
            _resultValue.shareId = shareId;
            _resultValue.targetProjectId = targetProjectId;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
