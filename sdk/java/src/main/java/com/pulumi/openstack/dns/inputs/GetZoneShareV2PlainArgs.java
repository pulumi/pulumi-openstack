// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.dns.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetZoneShareV2PlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetZoneShareV2PlainArgs Empty = new GetZoneShareV2PlainArgs();

    /**
     * If set to `true`, the data source will search
     * across all projects. If set to `false`, it will only search within the
     * current project. Defaults to `false`.
     * 
     */
    @Import(name="allProjects")
    private @Nullable String allProjects;

    /**
     * @return If set to `true`, the data source will search
     * across all projects. If set to `false`, it will only search within the
     * current project. Defaults to `false`.
     * 
     */
    public Optional<String> allProjects() {
        return Optional.ofNullable(this.allProjects);
    }

    /**
     * The owner project ID. If omitted, it is derived
     * from the zone share details.
     * 
     */
    @Import(name="projectId")
    private @Nullable String projectId;

    /**
     * @return The owner project ID. If omitted, it is derived
     * from the zone share details.
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * The region in which to obtain the V2 DNS client. If
     * omitted, the `region` argument of the provider is used. Changing this creates
     * a new DNS zone share data source.
     * 
     */
    @Import(name="region")
    private @Nullable String region;

    /**
     * @return The region in which to obtain the V2 DNS client. If
     * omitted, the `region` argument of the provider is used. Changing this creates
     * a new DNS zone share data source.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The ID of the DNS zone share to retrieve. If
     * provided, the data source returns only the share with this ID.
     * 
     */
    @Import(name="shareId")
    private @Nullable String shareId;

    /**
     * @return The ID of the DNS zone share to retrieve. If
     * provided, the data source returns only the share with this ID.
     * 
     */
    public Optional<String> shareId() {
        return Optional.ofNullable(this.shareId);
    }

    /**
     * If provided, the data source returns the
     * share with this target project ID.
     * 
     */
    @Import(name="targetProjectId")
    private @Nullable String targetProjectId;

    /**
     * @return If provided, the data source returns the
     * share with this target project ID.
     * 
     */
    public Optional<String> targetProjectId() {
        return Optional.ofNullable(this.targetProjectId);
    }

    /**
     * The ID of the DNS zone for which to get share.
     * 
     */
    @Import(name="zoneId", required=true)
    private String zoneId;

    /**
     * @return The ID of the DNS zone for which to get share.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    private GetZoneShareV2PlainArgs() {}

    private GetZoneShareV2PlainArgs(GetZoneShareV2PlainArgs $) {
        this.allProjects = $.allProjects;
        this.projectId = $.projectId;
        this.region = $.region;
        this.shareId = $.shareId;
        this.targetProjectId = $.targetProjectId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetZoneShareV2PlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetZoneShareV2PlainArgs $;

        public Builder() {
            $ = new GetZoneShareV2PlainArgs();
        }

        public Builder(GetZoneShareV2PlainArgs defaults) {
            $ = new GetZoneShareV2PlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allProjects If set to `true`, the data source will search
         * across all projects. If set to `false`, it will only search within the
         * current project. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder allProjects(@Nullable String allProjects) {
            $.allProjects = allProjects;
            return this;
        }

        /**
         * @param projectId The owner project ID. If omitted, it is derived
         * from the zone share details.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable String projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param region The region in which to obtain the V2 DNS client. If
         * omitted, the `region` argument of the provider is used. Changing this creates
         * a new DNS zone share data source.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable String region) {
            $.region = region;
            return this;
        }

        /**
         * @param shareId The ID of the DNS zone share to retrieve. If
         * provided, the data source returns only the share with this ID.
         * 
         * @return builder
         * 
         */
        public Builder shareId(@Nullable String shareId) {
            $.shareId = shareId;
            return this;
        }

        /**
         * @param targetProjectId If provided, the data source returns the
         * share with this target project ID.
         * 
         * @return builder
         * 
         */
        public Builder targetProjectId(@Nullable String targetProjectId) {
            $.targetProjectId = targetProjectId;
            return this;
        }

        /**
         * @param zoneId The ID of the DNS zone for which to get share.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        public GetZoneShareV2PlainArgs build() {
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("GetZoneShareV2PlainArgs", "zoneId");
            }
            return $;
        }
    }

}
