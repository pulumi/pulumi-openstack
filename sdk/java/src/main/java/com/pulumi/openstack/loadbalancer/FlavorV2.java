// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.loadbalancer;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.openstack.Utilities;
import com.pulumi.openstack.loadbalancer.FlavorV2Args;
import com.pulumi.openstack.loadbalancer.inputs.FlavorV2State;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a V2 load balancer flavor resource within OpenStack.
 * 
 * &gt; **Note:** This usually requires admin privileges.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.openstack.loadbalancer.FlavorprofileV2;
 * import com.pulumi.openstack.loadbalancer.FlavorprofileV2Args;
 * import com.pulumi.openstack.loadbalancer.FlavorV2;
 * import com.pulumi.openstack.loadbalancer.FlavorV2Args;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var fp1 = new FlavorprofileV2("fp1", FlavorprofileV2Args.builder()
 *             .name("test")
 *             .providerName("amphora")
 *             .flavorData(serializeJson(
 *                 jsonObject(
 *                     jsonProperty("loadbalancer_topology", "ACTIVE_STANDBY")
 *                 )))
 *             .build());
 * 
 *         var flavor1 = new FlavorV2("flavor1", FlavorV2Args.builder()
 *             .name("test")
 *             .description("This is a test flavor")
 *             .flavorProfileId(fp1.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * flavors can be imported using their `id`. Example:
 * 
 * ```sh
 * $ pulumi import openstack:loadbalancer/flavorV2:FlavorV2 flavor_1 2a0f2240-c5e6-41de-896d-e80d97428d6b
 * ```
 * 
 */
@ResourceType(type="openstack:loadbalancer/flavorV2:FlavorV2")
public class FlavorV2 extends com.pulumi.resources.CustomResource {
    /**
     * The description of the flavor. Changing this
     * updates the existing flavor.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the flavor. Changing this
     * updates the existing flavor.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Whether the flavor is enabled or not. Defaults to `true`.
     * Changing this updates the existing flavor.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    /**
     * @return Whether the flavor is enabled or not. Defaults to `true`.
     * Changing this updates the existing flavor.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * The flavorProfileId that the flavor
     * will use. Changing this creates a new flavor.
     * 
     */
    @Export(name="flavorProfileId", refs={String.class}, tree="[0]")
    private Output<String> flavorProfileId;

    /**
     * @return The flavorProfileId that the flavor
     * will use. Changing this creates a new flavor.
     * 
     */
    public Output<String> flavorProfileId() {
        return this.flavorProfileId;
    }
    /**
     * Name of the flavor. Changing this updates the existing
     * flavor.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the flavor. Changing this updates the existing
     * flavor.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create an LB member. If omitted, the
     * `region` argument of the provider is used. Changing this creates a new
     * LB flavor.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create an LB member. If omitted, the
     * `region` argument of the provider is used. Changing this creates a new
     * LB flavor.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FlavorV2(java.lang.String name) {
        this(name, FlavorV2Args.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FlavorV2(java.lang.String name, FlavorV2Args args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FlavorV2(java.lang.String name, FlavorV2Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("openstack:loadbalancer/flavorV2:FlavorV2", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private FlavorV2(java.lang.String name, Output<java.lang.String> id, @Nullable FlavorV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("openstack:loadbalancer/flavorV2:FlavorV2", name, state, makeResourceOptions(options, id), false);
    }

    private static FlavorV2Args makeArgs(FlavorV2Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FlavorV2Args.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FlavorV2 get(java.lang.String name, Output<java.lang.String> id, @Nullable FlavorV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FlavorV2(name, id, state, options);
    }
}
