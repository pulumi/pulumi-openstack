// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.identity.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetUserResult {
    /**
     * @return See Argument Reference above.
     * 
     */
    private String defaultProjectId;
    /**
     * @return A description of the user.
     * 
     */
    private String description;
    /**
     * @return See Argument Reference above.
     * 
     */
    private String domainId;
    /**
     * @return See Argument Reference above.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return See Argument Reference above.
     * 
     */
    private @Nullable String idpId;
    /**
     * @return See Argument Reference above.
     * 
     */
    private @Nullable String name;
    /**
     * @return See Argument Reference above.
     * 
     */
    private @Nullable String passwordExpiresAt;
    /**
     * @return See Argument Reference above.
     * 
     */
    private @Nullable String protocolId;
    /**
     * @return The region the user is located in.
     * 
     */
    private String region;
    /**
     * @return See Argument Reference above.
     * 
     */
    private @Nullable String uniqueId;

    private GetUserResult() {}
    /**
     * @return See Argument Reference above.
     * 
     */
    public String defaultProjectId() {
        return this.defaultProjectId;
    }
    /**
     * @return A description of the user.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public String domainId() {
        return this.domainId;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public Optional<String> idpId() {
        return Optional.ofNullable(this.idpId);
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public Optional<String> passwordExpiresAt() {
        return Optional.ofNullable(this.passwordExpiresAt);
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public Optional<String> protocolId() {
        return Optional.ofNullable(this.protocolId);
    }
    /**
     * @return The region the user is located in.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public Optional<String> uniqueId() {
        return Optional.ofNullable(this.uniqueId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String defaultProjectId;
        private String description;
        private String domainId;
        private @Nullable Boolean enabled;
        private String id;
        private @Nullable String idpId;
        private @Nullable String name;
        private @Nullable String passwordExpiresAt;
        private @Nullable String protocolId;
        private String region;
        private @Nullable String uniqueId;
        public Builder() {}
        public Builder(GetUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultProjectId = defaults.defaultProjectId;
    	      this.description = defaults.description;
    	      this.domainId = defaults.domainId;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.idpId = defaults.idpId;
    	      this.name = defaults.name;
    	      this.passwordExpiresAt = defaults.passwordExpiresAt;
    	      this.protocolId = defaults.protocolId;
    	      this.region = defaults.region;
    	      this.uniqueId = defaults.uniqueId;
        }

        @CustomType.Setter
        public Builder defaultProjectId(String defaultProjectId) {
            this.defaultProjectId = Objects.requireNonNull(defaultProjectId);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder domainId(String domainId) {
            this.domainId = Objects.requireNonNull(domainId);
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder idpId(@Nullable String idpId) {
            this.idpId = idpId;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder passwordExpiresAt(@Nullable String passwordExpiresAt) {
            this.passwordExpiresAt = passwordExpiresAt;
            return this;
        }
        @CustomType.Setter
        public Builder protocolId(@Nullable String protocolId) {
            this.protocolId = protocolId;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        @CustomType.Setter
        public Builder uniqueId(@Nullable String uniqueId) {
            this.uniqueId = uniqueId;
            return this;
        }
        public GetUserResult build() {
            final var _resultValue = new GetUserResult();
            _resultValue.defaultProjectId = defaultProjectId;
            _resultValue.description = description;
            _resultValue.domainId = domainId;
            _resultValue.enabled = enabled;
            _resultValue.id = id;
            _resultValue.idpId = idpId;
            _resultValue.name = name;
            _resultValue.passwordExpiresAt = passwordExpiresAt;
            _resultValue.protocolId = protocolId;
            _resultValue.region = region;
            _resultValue.uniqueId = uniqueId;
            return _resultValue;
        }
    }
}
