// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.keymanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContainerV1SecretRefArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerV1SecretRefArgs Empty = new ContainerV1SecretRefArgs();

    /**
     * The name of the secret reference. The reference names must correspond the container type, more details are available [here](https://docs.openstack.org/barbican/stein/api/reference/containers.html).
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the secret reference. The reference names must correspond the container type, more details are available [here](https://docs.openstack.org/barbican/stein/api/reference/containers.html).
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The secret reference / where to find the secret, URL.
     * 
     */
    @Import(name="secretRef", required=true)
    private Output<String> secretRef;

    /**
     * @return The secret reference / where to find the secret, URL.
     * 
     */
    public Output<String> secretRef() {
        return this.secretRef;
    }

    private ContainerV1SecretRefArgs() {}

    private ContainerV1SecretRefArgs(ContainerV1SecretRefArgs $) {
        this.name = $.name;
        this.secretRef = $.secretRef;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerV1SecretRefArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerV1SecretRefArgs $;

        public Builder() {
            $ = new ContainerV1SecretRefArgs();
        }

        public Builder(ContainerV1SecretRefArgs defaults) {
            $ = new ContainerV1SecretRefArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the secret reference. The reference names must correspond the container type, more details are available [here](https://docs.openstack.org/barbican/stein/api/reference/containers.html).
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the secret reference. The reference names must correspond the container type, more details are available [here](https://docs.openstack.org/barbican/stein/api/reference/containers.html).
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param secretRef The secret reference / where to find the secret, URL.
         * 
         * @return builder
         * 
         */
        public Builder secretRef(Output<String> secretRef) {
            $.secretRef = secretRef;
            return this;
        }

        /**
         * @param secretRef The secret reference / where to find the secret, URL.
         * 
         * @return builder
         * 
         */
        public Builder secretRef(String secretRef) {
            return secretRef(Output.of(secretRef));
        }

        public ContainerV1SecretRefArgs build() {
            if ($.secretRef == null) {
                throw new MissingRequiredPropertyException("ContainerV1SecretRefArgs", "secretRef");
            }
            return $;
        }
    }

}
