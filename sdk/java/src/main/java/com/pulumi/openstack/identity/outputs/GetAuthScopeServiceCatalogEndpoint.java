// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAuthScopeServiceCatalogEndpoint {
    /**
     * @return The ID of the endpoint.
     * 
     */
    private String id;
    /**
     * @return The interface of the endpoint.
     * 
     */
    private String interface_;
    /**
     * @return The region in which to obtain the V3 Identity client.
     * A Identity client is needed to retrieve tokens IDs. If omitted, the
     * `region` argument of the provider is used.
     * 
     */
    private String region;
    /**
     * @return The region ID of the endpoint.
     * 
     */
    private String regionId;
    /**
     * @return The URL of the endpoint.
     * 
     */
    private String url;

    private GetAuthScopeServiceCatalogEndpoint() {}
    /**
     * @return The ID of the endpoint.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The interface of the endpoint.
     * 
     */
    public String interface_() {
        return this.interface_;
    }
    /**
     * @return The region in which to obtain the V3 Identity client.
     * A Identity client is needed to retrieve tokens IDs. If omitted, the
     * `region` argument of the provider is used.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return The region ID of the endpoint.
     * 
     */
    public String regionId() {
        return this.regionId;
    }
    /**
     * @return The URL of the endpoint.
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuthScopeServiceCatalogEndpoint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String interface_;
        private String region;
        private String regionId;
        private String url;
        public Builder() {}
        public Builder(GetAuthScopeServiceCatalogEndpoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.interface_ = defaults.interface_;
    	      this.region = defaults.region;
    	      this.regionId = defaults.regionId;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAuthScopeServiceCatalogEndpoint", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter("interface")
        public Builder interface_(String interface_) {
            if (interface_ == null) {
              throw new MissingRequiredPropertyException("GetAuthScopeServiceCatalogEndpoint", "interface_");
            }
            this.interface_ = interface_;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetAuthScopeServiceCatalogEndpoint", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder regionId(String regionId) {
            if (regionId == null) {
              throw new MissingRequiredPropertyException("GetAuthScopeServiceCatalogEndpoint", "regionId");
            }
            this.regionId = regionId;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("GetAuthScopeServiceCatalogEndpoint", "url");
            }
            this.url = url;
            return this;
        }
        public GetAuthScopeServiceCatalogEndpoint build() {
            final var _resultValue = new GetAuthScopeServiceCatalogEndpoint();
            _resultValue.id = id;
            _resultValue.interface_ = interface_;
            _resultValue.region = region;
            _resultValue.regionId = regionId;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
