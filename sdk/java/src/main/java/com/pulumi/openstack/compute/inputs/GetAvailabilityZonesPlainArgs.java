// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.compute.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAvailabilityZonesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAvailabilityZonesPlainArgs Empty = new GetAvailabilityZonesPlainArgs();

    /**
     * The `region` to fetch availability zones from, defaults to the provider&#39;s `region`
     * 
     */
    @Import(name="region")
    private @Nullable String region;

    /**
     * @return The `region` to fetch availability zones from, defaults to the provider&#39;s `region`
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The `state` of the availability zones to match, default (&#34;available&#34;).
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return The `state` of the availability zones to match, default (&#34;available&#34;).
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private GetAvailabilityZonesPlainArgs() {}

    private GetAvailabilityZonesPlainArgs(GetAvailabilityZonesPlainArgs $) {
        this.region = $.region;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAvailabilityZonesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAvailabilityZonesPlainArgs $;

        public Builder() {
            $ = new GetAvailabilityZonesPlainArgs();
        }

        public Builder(GetAvailabilityZonesPlainArgs defaults) {
            $ = new GetAvailabilityZonesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param region The `region` to fetch availability zones from, defaults to the provider&#39;s `region`
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable String region) {
            $.region = region;
            return this;
        }

        /**
         * @param state The `state` of the availability zones to match, default (&#34;available&#34;).
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public GetAvailabilityZonesPlainArgs build() {
            return $;
        }
    }

}
