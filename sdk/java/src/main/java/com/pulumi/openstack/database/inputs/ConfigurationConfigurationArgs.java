// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigurationConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigurationConfigurationArgs Empty = new ConfigurationConfigurationArgs();

    /**
     * Configuration parameter name. Changing this creates a new resource.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Configuration parameter name. Changing this creates a new resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Whether or not to store configuration parameter value as string. Changing this creates a new resource. See the below note for more information.
     * 
     */
    @Import(name="stringType")
    private @Nullable Output<Boolean> stringType;

    /**
     * @return Whether or not to store configuration parameter value as string. Changing this creates a new resource. See the below note for more information.
     * 
     */
    public Optional<Output<Boolean>> stringType() {
        return Optional.ofNullable(this.stringType);
    }

    /**
     * Configuration parameter value. Changing this creates a new resource.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return Configuration parameter value. Changing this creates a new resource.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private ConfigurationConfigurationArgs() {}

    private ConfigurationConfigurationArgs(ConfigurationConfigurationArgs $) {
        this.name = $.name;
        this.stringType = $.stringType;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigurationConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigurationConfigurationArgs $;

        public Builder() {
            $ = new ConfigurationConfigurationArgs();
        }

        public Builder(ConfigurationConfigurationArgs defaults) {
            $ = new ConfigurationConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Configuration parameter name. Changing this creates a new resource.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Configuration parameter name. Changing this creates a new resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param stringType Whether or not to store configuration parameter value as string. Changing this creates a new resource. See the below note for more information.
         * 
         * @return builder
         * 
         */
        public Builder stringType(@Nullable Output<Boolean> stringType) {
            $.stringType = stringType;
            return this;
        }

        /**
         * @param stringType Whether or not to store configuration parameter value as string. Changing this creates a new resource. See the below note for more information.
         * 
         * @return builder
         * 
         */
        public Builder stringType(Boolean stringType) {
            return stringType(Output.of(stringType));
        }

        /**
         * @param value Configuration parameter value. Changing this creates a new resource.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Configuration parameter value. Changing this creates a new resource.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public ConfigurationConfigurationArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ConfigurationConfigurationArgs", "name");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("ConfigurationConfigurationArgs", "value");
            }
            return $;
        }
    }

}
