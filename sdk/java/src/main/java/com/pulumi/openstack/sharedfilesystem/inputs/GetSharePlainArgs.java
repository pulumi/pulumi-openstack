// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.sharedfilesystem.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSharePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSharePlainArgs Empty = new GetSharePlainArgs();

    /**
     * The human-readable description for the share.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return The human-readable description for the share.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The export location path of the share. Available
     * since Manila API version 2.35.
     * 
     */
    @Import(name="exportLocationPath")
    private @Nullable String exportLocationPath;

    /**
     * @return The export location path of the share. Available
     * since Manila API version 2.35.
     * 
     */
    public Optional<String> exportLocationPath() {
        return Optional.ofNullable(this.exportLocationPath);
    }

    /**
     * The level of visibility for the share.
     * length.
     * 
     */
    @Import(name="isPublic")
    private @Nullable Boolean isPublic;

    /**
     * @return The level of visibility for the share.
     * length.
     * 
     */
    public Optional<Boolean> isPublic() {
        return Optional.ofNullable(this.isPublic);
    }

    /**
     * One or more metadata key and value pairs as a dictionary of
     * strings.
     * 
     */
    @Import(name="metadata")
    private @Nullable Map<String,String> metadata;

    /**
     * @return One or more metadata key and value pairs as a dictionary of
     * strings.
     * 
     */
    public Optional<Map<String,String>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * The name of the share.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The name of the share.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The region in which to obtain the V2 Shared File System client.
     * 
     */
    @Import(name="region")
    private @Nullable String region;

    /**
     * @return The region in which to obtain the V2 Shared File System client.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The UUID of the share&#39;s share network.
     * 
     */
    @Import(name="shareNetworkId")
    private @Nullable String shareNetworkId;

    /**
     * @return The UUID of the share&#39;s share network.
     * 
     */
    public Optional<String> shareNetworkId() {
        return Optional.ofNullable(this.shareNetworkId);
    }

    /**
     * The UUID of the share&#39;s base snapshot.
     * 
     */
    @Import(name="snapshotId")
    private @Nullable String snapshotId;

    /**
     * @return The UUID of the share&#39;s base snapshot.
     * 
     */
    public Optional<String> snapshotId() {
        return Optional.ofNullable(this.snapshotId);
    }

    /**
     * A share status filter. A valid value is `creating`,
     * `error`, `available`, `deleting`, `error_deleting`, `manage_starting`,
     * `manage_error`, `unmanage_starting`, `unmanage_error`, `unmanaged`,
     * `extending`, `extending_error`, `shrinking`, `shrinking_error`, or
     * `shrinking_possible_data_loss_error`.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return A share status filter. A valid value is `creating`,
     * `error`, `available`, `deleting`, `error_deleting`, `manage_starting`,
     * `manage_error`, `unmanage_starting`, `unmanage_error`, `unmanaged`,
     * `extending`, `extending_error`, `shrinking`, `shrinking_error`, or
     * `shrinking_possible_data_loss_error`.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    private GetSharePlainArgs() {}

    private GetSharePlainArgs(GetSharePlainArgs $) {
        this.description = $.description;
        this.exportLocationPath = $.exportLocationPath;
        this.isPublic = $.isPublic;
        this.metadata = $.metadata;
        this.name = $.name;
        this.region = $.region;
        this.shareNetworkId = $.shareNetworkId;
        this.snapshotId = $.snapshotId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSharePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSharePlainArgs $;

        public Builder() {
            $ = new GetSharePlainArgs();
        }

        public Builder(GetSharePlainArgs defaults) {
            $ = new GetSharePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The human-readable description for the share.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param exportLocationPath The export location path of the share. Available
         * since Manila API version 2.35.
         * 
         * @return builder
         * 
         */
        public Builder exportLocationPath(@Nullable String exportLocationPath) {
            $.exportLocationPath = exportLocationPath;
            return this;
        }

        /**
         * @param isPublic The level of visibility for the share.
         * length.
         * 
         * @return builder
         * 
         */
        public Builder isPublic(@Nullable Boolean isPublic) {
            $.isPublic = isPublic;
            return this;
        }

        /**
         * @param metadata One or more metadata key and value pairs as a dictionary of
         * strings.
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Map<String,String> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param name The name of the share.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param region The region in which to obtain the V2 Shared File System client.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable String region) {
            $.region = region;
            return this;
        }

        /**
         * @param shareNetworkId The UUID of the share&#39;s share network.
         * 
         * @return builder
         * 
         */
        public Builder shareNetworkId(@Nullable String shareNetworkId) {
            $.shareNetworkId = shareNetworkId;
            return this;
        }

        /**
         * @param snapshotId The UUID of the share&#39;s base snapshot.
         * 
         * @return builder
         * 
         */
        public Builder snapshotId(@Nullable String snapshotId) {
            $.snapshotId = snapshotId;
            return this;
        }

        /**
         * @param status A share status filter. A valid value is `creating`,
         * `error`, `available`, `deleting`, `error_deleting`, `manage_starting`,
         * `manage_error`, `unmanage_starting`, `unmanage_error`, `unmanaged`,
         * `extending`, `extending_error`, `shrinking`, `shrinking_error`, or
         * `shrinking_possible_data_loss_error`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public GetSharePlainArgs build() {
            return $;
        }
    }

}
