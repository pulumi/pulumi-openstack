// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.compute.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAggregateV2PlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAggregateV2PlainArgs Empty = new GetAggregateV2PlainArgs();

    /**
     * List of Hypervisors contained in the Host Aggregate
     * 
     */
    @Import(name="hosts")
    private @Nullable List<String> hosts;

    /**
     * @return List of Hypervisors contained in the Host Aggregate
     * 
     */
    public Optional<List<String>> hosts() {
        return Optional.ofNullable(this.hosts);
    }

    /**
     * Metadata of the Host Aggregate
     * 
     */
    @Import(name="metadata")
    private @Nullable Map<String,String> metadata;

    /**
     * @return Metadata of the Host Aggregate
     * 
     */
    public Optional<Map<String,String>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * The name of the host aggregate
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the host aggregate
     * 
     */
    public String name() {
        return this.name;
    }

    private GetAggregateV2PlainArgs() {}

    private GetAggregateV2PlainArgs(GetAggregateV2PlainArgs $) {
        this.hosts = $.hosts;
        this.metadata = $.metadata;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAggregateV2PlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAggregateV2PlainArgs $;

        public Builder() {
            $ = new GetAggregateV2PlainArgs();
        }

        public Builder(GetAggregateV2PlainArgs defaults) {
            $ = new GetAggregateV2PlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hosts List of Hypervisors contained in the Host Aggregate
         * 
         * @return builder
         * 
         */
        public Builder hosts(@Nullable List<String> hosts) {
            $.hosts = hosts;
            return this;
        }

        /**
         * @param hosts List of Hypervisors contained in the Host Aggregate
         * 
         * @return builder
         * 
         */
        public Builder hosts(String... hosts) {
            return hosts(List.of(hosts));
        }

        /**
         * @param metadata Metadata of the Host Aggregate
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Map<String,String> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param name The name of the host aggregate
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public GetAggregateV2PlainArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetAggregateV2PlainArgs", "name");
            }
            return $;
        }
    }

}
