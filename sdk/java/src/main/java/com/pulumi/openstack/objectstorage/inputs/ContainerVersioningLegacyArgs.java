// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.objectstorage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ContainerVersioningLegacyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerVersioningLegacyArgs Empty = new ContainerVersioningLegacyArgs();

    @Import(name="location", required=true)
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private ContainerVersioningLegacyArgs() {}

    private ContainerVersioningLegacyArgs(ContainerVersioningLegacyArgs $) {
        this.location = $.location;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerVersioningLegacyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerVersioningLegacyArgs $;

        public Builder() {
            $ = new ContainerVersioningLegacyArgs();
        }

        public Builder(ContainerVersioningLegacyArgs defaults) {
            $ = new ContainerVersioningLegacyArgs(Objects.requireNonNull(defaults));
        }

        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ContainerVersioningLegacyArgs build() {
            if ($.location == null) {
                throw new MissingRequiredPropertyException("ContainerVersioningLegacyArgs", "location");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("ContainerVersioningLegacyArgs", "type");
            }
            return $;
        }
    }

}
