// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.networking.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkSegmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkSegmentArgs Empty = new NetworkSegmentArgs();

    /**
     * The type of physical network.
     * 
     */
    @Import(name="networkType")
    private @Nullable Output<String> networkType;

    /**
     * @return The type of physical network.
     * 
     */
    public Optional<Output<String>> networkType() {
        return Optional.ofNullable(this.networkType);
    }

    /**
     * The physical network where this network is implemented.
     * 
     */
    @Import(name="physicalNetwork")
    private @Nullable Output<String> physicalNetwork;

    /**
     * @return The physical network where this network is implemented.
     * 
     */
    public Optional<Output<String>> physicalNetwork() {
        return Optional.ofNullable(this.physicalNetwork);
    }

    /**
     * An isolated segment on the physical network.
     * 
     */
    @Import(name="segmentationId")
    private @Nullable Output<Integer> segmentationId;

    /**
     * @return An isolated segment on the physical network.
     * 
     */
    public Optional<Output<Integer>> segmentationId() {
        return Optional.ofNullable(this.segmentationId);
    }

    private NetworkSegmentArgs() {}

    private NetworkSegmentArgs(NetworkSegmentArgs $) {
        this.networkType = $.networkType;
        this.physicalNetwork = $.physicalNetwork;
        this.segmentationId = $.segmentationId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkSegmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkSegmentArgs $;

        public Builder() {
            $ = new NetworkSegmentArgs();
        }

        public Builder(NetworkSegmentArgs defaults) {
            $ = new NetworkSegmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkType The type of physical network.
         * 
         * @return builder
         * 
         */
        public Builder networkType(@Nullable Output<String> networkType) {
            $.networkType = networkType;
            return this;
        }

        /**
         * @param networkType The type of physical network.
         * 
         * @return builder
         * 
         */
        public Builder networkType(String networkType) {
            return networkType(Output.of(networkType));
        }

        /**
         * @param physicalNetwork The physical network where this network is implemented.
         * 
         * @return builder
         * 
         */
        public Builder physicalNetwork(@Nullable Output<String> physicalNetwork) {
            $.physicalNetwork = physicalNetwork;
            return this;
        }

        /**
         * @param physicalNetwork The physical network where this network is implemented.
         * 
         * @return builder
         * 
         */
        public Builder physicalNetwork(String physicalNetwork) {
            return physicalNetwork(Output.of(physicalNetwork));
        }

        /**
         * @param segmentationId An isolated segment on the physical network.
         * 
         * @return builder
         * 
         */
        public Builder segmentationId(@Nullable Output<Integer> segmentationId) {
            $.segmentationId = segmentationId;
            return this;
        }

        /**
         * @param segmentationId An isolated segment on the physical network.
         * 
         * @return builder
         * 
         */
        public Builder segmentationId(Integer segmentationId) {
            return segmentationId(Output.of(segmentationId));
        }

        public NetworkSegmentArgs build() {
            return $;
        }
    }

}
