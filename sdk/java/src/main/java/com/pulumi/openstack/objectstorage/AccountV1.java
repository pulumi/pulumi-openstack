// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.objectstorage;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.openstack.Utilities;
import com.pulumi.openstack.objectstorage.AccountV1Args;
import com.pulumi.openstack.objectstorage.inputs.AccountV1State;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a V1 account resource within OpenStack.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.openstack.objectstorage.AccountV1;
 * import com.pulumi.openstack.objectstorage.AccountV1Args;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var account1 = new AccountV1("account1", AccountV1Args.builder()
 *             .region("RegionOne")
 *             .metadata(Map.ofEntries(
 *                 Map.entry("Temp-Url-Key", "testkey"),
 *                 Map.entry("test", "true")
 *             ))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * This resource can be imported by specifying the project ID of the account:
 * 
 * ```sh
 * $ pulumi import openstack:objectstorage/accountV1:AccountV1 account_1 1202b3d0aaa44cfc8b79475c007b0711
 * ```
 * 
 */
@ResourceType(type="openstack:objectstorage/accountV1:AccountV1")
public class AccountV1 extends com.pulumi.resources.CustomResource {
    /**
     * The number of bytes used by the account.
     * 
     */
    @Export(name="bytesUsed", refs={Integer.class}, tree="[0]")
    private Output<Integer> bytesUsed;

    /**
     * @return The number of bytes used by the account.
     * 
     */
    public Output<Integer> bytesUsed() {
        return this.bytesUsed;
    }
    /**
     * The number of containers in the account.
     * 
     */
    @Export(name="containerCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> containerCount;

    /**
     * @return The number of containers in the account.
     * 
     */
    public Output<Integer> containerCount() {
        return this.containerCount;
    }
    /**
     * A map of headers returned for the account.
     * 
     */
    @Export(name="headers", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> headers;

    /**
     * @return A map of headers returned for the account.
     * 
     */
    public Output<Map<String,String>> headers() {
        return this.headers;
    }
    /**
     * A map of custom key/value pairs to associate with the
     * account metadata. Changing the `Quota-Bytes` key value is allowed to be
     * updated only by the cloud administrator.
     * 
     */
    @Export(name="metadata", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> metadata;

    /**
     * @return A map of custom key/value pairs to associate with the
     * account metadata. Changing the `Quota-Bytes` key value is allowed to be
     * updated only by the cloud administrator.
     * 
     */
    public Output<Optional<Map<String,String>>> metadata() {
        return Codegen.optional(this.metadata);
    }
    /**
     * The number of objects in the account.
     * 
     */
    @Export(name="objectCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> objectCount;

    /**
     * @return The number of objects in the account.
     * 
     */
    public Output<Integer> objectCount() {
        return this.objectCount;
    }
    /**
     * The project ID of the corresponding account. If
     * omitted, the token&#39;s project ID is used. Changing this creates a new account.
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output<String> projectId;

    /**
     * @return The project ID of the corresponding account. If
     * omitted, the token&#39;s project ID is used. Changing this creates a new account.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * The number of bytes allowed for the account.
     * 
     */
    @Export(name="quotaBytes", refs={Integer.class}, tree="[0]")
    private Output<Integer> quotaBytes;

    /**
     * @return The number of bytes allowed for the account.
     * 
     */
    public Output<Integer> quotaBytes() {
        return this.quotaBytes;
    }
    /**
     * The region in which to create the account. If omitted,
     * the `region` argument of the provider is used. Changing this creates a new
     * account.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return The region in which to create the account. If omitted,
     * the `region` argument of the provider is used. Changing this creates a new
     * account.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AccountV1(java.lang.String name) {
        this(name, AccountV1Args.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AccountV1(java.lang.String name, @Nullable AccountV1Args args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AccountV1(java.lang.String name, @Nullable AccountV1Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("openstack:objectstorage/accountV1:AccountV1", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AccountV1(java.lang.String name, Output<java.lang.String> id, @Nullable AccountV1State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("openstack:objectstorage/accountV1:AccountV1", name, state, makeResourceOptions(options, id), false);
    }

    private static AccountV1Args makeArgs(@Nullable AccountV1Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AccountV1Args.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AccountV1 get(java.lang.String name, Output<java.lang.String> id, @Nullable AccountV1State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AccountV1(name, id, state, options);
    }
}
