// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.networking;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.openstack.Utilities;
import com.pulumi.openstack.networking.RouterRoutesV2Args;
import com.pulumi.openstack.networking.inputs.RouterRoutesV2State;
import com.pulumi.openstack.networking.outputs.RouterRoutesV2Route;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates routing entries on a OpenStack V2 router.
 * 
 * &gt; **Note:** This resource uses the OpenStack Neutron `extraroute-atomic`
 * extension. If your environment does not have this extension, you should use the
 * `openstack.networking.RouterRoute` resource to add routes instead.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.openstack.networking.Router;
 * import com.pulumi.openstack.networking.RouterArgs;
 * import com.pulumi.openstack.networking.Network;
 * import com.pulumi.openstack.networking.NetworkArgs;
 * import com.pulumi.openstack.networking.Subnet;
 * import com.pulumi.openstack.networking.SubnetArgs;
 * import com.pulumi.openstack.networking.RouterInterface;
 * import com.pulumi.openstack.networking.RouterInterfaceArgs;
 * import com.pulumi.openstack.networking.RouterRoutesV2;
 * import com.pulumi.openstack.networking.RouterRoutesV2Args;
 * import com.pulumi.openstack.networking.inputs.RouterRoutesV2RouteArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var router1 = new Router("router1", RouterArgs.builder()
 *             .name("router_1")
 *             .adminStateUp(true)
 *             .build());
 * 
 *         var network1 = new Network("network1", NetworkArgs.builder()
 *             .name("network_1")
 *             .adminStateUp(true)
 *             .build());
 * 
 *         var subnet1 = new Subnet("subnet1", SubnetArgs.builder()
 *             .networkId(network1.id())
 *             .cidr("192.168.199.0/24")
 *             .ipVersion(4)
 *             .build());
 * 
 *         var int1 = new RouterInterface("int1", RouterInterfaceArgs.builder()
 *             .routerId(router1.id())
 *             .subnetId(subnet1.id())
 *             .build());
 * 
 *         var routerRoutes1 = new RouterRoutesV2("routerRoutes1", RouterRoutesV2Args.builder()
 *             .routerId(int1.routerId())
 *             .routes(            
 *                 RouterRoutesV2RouteArgs.builder()
 *                     .destinationCidr("10.0.1.0/24")
 *                     .nextHop("192.168.199.254")
 *                     .build(),
 *                 RouterRoutesV2RouteArgs.builder()
 *                     .destinationCidr("10.0.2.0/24")
 *                     .nextHop("192.168.199.254")
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Notes
 * 
 * The `nextHop` IP address must be directly reachable from the router at the
 * ``openstack.networking.RouterRoutesV2`` resource creation time.  You can
 * ensure that by explicitly specifying a dependency on the
 * ``openstack.networking.RouterInterface`` resource that connects the next
 * hop to the router, as in the example above.
 * 
 * ## Import
 * 
 * Routing entries can be imported using a router `id`:
 * 
 * ```sh
 * $ pulumi import openstack:networking/routerRoutesV2:RouterRoutesV2 router_routes_1 686fe248-386c-4f70-9f6c-281607dad079
 * ```
 * 
 */
@ResourceType(type="openstack:networking/routerRoutesV2:RouterRoutesV2")
public class RouterRoutesV2 extends com.pulumi.resources.CustomResource {
    /**
     * The region in which to obtain the V2 networking client.
     * A networking client is needed to configure routing entres on a router. If
     * omitted, the `region` argument of the provider is used. Changing this creates
     * new routing entries.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return The region in which to obtain the V2 networking client.
     * A networking client is needed to configure routing entres on a router. If
     * omitted, the `region` argument of the provider is used. Changing this creates
     * new routing entries.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * ID of the router these routing entries belong to.
     * Changing this creates new routing entries.
     * 
     */
    @Export(name="routerId", refs={String.class}, tree="[0]")
    private Output<String> routerId;

    /**
     * @return ID of the router these routing entries belong to.
     * Changing this creates new routing entries.
     * 
     */
    public Output<String> routerId() {
        return this.routerId;
    }
    /**
     * A set of routing entries to add to the router.
     * 
     */
    @Export(name="routes", refs={List.class,RouterRoutesV2Route.class}, tree="[0,1]")
    private Output</* @Nullable */ List<RouterRoutesV2Route>> routes;

    /**
     * @return A set of routing entries to add to the router.
     * 
     */
    public Output<Optional<List<RouterRoutesV2Route>>> routes() {
        return Codegen.optional(this.routes);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RouterRoutesV2(java.lang.String name) {
        this(name, RouterRoutesV2Args.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RouterRoutesV2(java.lang.String name, RouterRoutesV2Args args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RouterRoutesV2(java.lang.String name, RouterRoutesV2Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("openstack:networking/routerRoutesV2:RouterRoutesV2", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RouterRoutesV2(java.lang.String name, Output<java.lang.String> id, @Nullable RouterRoutesV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("openstack:networking/routerRoutesV2:RouterRoutesV2", name, state, makeResourceOptions(options, id), false);
    }

    private static RouterRoutesV2Args makeArgs(RouterRoutesV2Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RouterRoutesV2Args.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RouterRoutesV2 get(java.lang.String name, Output<java.lang.String> id, @Nullable RouterRoutesV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RouterRoutesV2(name, id, state, options);
    }
}
